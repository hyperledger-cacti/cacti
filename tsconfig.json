{
  "files": [],
  "references": [
    {
      "path": "./packages/cactus-api-client/tsconfig.json"
    },
    {
      "path": "./packages/cactus-cmd-api-server/tsconfig.json"
    },
    {
      "path": "./packages/cactus-cmd-socketio-server/tsconfig.json"
    },
    {
      "path": "./packages/cactus-common/tsconfig.json"
    },
    {
      "path": "./packages/cactus-core/tsconfig.json"
    },
    {
      "path": "./packages/cactus-core-api/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-consortium-manual/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-htlc-eth-besu/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-htlc-eth-besu-erc20/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-keychain-aws-sm/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-keychain-azure-kv/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-keychain-google-sm/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-keychain-memory/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-keychain-memory-wasm/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-keychain-vault/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-ledger-connector-besu/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-ledger-connector-corda/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-ledger-connector-quorum/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-ledger-connector-fabric/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-ledger-connector-fabric-socketio/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-ledger-connector-go-ethereum-socketio/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-ledger-connector-iroha/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-ledger-connector-xdai/tsconfig.json"
    },
    {
      "path": "./packages/cactus-test-api-client/tsconfig.json"
    },
    {
      "path": "./packages/cactus-test-cmd-api-server/tsconfig.json"
    },
    {
      "path": "./packages/cactus-test-plugin-consortium-manual/tsconfig.json"
    },
    {
      "path": "./packages/cactus-test-plugin-htlc-eth-besu/tsconfig.json"
    },
    {
      "path": "./packages/cactus-test-plugin-htlc-eth-besu-erc20/tsconfig.json"
    },
    {
      "path": "./packages/cactus-test-plugin-ledger-connector-besu/tsconfig.json"
    },
    {
      "path": "./packages/cactus-test-plugin-ledger-connector-quorum/tsconfig.json"
    },
    {
      "path": "./packages/cactus-plugin-ledger-connector-sawtooth-socketio/tsconfig.json"
    },
    {
      "path": "./packages/cactus-test-tooling/tsconfig.json"
    },
    {
      "path": "./examples/cactus-example-carbon-accounting-backend/tsconfig.json"
    },
    {
      "path": "./examples/cactus-example-carbon-accounting-business-logic-plugin/tsconfig.json"
    },
    {
      "path": "./examples/cactus-example-carbon-accounting-frontend/tsconfig.json"
    },
    {
      "path": "./examples/cactus-example-supply-chain-backend/tsconfig.json"
    },
    {
      "path": "./examples/cactus-example-supply-chain-business-logic-plugin/tsconfig.json"
    },
    {
      "path": "./examples/cactus-example-supply-chain-frontend/tsconfig.json"
    },
    {
      "path": "./extensions/cactus-plugin-object-store-ipfs/tsconfig.json"
    },
    {
      "path": "./extensions/cactus-plugin-htlc-coordinator-besu/tsconfig.json"
    }
  ],
  "compilerOptions": {
    "incremental": true,
    "target": "ES2017",
    "module": "CommonJS",
    "lib": [
      "es2015",
      "es2016",
      "es2017",
      "es2019",
      "dom"
    ] /* Specify library files to be included in the compilation. */,
    // "allowJs": true,                       /* Allow javascript files to be compiled. */
    // "checkJs": true,                       /* Report errors in .js files. */
    // "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "declaration": true, /* Generates corresponding '.d.ts' file. */
    // "declarationDir": "dist/lib",
    // "declarationMap": true,                /* Generates a sourcemap for each corresponding '.d.ts' file. */
    // "sourceMap": true, /* Generates corresponding '.map' file. */
    // "outFile": "./",                       /* Concatenate and emit output to single file. */
    // "outDir": "./dist/lib/",
    // "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    // "composite": true,                     /* Enable project compilation */
    // "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */
    "removeComments": false /* Do not emit comments to output. */,
    // "noEmit": true,                        /* Do not emit outputs. */
    // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    /* Strict Type-Checking Options */
    "strict": true /* Enable all strict type-checking options. */,
    // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,              /* Enable strict null checks. */
    // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
    // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
    /* Additional Checks */
    // "noUnusedLocals": true,                /* Report errors on unused locals. */
    // "noUnusedParameters": true,            /* Report errors on unused parameters. */
    // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */
    /* Module Resolution Options */
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "resolveJsonModule": true /* When true allows the importing of json files in Typescript code */,
    // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    "typeRoots": [
      "./node_modules/@types",
      "./typings"
    ],
    "esModuleInterop": true,
    "inlineSourceMap": true,
    "forceConsistentCasingInFileNames": true
  }
}