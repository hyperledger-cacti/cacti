buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "java"
    id "idea"
    id "maven-publish"
}

apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.quasar-utils'

repositories {
    if (github_url == "") {
        println("Fetching Locally built Weaver packages.")
        flatDir {
            dirs '../../../../common/protos-java-kt/build/libs'
        }
    }
}

cordapp {
    targetPlatformVersion corda_platform_version
    minimumPlatformVersion corda_platform_version
    workflow {
        name "Interoperability Flows"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOny
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'com.google.code.gson:gson:2.9.1'

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation project(":test-cordapp")

    implementation "io.arrow-kt:arrow-core:$arrow_version"
    implementation "io.arrow-kt:arrow-fx:$arrow_version"
    implementation "io.arrow-kt:arrow-syntax:$arrow_version"
    implementation "javax.xml.bind:jaxb-api:$jaxb_version"

    implementation "com.google.protobuf:protobuf-java:$protobuf_version"
    implementation "com.google.protobuf:protobuf-java-util:$protobuf_version"
    
    // weaver-protos
    implementation "org.hyperledger.cacti.weaver.protos:protos-java-kt:$cacti_version"

    // Corda dependencies.
    cordaProvided "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaRuntimeOnly "$corda_release_group:corda:$corda_release_version"

    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"
    testImplementation "$corda_core_release_group:corda-test-utils:$corda_core_release_version"
    testImplementation "$corda_core_release_group:corda-core-test-utils:$corda_core_release_version"

    // CorDapp dependencies.
    cordapp project(":interop-contracts")
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

publishing {
    publications {
        workflows(MavenPublication) {
            groupId = project.properties['group']
            artifactId = 'interop-workflows'
            version = project.properties['version']
            from components.cordapp
        }
    }
    repositories {
        maven {
            url github_url
            credentials {
                username github_username
                password github_password
            }
        }
    }
}

test {
    maxHeapSize = "4096m"
    jvmArgs = rootProject.ext.testJvmArgs
}
