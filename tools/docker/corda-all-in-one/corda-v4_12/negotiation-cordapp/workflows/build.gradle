apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'net.corda.plugins.cordformation'

cordapp {
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion corda_platform_version.toInteger()
    workflow {
        name "Negotiation CorDapp"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

sourceSets {
    test {
        resources {
            srcDir "../config/test"
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "junit:junit:$junit_version"

    // Corda dependencies.
    cordaProvided "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaProvided "$corda_release_group:corda-jackson:$corda_release_version"
    cordaProvided "$corda_release_group:corda-rpc:$corda_release_version"
    cordaProvided "$corda_release_group:corda-node-api:$corda_release_version"

    testImplementation "$corda_release_group:corda-node-driver:$corda_release_version"
    testImplementation "io.reactivex:rxjava:$rxjava_version"
    // Needed by deployNodes task.
    corda "$corda_release_group:corda:$corda_release_version"
    cordaProvided "$corda_core_release_group:corda-core-test-utils:$corda_core_release_version"
    cordaProvided "$corda_core_release_group:corda-test-utils:$corda_core_release_version"
    // CorDapp dependencies.
    cordapp project(":contracts")
    testRuntimeOnly "org.iq80.snappy:snappy:$snappy_version"
}

test {
    jvmArgs = rootProject.ext.testJvmArgs
}
