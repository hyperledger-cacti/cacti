/*
CBDC-example backend API

Cactus-Example 

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactRequest{}

// TransactRequest Request schema for initiating a transaction. Includes details such as the transaction context, mode (data or transfer), payload, and information about the source and receiver DLT networks.
type TransactRequest struct {
	Sender string `json:"sender"`
	Receiver string `json:"receiver"`
	SourceChain AssetType `json:"sourceChain"`
	ReceiverChain AssetType `json:"receiverChain"`
	Amount string `json:"amount"`
}

type _TransactRequest TransactRequest

// NewTransactRequest instantiates a new TransactRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactRequest(sender string, receiver string, sourceChain AssetType, receiverChain AssetType, amount string) *TransactRequest {
	this := TransactRequest{}
	this.Sender = sender
	this.Receiver = receiver
	this.SourceChain = sourceChain
	this.ReceiverChain = receiverChain
	this.Amount = amount
	return &this
}

// NewTransactRequestWithDefaults instantiates a new TransactRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactRequestWithDefaults() *TransactRequest {
	this := TransactRequest{}
	return &this
}

// GetSender returns the Sender field value
func (o *TransactRequest) GetSender() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetSenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *TransactRequest) SetSender(v string) {
	o.Sender = v
}

// GetReceiver returns the Receiver field value
func (o *TransactRequest) GetReceiver() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetReceiverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Receiver, true
}

// SetReceiver sets field value
func (o *TransactRequest) SetReceiver(v string) {
	o.Receiver = v
}

// GetSourceChain returns the SourceChain field value
func (o *TransactRequest) GetSourceChain() AssetType {
	if o == nil {
		var ret AssetType
		return ret
	}

	return o.SourceChain
}

// GetSourceChainOk returns a tuple with the SourceChain field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetSourceChainOk() (*AssetType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceChain, true
}

// SetSourceChain sets field value
func (o *TransactRequest) SetSourceChain(v AssetType) {
	o.SourceChain = v
}

// GetReceiverChain returns the ReceiverChain field value
func (o *TransactRequest) GetReceiverChain() AssetType {
	if o == nil {
		var ret AssetType
		return ret
	}

	return o.ReceiverChain
}

// GetReceiverChainOk returns a tuple with the ReceiverChain field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetReceiverChainOk() (*AssetType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceiverChain, true
}

// SetReceiverChain sets field value
func (o *TransactRequest) SetReceiverChain(v AssetType) {
	o.ReceiverChain = v
}

// GetAmount returns the Amount field value
func (o *TransactRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransactRequest) SetAmount(v string) {
	o.Amount = v
}

func (o TransactRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sender"] = o.Sender
	toSerialize["receiver"] = o.Receiver
	toSerialize["sourceChain"] = o.SourceChain
	toSerialize["receiverChain"] = o.ReceiverChain
	toSerialize["amount"] = o.Amount
	return toSerialize, nil
}

func (o *TransactRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sender",
		"receiver",
		"sourceChain",
		"receiverChain",
		"amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactRequest := _TransactRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactRequest)

	if err != nil {
		return err
	}

	*o = TransactRequest(varTransactRequest)

	return err
}

type NullableTransactRequest struct {
	value *TransactRequest
	isSet bool
}

func (v NullableTransactRequest) Get() *TransactRequest {
	return v.value
}

func (v *NullableTransactRequest) Set(val *TransactRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactRequest(val *TransactRequest) *NullableTransactRequest {
	return &NullableTransactRequest{value: val, isSet: true}
}

func (v NullableTransactRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


