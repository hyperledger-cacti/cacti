{
  "openapi": "3.0.3",
  "info": {
    "title": "Hyperledger Cactus Example - Supply Chain App",
    "description": "Demonstrates how a business use case can be satisfied with Cactus when multiple distinct ledgers are involved.",
    "version": "2.1.0",
    "license": {
      "name": "Apache-2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "components": {
    "schemas": {
      "Shipment": {
        "type": "object",
        "required": ["id", "bookshelfId"],
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          },
          "bookshelfId": {
            "description": "The foreign key ID referencing the bookshelfId that will go in the shipment.",
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "nullable": false
          }
        }
      },
      "Bookshelf": {
        "type": "object",
        "required": ["id", "shelfCount", "bambooHarvestId"],
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          },
          "shelfCount": {
            "description": "The number of shelves the bookshelf comes with.",
            "type": "number",
            "nullable": false,
            "minimum": 1,
            "maximum": 255
          },
          "bambooHarvestId": {
            "description": "The foreign key ID referencing the bamboo harvest that yielded the wood material for the construction of the bookshelf.",
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "nullable": false
          }
        }
      },
      "BambooHarvest": {
        "type": "object",
        "required": ["id", "location", "startedAt", "endedAt", "harvester"],
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          },
          "location": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          },
          "startedAt": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          },
          "endedAt": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          },
          "harvester": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          }
        }
      },
      "InsertBambooHarvestRequest": {
        "type": "object",
        "required": ["bambooHarvest"],
        "properties": {
          "bambooHarvest": {
            "$ref": "#/components/schemas/BambooHarvest"
          }
        }
      },
      "InsertBambooHarvestResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "callOutput": {
            "type": "object",
            "additionalProperties": true
          },
          "transactionReceipt": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ListBambooHarvestResponse": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "type": "array",
            "nullable": false,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/BambooHarvest",
              "minItems": 0,
              "maxItems": 65535
            }
          }
        }
      },
      "InsertBookshelfRequest": {
        "type": "object",
        "required": ["bookshelf"],
        "properties": {
          "bookshelf": {
            "$ref": "#/components/schemas/Bookshelf"
          }
        }
      },
      "InsertBookshelfResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "callOutput": {
            "type": "object",
            "additionalProperties": true
          },
          "transactionReceipt": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ListBookshelfResponse": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "type": "array",
            "nullable": false,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Bookshelf",
              "minItems": 0,
              "maxItems": 65535
            }
          }
        }
      },
      "InsertShipmentRequest": {
        "type": "object",
        "required": ["shipment"],
        "properties": {
          "shipment": {
            "$ref": "#/components/schemas/Shipment"
          }
        }
      },
      "InsertShipmentResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "callOutput": {
            "type": "object",
            "additionalProperties": true
          },
          "transactionReceipt": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ListShipmentResponse": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "type": "array",
            "nullable": false,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Shipment",
              "minItems": 0,
              "maxItems": 65535
            }
          }
        }
      },
      "ManufacturerData": {
        "type": "object",
        "required": [
          "id",
          "name",
          "costPrice",
          "inventory",
          "supplierInfo",
          "shippingAddress",
          "customerContact"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          },
          "name": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          },
          "costPrice": {
            "type": "number",
            "nullable": false
          },
          "inventory": {
            "type": "number",
            "nullable": false
          },
          "supplierInfo": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          },
          "shippingAddress": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024,
            "description": "The shipping address for the product"
          },
          "customerContact": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024,
            "description": "Contact information for the customer"
          },
          "shipmentId": {
            "type": "string",
            "description": "Optional ID of the associated shipment"
          },
          "privateNotes": {
            "type": "string",
            "description": "Private notes for manufacturer only"
          }
        }
      },
      "InsertManufacturerDataRequest": {
        "type": "object",
        "required": ["manufacturerData"],
        "properties": {
          "manufacturerData": {
            "$ref": "#/components/schemas/ManufacturerData"
          }
        }
      },
      "InsertManufacturerDataResponse": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ListManufacturerDataResponse": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "type": "array",
            "nullable": false,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/ManufacturerData",
              "minItems": 0,
              "maxItems": 65535
            }
          }
        }
      },
      "CreatePaymentRequest": {
        "type": "object",
        "required": [
          "payerAddress",
          "payeeAddress",
          "amount",
          "productId",
          "productType",
          "signature",
          "message"
        ],
        "properties": {
          "payerAddress": {
            "type": "string",
            "nullable": false,
            "minLength": 1
          },
          "payeeAddress": {
            "type": "string",
            "nullable": false,
            "minLength": 1
          },
          "amount": {
            "type": "string",
            "nullable": false,
            "minLength": 1
          },
          "productId": {
            "type": "string",
            "nullable": false,
            "minLength": 1
          },
          "productType": {
            "type": "string",
            "nullable": false,
            "minLength": 1
          },
          "signature": {
            "type": "string",
            "nullable": false,
            "minLength": 1
          },
          "message": {
            "type": "string",
            "nullable": false,
            "minLength": 1
          }
        }
      },
      "CreatePaymentResponse": {
        "type": "object",
        "required": ["success"],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "paymentId": {
            "type": "number"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "ProcessPaymentRequest": {
        "type": "object",
        "required": [
          "paymentId",
          "transactionReference",
          "walletAddress",
          "signature",
          "message"
        ],
        "properties": {
          "paymentId": {
            "type": "number",
            "nullable": false
          },
          "transactionReference": {
            "type": "string",
            "nullable": false,
            "minLength": 1
          },
          "walletAddress": {
            "type": "string",
            "nullable": false,
            "minLength": 1
          },
          "signature": {
            "type": "string",
            "nullable": false,
            "minLength": 1
          },
          "message": {
            "type": "string",
            "nullable": false,
            "minLength": 1
          }
        }
      },
      "ProcessPaymentResponse": {
        "type": "object",
        "required": ["success"],
        "properties": {
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "UpdateBookshelfStatusRequest": {
        "type": "object",
        "required": ["bookshelfId", "status"],
        "properties": {
          "bookshelfId": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          },
          "status": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          }
        }
      },
      "UpdateShipmentStatusRequest": {
        "type": "object",
        "required": ["shipmentId", "status"],
        "properties": {
          "shipmentId": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          },
          "status": {
            "type": "string",
            "nullable": false,
            "minLength": 1,
            "maxLength": 1024
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/insert-bookshelf": {
      "post": {
        "operationId": "insertBookshelfV1",
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/insert-bookshelf"
          }
        },
        "summary": "Inserts the provided Bookshelf entity to the ledger.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertBookshelfRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsertBookshelfResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/list-bookshelf": {
      "get": {
        "operationId": "listBookshelfV1",
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "get",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/list-bookshelf"
          }
        },
        "summary": "Lists all the Bookshelf entities stored on the ledger.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBookshelfResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/insert-shipment": {
      "post": {
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/insert-shipment"
          }
        },
        "operationId": "insertShipmentV1",
        "summary": "Inserts the provided Shipment entity to the ledger.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertShipmentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsertShipmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/list-shipment": {
      "get": {
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "get",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/list-shipment"
          }
        },
        "operationId": "listShipmentV1",
        "summary": "Lists all the Shipments entities stored on the ledger.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListShipmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/insert-bamboo-harvest": {
      "post": {
        "operationId": "insertBambooHarvestV1",
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/insert-bamboo-harvest"
          }
        },
        "summary": "Inserts the provided BambooHarvest entity to the ledger.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertBambooHarvestRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsertBambooHarvestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/list-bamboo-harvest": {
      "get": {
        "operationId": "listBambooHarvestV1",
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "get",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/list-bamboo-harvest"
          }
        },
        "summary": "Lists all the BambooHarvest entities stored on the ledger.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBambooHarvestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/insert-manufacturer-data": {
      "post": {
        "operationId": "insertManufacturerDataV1",
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/insert-manufacturer-data"
          }
        },
        "summary": "Inserts manufacturer data to the Fabric ledger",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertManufacturerDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsertManufacturerDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/list-manufacturer-data": {
      "get": {
        "operationId": "listManufacturerDataV1",
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "get",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/list-manufacturer-data"
          }
        },
        "summary": "List all manufacturer data",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListManufacturerDataResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/assign-shipment": {
      "post": {
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/assign-shipment"
          }
        },
        "tags": ["manufacturer-data"],
        "summary": "Assign a shipment ID to a manufacturer data item",
        "operationId": "assignShipmentV1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["productId", "shipmentId"],
                "properties": {
                  "productId": {
                    "type": "string",
                    "description": "ID of the product to assign the shipment to"
                  },
                  "shipmentId": {
                    "type": "string",
                    "description": "ID of the shipment to assign"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/deploy-role-manager": {
      "post": {
        "operationId": "deployRoleManager",
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/deploy-role-manager"
          }
        },
        "summary": "Deploy RoleManager contract",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "contractAddress": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization required"
          },
          "403": {
            "description": "Access denied"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/create-payment": {
      "post": {
        "operationId": "createPayment",
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/create-payment"
          }
        },
        "summary": "Create a new payment for a product",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/process-payment": {
      "post": {
        "operationId": "processPayment",
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/process-payment"
          }
        },
        "summary": "Process an existing payment",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessPaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/update-bookshelf-status": {
      "post": {
        "operationId": "updateBookshelfStatusV1",
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/update-bookshelf-status"
          }
        },
        "summary": "Updates the status of a bookshelf entity on the ledger.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookshelfStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "transactionId": {
                      "type": "string"
                    },
                    "functionOutput": {
                      "type": "string"
                    },
                    "simulated": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/update-shipment-status": {
      "post": {
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/update-shipment-status"
          }
        },
        "tags": ["supply-chain"],
        "summary": "Update Shipment Status",
        "operationId": "updateShipmentStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipmentId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/update-bamboo-harvest-status": {
      "post": {
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/update-bamboo-harvest-status"
          }
        },
        "tags": ["supply-chain"],
        "summary": "Update Bamboo Harvest Status",
        "operationId": "updateBambooHarvestStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bambooHarvestId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/delete-bamboo-harvest": {
      "post": {
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cactus-example-supply-chain-backend/delete-bamboo-harvest"
          }
        },
        "tags": ["supply-chain"],
        "security": [{ "BearerAuth": [] }],
        "summary": "Delete a bamboo harvest record",
        "operationId": "deleteBambooHarvestV1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["bambooHarvestId"],
                "properties": {
                  "bambooHarvestId": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024,
                    "description": "The ID of the bamboo harvest to delete"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK - bamboo harvest deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the operation was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - wallet authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not a manufacturer role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
