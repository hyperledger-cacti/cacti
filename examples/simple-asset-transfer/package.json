{
	"version": "0.1.0",
	"name": "@hyperledger-labs/blockchain-integration-framework.examples.simple-asset-transfer",
	"dependencies": {
		"@hyperledger-labs/blockchain-integration-framework": "../../.tmp/hyperledger-labs-blockchain-integration-framework-dev.tgz",
		"cookie-parser": "^1.4.4",
		"express-bearer-token": "^2.4.0",
		"express-jwt": "^5.3.1",
		"express-session": "^1.16.2",
		"request-promise": "^4.2.4"
	},
	"devDependencies": {
		"npm-check": "^5.9.0"
	},
	"scripts": {
		"corda:clean": "cd corda && ./gradlew clean && cd ../",
		"corda:build": "cd corda && ./gradlew build deployNodes deployWeb deployScripts && cd ../",
		"corda": "cd corda/build/scripts && ./start_corda_components.sh ../../logs && cd ../../../",
		"corda:down": "cd corda/build/scripts && ./stop_corda_components.sh ../../logs && cd ../../../",
		"fabric": "cd fabric/scripts && ./start.sh",
		"fabric:down": "fuser -k -n tcp 4000 ; docker-compose -f fabric/artifacts/docker-compose.yaml rm -sf",
		"fabric:log": "docker-compose -f fabric/artifacts/docker-compose.yaml logs -f",
		"fed:build": "docker build --no-cache --force-rm -t federation/validator .",
		"fed:fabric": "docker-compose -p federation-fabric -f ./federations/docker-compose-fabric.yml --compatibility up --renew-anon-volumes -d",
		"fed:fabric:down": "docker-compose -p federation-fabric -f ./federations/docker-compose-fabric.yml --compatibility rm -sf",
		"fed:fabric:log": "docker-compose -p federation-fabric -f ./federations/docker-compose-fabric.yml --compatibility logs -f",
		"fed:quorum": "docker-compose -p federation-quorum -f ./federations/docker-compose-quorum.yml --compatibility up --renew-anon-volumes -d",
		"fed:quorum:down": "docker-compose -p federation-quorum -f ./federations/docker-compose-quorum.yml --compatibility rm -sf",
		"fed:quorum:log": "docker-compose -p federation-quorum -f ./federations/docker-compose-quorum.yml --compatibility logs -f",
		"fed:corda": "docker-compose -p federation-corda -f ./federations/docker-compose-corda.yml --compatibility up --renew-anon-volumes -d",
		"fed:corda:down": "docker-compose -p federation-corda -f ./federations/docker-compose-corda.yml --compatibility rm -sf",
		"fed:corda:log": "docker-compose -p federation-corda -f ./federations/docker-compose-corda.yml --compatibility logs -f",
		"install-all": "npm i && cd fabric/api && npm i && cd - && cd quorum/api && npm i",
		"quorum": "QUORUM_CONSENSUS=raft docker-compose -p quorum -f ./quorum/platform/docker-compose.yml --compatibility up --renew-anon-volumes -d",
		"quorum:down": "docker-compose -p quorum -f ./quorum/platform/docker-compose.yml --compatibility rm -sf",
		"quorum:log": "docker-compose -p quorum -f ./quorum/platform/docker-compose.yml --compatibility logs -f",
		"quorum:api": "docker-compose -p quorum-api -f ./quorum/api/docker-compose.yml --compatibility up --renew-anon-volumes -d",
		"quorum:api:build": "docker build --no-cache -t federation/qserver -f quorum/api/Dockerfile quorum",
		"quorum:api:down": "docker-compose -p quorum-api -f ./quorum/api/docker-compose.yml --compatibility rm -sf",
		"quorum:api:log": "docker-compose -p quorum-api -f ./quorum/api/docker-compose.yml --compatibility logs -f",
		"scenario:share": "cd scenarios && node share-pub-keys.js",
		"scenario:FtQ": "cd scenarios && node fabric-to-quorum.js",
		"scenario:QtF": "cd scenarios && node quorum-to-fabric.js",
		"scenario:CtQ": "cd scenarios && node corda-to-quorum.js",
		"scenario:CtF": "cd scenarios && node corda-to-fabric.js",
		"scenario:FtC": "cd scenarios && node fabric-to-corda.js",
		"scenario:QtC": "cd scenarios && node quorum-to-corda.js",
		"test": "../../node_modules/.bin/cross-env NODE_ENV=test ../../node_modules/.bin/mocha --ui bdd --reporter spec --colors tests/*.js --recursive --exit",
		"test:bc": "BLOCKCHAIN=true npm run test",
		"upgrade-interactive": "npm-check --update",
		"preinstall": "node ../../tools/create-local-npm-package.js"
	},
	"private": true,
	"engines": {
		"node": ">=8.15.0 <9.0",
		"npm": ">=6.4.1"
	}
}
