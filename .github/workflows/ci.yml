name: Cactus CI Github Workflow

# Triggers the workflow on pull request events
on: [pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: true
      max-parallel: 1 # Fabric AIO image needs fixed host ports allocated
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04]
        node-version: [v12.13.0, v14.15.1]
        experimental: [false]
        # include:
        #
        # # FIXME macOS does not work due to lack of docker support in GHA.
        # https://github.community/t/why-is-docker-not-installed-on-macos/17017
        #   - os: macos-11.0 # macOS Big Sur 11.0
        #     node-version: v12.13.0
        #     experimental: true
        #   - os: macos-10.15 # macOS Catalina 10.15
        #     node-version: v12.13.0
        #     experimental: true
        #
        # # FIXME
        # https://github.com/hyperledger/cactus/issues/171
        #   - os: windows-2019 # Windows Server 2019
        #     node-version: v12.13.0
        #     experimental: true

    steps:
    # FIXME: These do not work on mac OS as of 2020-12-09
    # https://github.community/t/why-is-docker-not-installed-on-macos/17017
    # - name: Set up QEMU (ARM64 docker images once we are ready)
    #   uses: docker/setup-qemu-action@v1.0.1

    # - name: Set up Docker Buildx (ARM64 docker images once we are ready)
    #   uses: docker/setup-buildx-action@v1.0.3

    - name: Set up JDK 8 (OpenAPI generator needs it)
      uses: actions/setup-java@v1.4.3
      with:
        java-version: '8.0.275' # The JDK version to make available on the path.
        java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
        architecture: x64 # (x64 or x86) - defaults to x64

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.2
      with:
        node-version: ${{ matrix.node-version }}

    - uses: actions/checkout@v2.3.4

    - run: npm ci
    - run: ./node_modules/.bin/lerna clean --yes
    - run: ./node_modules/.bin/lerna bootstrap
    - run: npm run build:dev:backend
    - run: npm run test:unit -- --bail
    - run: npm run test:integration -- --bail
