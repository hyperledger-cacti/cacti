name: SATP Hermes Gateway Documentation

on:
  workflow_call:
    inputs:
      deploy_docs:
        description: 'Deploy documentation to GitHub Pages'
        required: false
        default: true
        type: boolean
      docs_branch:
        description: 'Branch to build docs from'
        required: false
        default: 'main'
        type: string
  workflow_dispatch:
    inputs:
      deploy_docs:
        description: 'Deploy documentation to GitHub Pages'
        required: false
        default: true
        type: boolean
      docs_branch:
        description: 'Branch to build docs from'
        required: false
        default: 'main'
        type: string

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # =============================================================================
  # BUILD DOCUMENTATION
  # =============================================================================
  # This job builds the TypeDoc documentation for the SATP Hermes Gateway
  
  build-docs:
    runs-on: ubuntu-latest-16-cores
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7
        with:
          ref: ${{ inputs.docs_branch || github.ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install system dependencies for Puppeteer
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libatk-bridge2.0-0 \
            libdrm2 \
            libxkbcommon0 \
            libxcomposite1 \
            libxdamage1 \
            libxfixes3 \
            libxrandr2 \
            libgbm1 \
            libasound2

      - name: Install dependencies
        working-directory: ./packages/cactus-plugin-satp-hermes
        run: |
          yarn install --frozen-lockfile

      - name: Generate TypeDoc documentation
        working-directory: ./packages/cactus-plugin-satp-hermes
        run: |
          echo "Building TypeScript project..."
          yarn tsc
          
          echo "Generating Mermaid diagrams and TypeDoc documentation..."
          yarn docs:generate
          
          echo "Validating documentation..."
          yarn docs:validate || true

      - name: Verify documentation build
        working-directory: ./packages/cactus-plugin-satp-hermes
        run: |
          if [ ! -d "./public/typedoc" ]; then
            echo "Error: Documentation directory not found!"
            exit 1
          fi
          
          if [ ! -f "./public/typedoc/index.html" ]; then
            echo "Error: Documentation index.html not found!"
            exit 1
          fi
          
          # Verify diagrams were generated
          if [ ! -d "./docs/assets/diagrams" ]; then
            echo "Error: Diagrams source directory not found!"
            exit 1
          fi
          
          if [ ! -d "./public/typedoc/assets/diagrams" ]; then
            echo "Error: Diagrams not copied to documentation output!"
            exit 1
          fi
          
          echo "âœ… Documentation built successfully!"
          echo ""
          echo "ðŸ“Š Generated diagrams:"
          find ./docs/assets/diagrams/ -type f -ls
          echo ""
          echo "ðŸ“š Documentation structure:"
          find ./public/typedoc/ -maxdepth 1 -ls | head -20

      - name: Prepare documentation structure for GitHub Pages
        run: |
          mkdir -p ./gh-pages/cacti/satp
          cp -r ./packages/cactus-plugin-satp-hermes/public/typedoc/* ./gh-pages/cacti/satp/
          
          # Create a root index.html that redirects to /cacti/satp
          cat > ./gh-pages/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Redirecting to SATP Documentation</title>
            <meta http-equiv="refresh" content="0; url=/cacti/satp/">
            <link rel="canonical" href="/cacti/satp/">
          </head>
          <body>
            <p>Redirecting to <a href="/cacti/satp/">SATP Hermes Gateway Documentation</a>...</p>
          </body>
          </html>
          EOF
          
          echo "GitHub Pages structure prepared:"
          find ./gh-pages -type f | head -20

      - name: Create documentation metadata
        run: |
          VERSION=$(node -p "require('./packages/cactus-plugin-satp-hermes/package.json').version")
          SATP_VERSION=$(node -p "require('./packages/cactus-plugin-satp-hermes/package.json').customMetadata['satp-package-version']")
          
          cat > ./gh-pages/cacti/satp/metadata.json << EOF
          {
            "version": "${VERSION}",
            "satp_version": "${SATP_VERSION}",
            "build_date": "$(date -u '+%Y-%m-%d %H:%M:%S UTC')",
            "commit": "${{ github.sha }}",
            "branch": "${{ inputs.docs_branch || github.ref }}",
            "workflow_run": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }
          EOF
          
          echo "Documentation metadata created:"
          cat ./gh-pages/cacti/satp/metadata.json

      - name: Setup Pages
        if: inputs.deploy_docs == true
        uses: actions/configure-pages@v5

      - name: Upload documentation artifact
        if: inputs.deploy_docs == true
        uses: actions/upload-pages-artifact@v3
        with:
          path: './gh-pages'

  # =============================================================================
  # DEPLOY TO GITHUB PAGES
  # =============================================================================
  # This job deploys the built documentation to GitHub Pages
  
  deploy-docs:
    if: inputs.deploy_docs == true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post deployment summary
        run: |
          {
            echo "## ðŸ“š Documentation Deployment Successful"
            echo ""
            echo "**Documentation URL:** ${{ steps.deployment.outputs.page_url }}"
            echo "**Branch:** ${{ inputs.docs_branch || github.ref }}"
            echo "**Deployed:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          } >> "$GITHUB_STEP_SUMMARY"
