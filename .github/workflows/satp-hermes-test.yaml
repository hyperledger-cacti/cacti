name: SATP Hermes Gateway Tests

on:
  workflow_call:
    inputs:
      skip_tests:
        description: 'Skip test execution (for emergency releases only)'
        required: false
        default: false
        type: boolean

jobs:
  # Test execution jobs: run unit and integration tests in parallel
  run-satp-tests-unit:
    if: inputs.skip_tests != true
    runs-on: ubuntu-latest-16-cores
    continue-on-error: true
    env:
      FULL_BUILD_DISABLED: true
      JEST_TEST_RUNNER_DISABLED: false
      RUN_CODE_COVERAGE: "true"
      SATP_ENABLE_CRASH_RECOVERY: false
      SATP_LOG_LEVEL: DEBUG
      SATP_ENABLE_LOCAL_REPOSITORY: true
      SATP_ENABLE_REMOTE_REPOSITORY: false

    steps:
      - uses: actions/checkout@v4.1.7
      - name: Use Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: v22.18.0

      # Download build artifacts using reusable action
      - name: Download SATP build artifacts
        uses: ./.github/actions/satp-download-build-artifacts

      # Download generated artifacts
      - name: Download generated artifacts
        uses: ./.github/actions/satp-download-generated-artifacts

      - name: Install dependencies
        run: yarn install

      - name: Configure and build all packages
        run: yarn configure

      - name: Run SATP unit tests (with optional coverage)
        run: |
          set -euo pipefail
          if [ "${{ env.RUN_CODE_COVERAGE }}" = "true" ]; then
            echo "Running unit tests with coverage"
            yarn workspace @hyperledger/cactus-plugin-satp-hermes test:unit --coverage --coverageDirectory=./code-coverage-ts/satp-hermes
          else
            echo "Running unit tests without coverage"
            yarn workspace @hyperledger/cactus-plugin-satp-hermes test:unit
          fi

      - name: Upload SATP unit test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: satp-unit-junit-report-${{ github.job }}
          path: packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-unit.xml

      - name: Check for SATP unit junit report
        id: check_unit_junit
        run: |
          if [ -f packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-unit.xml ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Report SATP unit test results (annotate)
        if: always() && steps.check_unit_junit.outputs.found == 'true'
        uses: dorny/test-reporter@v1.9.1
        with:
          name: "SATP Unit Tests"
          path: packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-unit.xml
          reporter: jest-junit
          list-tests: failed
          fail-on-error: false

      - name: Check for SATP unit coverage artifacts
        id: check_unit_coverage
        run: |
          if [ -d packages/cactus-plugin-satp-hermes/code-coverage-ts ] || [ -f packages/cactus-plugin-satp-hermes/coverage/coverage-final.json ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload SATP unit coverage (if present)
        if: always() && steps.check_unit_coverage.outputs.found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-satp-hermes-${{ github.job }}
          path: |
            packages/cactus-plugin-satp-hermes/code-coverage-ts/**/
      
  run-satp-tests-integration-bridge:
    if: inputs.skip_tests != true
    runs-on: ubuntu-latest-16-cores
    continue-on-error: true
    env:
      FULL_BUILD_DISABLED: true
      JEST_TEST_RUNNER_DISABLED: false
      RUN_CODE_COVERAGE: "true"
      SATP_ENABLE_CRASH_RECOVERY: false
      SATP_LOG_LEVEL: DEBUG
      SATP_ENABLE_LOCAL_REPOSITORY: true
      SATP_ENABLE_REMOTE_REPOSITORY: false

    steps:
      - uses: actions/checkout@v4.1.7
      - name: Use Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: v22.18.0

      # Download build artifacts using reusable action
      - name: Download SATP build artifacts
        uses: ./.github/actions/satp-download-build-artifacts

      # Download generated artifacts
      - name: Download generated artifacts
        uses: ./.github/actions/satp-download-generated-artifacts

      - name: Install dependencies
        run: yarn install
      
      - run: ./tools/ci-env-clean-up.sh   

      - name: Configure and build all packages
        run: yarn configure

      - name: Run SATP integration tests (bridge) (with optional coverage)
        run: |
          set -euo pipefail
          if [ "${{ env.RUN_CODE_COVERAGE }}" = "true" ]; then
            echo "Running integration bridge tests with coverage"
            yarn workspace @hyperledger/cactus-plugin-satp-hermes test:integration:bridge --coverage --coverageDirectory=./code-coverage-ts/satp-hermes-integration-bridge
          else
            echo "Running integration bridge tests without coverage"
            yarn workspace @hyperledger/cactus-plugin-satp-hermes test:integration:bridge
          fi

      - name: Upload SATP integration test report - bridge
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: satp-integration-junit-report-bridge-${{ github.job }}
          path: packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-bridge.xml

      - name: Check for SATP bridge junit report
        id: check_bridge_junit
        run: |
          if [ -f packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-bridge.xml ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Report SATP integration (bridge) test results (annotate)
        if: always() && steps.check_bridge_junit.outputs.found == 'true'
        uses: dorny/test-reporter@v1.9.1
        with:
          name: "SATP Integration Tests (Bridge)"
          path: packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-bridge.xml
          reporter: jest-junit
          list-tests: failed
          fail-on-error: false

      - name: Check for SATP bridge integration coverage artifacts
        id: check_bridge_coverage
        run: |
          if [ -d packages/cactus-plugin-satp-hermes/code-coverage-ts ] || [ -f packages/cactus-plugin-satp-hermes/coverage/coverage-final.json ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload SATP integration coverage - bridge (if present)
        if: always() && steps.check_bridge_coverage.outputs.found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: SATP-Integration-Tests-Bridge-${{ github.job }}
          path: packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-bridge.xml

  run-satp-tests-integration-oracle:
    if: inputs.skip_tests != true
    runs-on: ubuntu-latest-16-cores
    continue-on-error: true
    env:
      FULL_BUILD_DISABLED: true
      JEST_TEST_RUNNER_DISABLED: false
      RUN_CODE_COVERAGE: "true"
      # SATP specific configuration
      SATP_ENABLE_CRASH_RECOVERY: false
      SATP_LOG_LEVEL: DEBUG
      SATP_ENABLE_LOCAL_REPOSITORY: true
      SATP_ENABLE_REMOTE_REPOSITORY: false

    steps:
      - uses: actions/checkout@v4.1.7
      - name: Use Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: v22.18.0

      # Download build artifacts using reusable action
      - name: Download SATP build artifacts
        uses: ./.github/actions/satp-download-build-artifacts

      # Download generated artifacts
      - name: Download generated artifacts
        uses: ./.github/actions/satp-download-generated-artifacts

      - name: Install dependencies
        run: yarn install
      
      - run: ./tools/ci-env-clean-up.sh

      - name: Configure and build all packages
        run: yarn configure

      - name: Run SATP integration tests (oracle) (with optional coverage)
        run: |
          set -euo pipefail
          if [ "${{ env.RUN_CODE_COVERAGE }}" = "true" ]; then
            echo "Running integration oracle tests with coverage"
            yarn workspace @hyperledger/cactus-plugin-satp-hermes test:integration:oracle --coverage --coverageDirectory=./code-coverage-ts/satp-hermes-integration-oracle
          else
            echo "Running integration oracle tests without coverage"
            yarn workspace @hyperledger/cactus-plugin-satp-hermes test:integration:oracle
          fi

      - name: Upload SATP integration test report - oracle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: satp-integration-junit-report-oracle-${{ github.job }}
          path: packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-oracle.xml

      - name: Check for SATP oracle junit report
        id: check_oracle_junit
        run: |
          if [ -f packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-oracle.xml ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Report SATP integration (oracle) test results (annotate)
        if: always() && steps.check_oracle_junit.outputs.found == 'true'
        uses: dorny/test-reporter@v1.9.1
        with:
          name: "SATP Integration Tests (Oracle)"
          path: packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-oracle.xml
          reporter: jest-junit
          list-tests: failed
          fail-on-error: false

      - name: Check for SATP oracle integration coverage artifacts
        id: check_oracle_coverage
        run: |
          if [ -d packages/cactus-plugin-satp-hermes/code-coverage-ts ] || [ -f packages/cactus-plugin-satp-hermes/coverage/coverage-final.json ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload SATP integration coverage - oracle (if present)
        if: always() && steps.check_oracle_coverage.outputs.found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-satp-hermes-${{ github.job }}
          path: |
            packages/cactus-plugin-satp-hermes/code-coverage-ts/**/
            packages/cactus-plugin-satp-hermes/coverage/**/

  run-satp-tests-integration-gateway:
    if: inputs.skip_tests != true
    runs-on: ubuntu-latest-16-cores
    continue-on-error: true
    env:
      FULL_BUILD_DISABLED: true
      JEST_TEST_RUNNER_DISABLED: false
      RUN_CODE_COVERAGE: "true"
      # SATP specific configuration
      SATP_ENABLE_CRASH_RECOVERY: false
      SATP_LOG_LEVEL: DEBUG
      SATP_ENABLE_LOCAL_REPOSITORY: true
      SATP_ENABLE_REMOTE_REPOSITORY: false

    steps:
      - uses: actions/checkout@v4.1.7
      - name: Use Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: v22.18.0

      # Download build artifacts using reusable action
      - name: Download SATP build artifacts
        uses: ./.github/actions/satp-download-build-artifacts

      # Download generated artifacts
      - name: Download generated artifacts
        uses: ./.github/actions/satp-download-generated-artifacts

      - name: Install dependencies
        run: yarn install
      
      - run: ./tools/ci-env-clean-up.sh

      - name: Configure and build all packages
        run: yarn configure

      - name: Run SATP integration tests (gateway) (with optional coverage)
        run: |
          set -euo pipefail
          if [ "${{ env.RUN_CODE_COVERAGE }}" = "true" ]; then
            echo "Running integration gateway tests with coverage"
            yarn workspace @hyperledger/cactus-plugin-satp-hermes test:integration:gateway --coverage --coverageDirectory=./code-coverage-ts/satp-hermes-integration-gateway
          else
            echo "Running integration gateway tests without coverage"
            yarn workspace @hyperledger/cactus-plugin-satp-hermes test:integration:gateway
          fi

      - name: Upload SATP integration test report - gateway
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: satp-integration-junit-report-gateway-${{ github.job }}
          path: packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-gateway.xml

      - name: Check for SATP gateway junit report
        id: check_gateway_junit
        run: |
          if [ -f packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-gateway.xml ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Report SATP integration (gateway) test results (annotate)
        if: always() && steps.check_gateway_junit.outputs.found == 'true'
        uses: dorny/test-reporter@v1.9.1
        with:
          name: "SATP Integration Tests (Gateway)"
          path: packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-gateway.xml
          reporter: jest-junit
          list-tests: failed
          fail-on-error: false

      - name: Check for SATP gateway integration coverage artifacts
        id: check_gateway_coverage
        run: |
          if [ -d packages/cactus-plugin-satp-hermes/code-coverage-ts ] || [ -f packages/cactus-plugin-satp-hermes/coverage/coverage-final.json ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload SATP integration coverage - gateway (if present)
        if: always() && steps.check_gateway_coverage.outputs.found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-satp-hermes-${{ github.job }}
          path: |
            packages/cactus-plugin-satp-hermes/code-coverage-ts/**/

  run-satp-tests-integration-docker:
    if: inputs.skip_tests != true
    runs-on: ubuntu-latest-16-cores
    continue-on-error: true
    env:
      FULL_BUILD_DISABLED: true
      JEST_TEST_RUNNER_DISABLED: false
      RUN_CODE_COVERAGE: "true"
      # SATP specific configuration
      SATP_ENABLE_CRASH_RECOVERY: false
      SATP_LOG_LEVEL: DEBUG
      SATP_ENABLE_LOCAL_REPOSITORY: true
      SATP_ENABLE_REMOTE_REPOSITORY: false

    steps:
      - uses: actions/checkout@v4.1.7
      - name: Use Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: v22.18.0

      # Download build artifacts using reusable action
      - name: Download SATP build artifacts
        uses: ./.github/actions/satp-download-build-artifacts

      # Download generated artifacts
      - name: Download generated artifacts
        uses: ./.github/actions/satp-download-generated-artifacts

      - name: Install dependencies
        run: yarn install
      
      - run: ./tools/ci-env-clean-up.sh

      - name: Configure and build all packages
        run: yarn configure

      - name: Run SATP integration tests (docker) (with optional coverage)
        run: |
          set -euo pipefail
          if [ "${{ env.RUN_CODE_COVERAGE }}" = "true" ]; then
            echo "Running integration docker tests with coverage"
            yarn workspace @hyperledger/cactus-plugin-satp-hermes test:integration:docker --coverage --coverageDirectory=./code-coverage-ts/satp-hermes-integration-docker
          else
            echo "Running integration docker tests without coverage"
            yarn workspace @hyperledger/cactus-plugin-satp-hermes test:integration:docker
          fi

      - name: Upload SATP integration test report - docker
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: satp-integration-junit-report-docker-${{ github.job }}
          path: packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-docker.xml

      - name: Check for SATP docker junit report
        id: check_docker_junit
        run: |
          if [ -f packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-docker.xml ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Report SATP integration (docker) test results (annotate)
        if: always() && steps.check_docker_junit.outputs.found == 'true'
        uses: dorny/test-reporter@v1.9.1
        with:
          name: "SATP Integration Tests (Docker)"
          path: packages/cactus-plugin-satp-hermes/reports/junit/satp-hermes-tests-integration-docker.xml
          reporter: jest-junit
          list-tests: failed
          fail-on-error: false

      - name: Check for SATP docker integration coverage artifacts
        id: check_docker_coverage
        run: |
          if [ -d packages/cactus-plugin-satp-hermes/code-coverage-ts ] || [ -f packages/cactus-plugin-satp-hermes/coverage/coverage-final.json ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload SATP integration coverage - docker (always attempt)
        if: always()
        run: |
          if [ -d packages/cactus-plugin-satp-hermes/code-coverage-ts ] || [ -f packages/cactus-plugin-satp-hermes/coverage/coverage-final.json ]; then
            echo "Uploading coverage artifacts"
            mkdir -p ./coverage-upload || true
            cp -r packages/cactus-plugin-satp-hermes/code-coverage-ts ./coverage-upload/ 2>/dev/null || true
            cp -r packages/cactus-plugin-satp-hermes/coverage ./coverage-upload/ 2>/dev/null || true
            cp -r packages/cactus-plugin-satp-hermes/reports/junit ./coverage-upload/ 2>/dev/null || true
          else
            echo "No coverage artifacts found to upload"
          fi

      - name: Upload SATP integration coverage - docker artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-satp-hermes-${{ github.job }}
          path: ./coverage-upload/

  run-satp-tests-integration-cbdc:
    if: inputs.skip_tests != true
    runs-on: ubuntu-latest-16-cores
    continue-on-error: true
    env:
      FULL_BUILD_DISABLED: true
      JEST_TEST_RUNNER_DISABLED: false
      RUN_CODE_COVERAGE: "true"
      # SATP specific configuration
      SATP_ENABLE_CRASH_RECOVERY: false
      SATP_LOG_LEVEL: DEBUG
      SATP_ENABLE_LOCAL_REPOSITORY: true
      SATP_ENABLE_REMOTE_REPOSITORY: false

    steps:
      - uses: actions/checkout@v4.1.7
      - name: Use Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: v22.18.0

      # Download build artifacts using reusable action
      - name: Download SATP build artifacts
        uses: ./.github/actions/satp-download-build-artifacts

      # Download generated artifacts
      - name: Download generated artifacts
        uses: ./.github/actions/satp-download-generated-artifacts

      - name: Install dependencies
        run: yarn install
      
      - run: ./tools/ci-env-clean-up.sh

      - name: Configure and build all packages
        run: yarn configure

      - name: Run CBDC integration tests (with optional coverage)
        run: |
          set -euo pipefail
          if [ "${{ env.RUN_CODE_COVERAGE }}" = "true" ]; then
            echo "Running CBDC integration tests with coverage"
            yarn workspace @hyperledger/cactus-example-cbdc-bridging-backend test:integration --coverage --coverageDirectory=./code-coverage-ts/satp-hermes-cbdc
          else
            echo "Running CBDC integration tests without coverage"
            yarn workspace @hyperledger/cactus-example-cbdc-bridging-backend test:integration
          fi

      - name: Upload CBDC integration test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cbdc-integration-junit-report-${{ github.job }}
          path: examples/cactus-example-cbdc-bridging-backend/reports/junit/cbdc-bridging-tests-integration.xml

      - name: Check for CBDC junit report
        id: check_cbdc_junit
        run: |
          if [ -f examples/cactus-example-cbdc-bridging-backend/reports/junit/cbdc-bridging-tests-integration.xml ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Report CBDC integration test results (annotate)
        if: always() && steps.check_cbdc_junit.outputs.found == 'true'
        uses: dorny/test-reporter@v1.9.1
        with:
          name: "CBDC Integration Tests"
          path: examples/cactus-example-cbdc-bridging-backend/reports/junit/cbdc-bridging-tests-integration.xml
          reporter: jest-junit
          list-tests: failed
          fail-on-error: false

      - name: Check for CBDC integration coverage artifacts
        id: check_cbdc_coverage
        run: |
          if [ -d packages/cactus-plugin-satp-hermes/code-coverage-ts ] || [ -f packages/cactus-plugin-satp-hermes/coverage/coverage-final.json ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload CBDC integration coverage (if present)
        if: always() && steps.check_cbdc_coverage.outputs.found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-satp-hermes-${{ github.job }}
          path: |
            packages/cactus-plugin-satp-hermes/code-coverage-ts/**/
