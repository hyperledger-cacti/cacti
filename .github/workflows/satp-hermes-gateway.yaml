# SATP-Hermes Gateway tests and docker deployments
name: SATP CI - tests and docker deployments

# This workflow handles the CI/CD pipeline for the SATP Hermes Gateway plugin.
# It performs the following tasks:
# 1. Builds the SATP plugin bundle and generates necessary files
# 2. Runs unit, integration, and forge (smart contract) tests
# 3. Builds and pushes Docker images to both Docker Hub and GHCR
# 4. Tags images appropriately (version-specific and latest)

env:
  NODEJS_VERSION: v18.19.0
on:
  # Run tests on PR
  pull_request:
    branches: [main, satp-dev]
    
  # Run tests and build/push docker images on push
  push:
    branches: [main, satp-dev]
  
jobs:
  build-satp-dev:
    runs-on: ubuntu-22.04
    continue-on-error: false
    env:
      NODEJS_VERSION: v18.19.0
      FULL_BUILD_DISABLED: true
      TOOLS_VALIDATE_BUNDLE_NAMES_DISABLED: true
      CUSTOM_CHECKS_DISABLED: true
      CONFIGURE_DISABLED: false
      CHECK_WORK_TREE_STATUS_DISABLED: true
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
      - uses: actions/checkout@v4.1.7

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ./.yarn/
            ./packages/cactus-plugin-satp-hermes/node_modules/
            $HOME/.foundry/
          key: ${{ runner.os }}-deps-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Set working directory
        run: cd packages/cactus-plugin-satp-hermes

      - name: Install Foundry
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          if [ ! -d "${XDG_CONFIG_HOME:-$HOME}" ]; then
            echo "$(date +%FT%T%z) [CI] directory ${XDG_CONFIG_HOME:-$HOME} does not exist."
          else
            npm run preinstall || { echo "Preinstall failed"; exit 1; }
            export PATH="${XDG_CONFIG_HOME:-$HOME}/.foundry/bin:$PATH"
            if [ -f "${HOME}/.bashrc" ]; then
              # shellcheck source=/dev/null
              source "${HOME}/.bashrc"
            fi
            foundryup
          fi

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build bundle
        run: yarn lerna run build:bundle --scope=@hyperledger/cactus-plugin-satp-hermes

      - name: Generate protobuf files
        run: yarn build-proto

      - name: Generate OpenAPI SDKs
        run: |
          yarn bundle-openapi-yaml
          yarn bundle-openapi-json
          yarn generate-sdk:typescript-axios-bol

      - name: Generate ABI types
        run: |
          yarn forge:all
          yarn codegen:abi

      - name: Run linting
        continue-on-error: true
        run: |
          {
            yarn lint-code || echo "Linting completed with warnings"
            yarn lint:oapi || echo "OpenAPI linting completed with warnings"
            yarn lint:protobuf || echo "Protobuf linting completed with warnings"
          }

  run-satp-tests:
    needs: build-satp-dev
    runs-on: ubuntu-22.04
    env:
      NODEJS_VERSION: v18.19.0
      FULL_BUILD_DISABLED: true
      JEST_TEST_PATTERN: packages/cactus-plugin-satp-hermes/src/test/typescript/(unit|integration|benchmark)/.*/*.test.ts
      JEST_TEST_RUNNER_DISABLED: false

      # SATP specific configuration
      SATP_ENABLE_CRASH_RECOVERY: false
      SATP_ENABLE_OPEN_API: false
      SATP_LOG_LEVEL: DEBUG
      SATP_ENABLE_LOCAL_REPOSITORY: true
      SATP_ENABLE_REMOTE_REPOSITORY: false

    steps:
      - uses: actions/checkout@v4.1.7
      - name: Use Node.js ${{ env.NODEJS_VERSION }}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ env.NODEJS_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ./.yarn/
            ./packages/cactus-plugin-satp-hermes/node_modules/
            $HOME/.foundry/
          key: ${{ runner.os }}-deps-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Set working directory
        run: cd packages/cactus-plugin-satp-hermes

      - name: Install Foundry
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          # shellcheck source=/dev/null
          source "${HOME}/.bashrc" && foundryup

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Run SATP unit tests
        run: yarn test:unit

      - name: Run SATP integration tests
        run: yarn test:integration

      - name: Run SATP forge tests
        run: yarn test:forge

  # Set Docker tags based on branch and commit information
  set-docker-tags:
    needs: run-satp-tests
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/satp-dev')
    runs-on: ubuntu-22.04
    outputs:
      tag_suffix: ${{ steps.set_tags.outputs.tag_suffix }}
      tag_version: ${{ steps.set_tags.outputs.tag_version }}
      dockerhub_image: ${{ steps.set_tags.outputs.dockerhub_image }}
      ghcr_image: ${{ steps.set_tags.outputs.ghcr_image }}
    steps:
      - uses: actions/checkout@v4.1.7  
      - name: Set image tags
        id: set_tags
        run: |
          TAG_SUFFIX=$(if [ "${{ github.ref }}" = "refs/heads/main" ]; then echo "prod"; else echo "dev"; fi)
          TAG_VERSION="$(date -u +"%Y-%m-%dT%H-%M-%S")-${TAG_SUFFIX}-$(git rev-parse --short HEAD)"
          DOCKERHUB_IMAGE="hyperledger/satp-hermes-gateway"
          GHCR_IMAGE="ghcr.io/hyperledger-cacti/satp-hermes-gateway"
          
          {
            echo "tag_suffix=${TAG_SUFFIX}"
            echo "tag_version=${TAG_VERSION}"
            echo "dockerhub_image=${DOCKERHUB_IMAGE}"
            echo "ghcr_image=${GHCR_IMAGE}"
          } >> "$GITHUB_OUTPUT"

      - name: Debug Build Info
        run: |
          PACKAGE_VERSION=$(node -e "console.log(require('./packages/cactus-plugin-satp-hermes/package.json').version)")
          {
            echo "Debug: Current ref = ${{ github.ref }}"
            echo "Debug: Event name = ${{ github.event_name }}"
            echo "Debug: GitHub workspace = ${{ github.workspace }}"
            echo "Debug: Repository = ${{ github.repository }}"
            echo "Debug: Building for tag version = ${{ steps.set_tags.outputs.tag_version }}"
            echo "Debug: Building for dockerhub image = ${{ steps.set_tags.outputs.dockerhub_image }}"
            echo "Debug: Node.js version = ${{ env.NODEJS_VERSION }}"
            echo "Debug: Package version = ${PACKAGE_VERSION}"
            echo "Debug: Commit hash = $(git rev-parse --short HEAD)"
          }

  # Build and push Docker image to Docker Hub
  build-and-push-dockerhub:
    needs: set-docker-tags
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/satp-dev')
    runs-on: ubuntu-22.04
    env:
      NODEJS_VERSION: v18.19.0
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Debug Build Info
        run: |
          {
            echo "Debug: Building for tag version = ${{ needs.set-docker-tags.outputs.tag_version }}"
            echo "Debug: Building for dockerhub image = ${{ needs.set-docker-tags.outputs.dockerhub_image }}"
            echo "Debug: Node.js version = ${{ env.NODEJS_VERSION }}"
            echo "Debug: Working directory content:"
            ls -la
            echo "Debug: SATP plugin directory content:"
            ls -la packages/cactus-plugin-satp-hermes/ || echo "Plugin directory not found"
          }
          
      - name: Use Node.js ${{ env.NODEJS_VERSION }}
        uses: actions/setup-node@v4.0.3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          
      - name: Configure and build bundle
        run: |
          {
            echo "Debug: Starting bundle configuration and build"
            yarn configure
            echo "Debug: Yarn configure completed"
            yarn lerna run build:bundle --scope=@hyperledger/cactus-plugin-satp-hermes
            echo "Debug: Bundle build completed"
          }
          
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
        
      - name: Debug Docker Info
        run: |
          {
            echo "Debug: Docker version:"
            docker version
            echo "Debug: Docker info:"
            docker info
          }
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./packages/cactus-plugin-satp-hermes/
          file: ./packages/cactus-plugin-satp-hermes/satp-hermes-gateway.Dockerfile
          push: true
          labels: |
            org.opencontainers.image.source=https://github.com/hyperledger/cacti
            org.opencontainers.image.description=SATP Hermes Gateway
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.vendor=Hyperledger
            org.opencontainers.image.version=${{ needs.set-docker-tags.outputs.tag_version }}
            org.opencontainers.image.visibility=public
          tags: ${{ needs.set-docker-tags.outputs.dockerhub_image }}:${{ needs.set-docker-tags.outputs.tag_version }}
          cache-from: type=registry,ref=${{ needs.set-docker-tags.outputs.dockerhub_image }}:${{ needs.set-docker-tags.outputs.tag_version }}
          cache-to: type=inline

      - name: Tag and push latest to Docker Hub
        run: |
          docker pull "${{ needs.set-docker-tags.outputs.dockerhub_image }}:${{ needs.set-docker-tags.outputs.tag_version }}"
          docker tag "${{ needs.set-docker-tags.outputs.dockerhub_image }}:${{ needs.set-docker-tags.outputs.tag_version }}" "${{ needs.set-docker-tags.outputs.dockerhub_image }}:latest"
          docker push "${{ needs.set-docker-tags.outputs.dockerhub_image }}:latest"

  # Build and push Docker image to GitHub Container Registry
  build-and-push-ghcr:
    needs: set-docker-tags
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/satp-dev')
    runs-on: ubuntu-22.04
    env:
      NODEJS_VERSION: v18.19.0
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Debug Build Info
        run: |
          {
            echo "Debug: Building for tag version = ${{ needs.set-docker-tags.outputs.tag_version }}"
            echo "Debug: Building for GHCR image = ${{ needs.set-docker-tags.outputs.ghcr_image }}"
            echo "Debug: Node.js version = ${{ env.NODEJS_VERSION }}"
            echo "Debug: Working directory content:"
            ls -la
            echo "Debug: SATP plugin directory content:"
            ls -la packages/cactus-plugin-satp-hermes/ || echo "Plugin directory not found"
          }
          
      - name: Use Node.js ${{ env.NODEJS_VERSION }}
        uses: actions/setup-node@v4.0.3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          
      - name: Configure and build bundle
        run: |
          {
            echo "Debug: Starting bundle configuration and build"
            yarn configure
            echo "Debug: Yarn configure completed"
            yarn lerna run build:bundle --scope=@hyperledger/cactus-plugin-satp-hermes
            echo "Debug: Bundle build completed"
          }
          
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
        
      - name: Debug Docker Info
        run: |
          {
            echo "Debug: Docker version:"
            docker version
            echo "Debug: Docker info:"
            docker info
          }
          
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./packages/cactus-plugin-satp-hermes/
          file: ./packages/cactus-plugin-satp-hermes/satp-hermes-gateway.Dockerfile
          push: true
          labels: |
            org.opencontainers.image.source=https://github.com/hyperledger/cacti
            org.opencontainers.image.description=SATP Hermes Gateway
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.vendor=Hyperledger
            org.opencontainers.image.version=${{ needs.set-docker-tags.outputs.tag_version }}
            org.opencontainers.image.visibility=public
          tags: ${{ needs.set-docker-tags.outputs.ghcr_image }}:${{ needs.set-docker-tags.outputs.tag_version }}
          cache-from: type=registry,ref=${{ needs.set-docker-tags.outputs.ghcr_image }}:${{ needs.set-docker-tags.outputs.tag_version }}
          cache-to: type=inline

      - name: Tag and push latest to GHCR
        run: |
          docker pull "${{ needs.set-docker-tags.outputs.ghcr_image }}:${{ needs.set-docker-tags.outputs.tag_version }}"
          docker tag "${{ needs.set-docker-tags.outputs.ghcr_image }}:${{ needs.set-docker-tags.outputs.tag_version }}" "${{ needs.set-docker-tags.outputs.ghcr_image }}:latest"
          docker push "${{ needs.set-docker-tags.outputs.ghcr_image }}:latest"
