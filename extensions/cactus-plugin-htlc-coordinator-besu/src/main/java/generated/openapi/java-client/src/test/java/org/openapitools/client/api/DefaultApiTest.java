/*
 * Hyperledger Cactus Plugin - HTLC Coordinator
 * Can exchange assets between networks
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CounterpartyHTLCRequest;
import org.openapitools.client.model.OwnHTLCRequest;
import org.openapitools.client.model.WithdrawCounterpartyRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Create an instance to interact with the counterparty HTLC
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void counterpartyHtlcV1Test() throws ApiException {
        CounterpartyHTLCRequest counterpartyHTLCRequest = null;
        Object response = api.counterpartyHtlcV1(counterpartyHTLCRequest);
        // TODO: test validations
    }

    /**
     * Create an instance to interact with the own HTLC.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ownHtlcV1Test() throws ApiException {
        OwnHTLCRequest ownHTLCRequest = null;
        Object response = api.ownHtlcV1(ownHTLCRequest);
        // TODO: test validations
    }

    /**
     * Withdraw funds of the counterparty HTLC
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void withdrawCounterpartyV1Test() throws ApiException {
        WithdrawCounterpartyRequest withdrawCounterpartyRequest = null;
        Object response = api.withdrawCounterpartyV1(withdrawCounterpartyRequest);
        // TODO: test validations
    }

}
