/*
Hyperledger Cactus Plugin - HTLC Coordinator

Can exchange assets between networks

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-htlc-coordinator-besu

import (
	"encoding/json"
)

// checks if the OwnHTLCRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OwnHTLCRequest{}

// OwnHTLCRequest struct for OwnHTLCRequest
type OwnHTLCRequest struct {
	HtlcPackage HtlcPackage `json:"htlcPackage"`
	// connector Instance Id for the connector plugin
	ConnectorInstanceId string `json:"connectorInstanceId"`
	// keychainId for the keychain plugin
	KeychainId string `json:"keychainId"`
	ConstructorArgs []interface{} `json:"constructorArgs"`
	Web3SigningCredential Web3SigningCredential `json:"web3SigningCredential"`
	// Input amount to lock
	InputAmount float32 `json:"inputAmount"`
	// Output amount to lock
	OutputAmount float32 `json:"outputAmount"`
	// Timestamp to expire the contract
	Expiration float32 `json:"expiration"`
	// Hashlock needed to refund the amount
	HashLock string `json:"hashLock"`
	// The token address
	TokenAddress string `json:"tokenAddress"`
	// The receiver address
	Receiver string `json:"receiver"`
	// The output network id
	OutputNetwork string `json:"outputNetwork"`
	// The output addreess to receive the tokens
	OutputAddress string `json:"outputAddress"`
	Gas *float32 `json:"gas,omitempty"`
}

// NewOwnHTLCRequest instantiates a new OwnHTLCRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOwnHTLCRequest(htlcPackage HtlcPackage, connectorInstanceId string, keychainId string, constructorArgs []interface{}, web3SigningCredential Web3SigningCredential, inputAmount float32, outputAmount float32, expiration float32, hashLock string, tokenAddress string, receiver string, outputNetwork string, outputAddress string) *OwnHTLCRequest {
	this := OwnHTLCRequest{}
	this.HtlcPackage = htlcPackage
	this.ConnectorInstanceId = connectorInstanceId
	this.KeychainId = keychainId
	this.ConstructorArgs = constructorArgs
	this.Web3SigningCredential = web3SigningCredential
	this.InputAmount = inputAmount
	this.OutputAmount = outputAmount
	this.Expiration = expiration
	this.HashLock = hashLock
	this.TokenAddress = tokenAddress
	this.Receiver = receiver
	this.OutputNetwork = outputNetwork
	this.OutputAddress = outputAddress
	return &this
}

// NewOwnHTLCRequestWithDefaults instantiates a new OwnHTLCRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOwnHTLCRequestWithDefaults() *OwnHTLCRequest {
	this := OwnHTLCRequest{}
	return &this
}

// GetHtlcPackage returns the HtlcPackage field value
func (o *OwnHTLCRequest) GetHtlcPackage() HtlcPackage {
	if o == nil {
		var ret HtlcPackage
		return ret
	}

	return o.HtlcPackage
}

// GetHtlcPackageOk returns a tuple with the HtlcPackage field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetHtlcPackageOk() (*HtlcPackage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtlcPackage, true
}

// SetHtlcPackage sets field value
func (o *OwnHTLCRequest) SetHtlcPackage(v HtlcPackage) {
	o.HtlcPackage = v
}

// GetConnectorInstanceId returns the ConnectorInstanceId field value
func (o *OwnHTLCRequest) GetConnectorInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorInstanceId
}

// GetConnectorInstanceIdOk returns a tuple with the ConnectorInstanceId field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetConnectorInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorInstanceId, true
}

// SetConnectorInstanceId sets field value
func (o *OwnHTLCRequest) SetConnectorInstanceId(v string) {
	o.ConnectorInstanceId = v
}

// GetKeychainId returns the KeychainId field value
func (o *OwnHTLCRequest) GetKeychainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeychainId
}

// GetKeychainIdOk returns a tuple with the KeychainId field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetKeychainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeychainId, true
}

// SetKeychainId sets field value
func (o *OwnHTLCRequest) SetKeychainId(v string) {
	o.KeychainId = v
}

// GetConstructorArgs returns the ConstructorArgs field value
func (o *OwnHTLCRequest) GetConstructorArgs() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.ConstructorArgs
}

// GetConstructorArgsOk returns a tuple with the ConstructorArgs field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetConstructorArgsOk() ([]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConstructorArgs, true
}

// SetConstructorArgs sets field value
func (o *OwnHTLCRequest) SetConstructorArgs(v []interface{}) {
	o.ConstructorArgs = v
}

// GetWeb3SigningCredential returns the Web3SigningCredential field value
func (o *OwnHTLCRequest) GetWeb3SigningCredential() Web3SigningCredential {
	if o == nil {
		var ret Web3SigningCredential
		return ret
	}

	return o.Web3SigningCredential
}

// GetWeb3SigningCredentialOk returns a tuple with the Web3SigningCredential field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetWeb3SigningCredentialOk() (*Web3SigningCredential, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Web3SigningCredential, true
}

// SetWeb3SigningCredential sets field value
func (o *OwnHTLCRequest) SetWeb3SigningCredential(v Web3SigningCredential) {
	o.Web3SigningCredential = v
}

// GetInputAmount returns the InputAmount field value
func (o *OwnHTLCRequest) GetInputAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InputAmount
}

// GetInputAmountOk returns a tuple with the InputAmount field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetInputAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputAmount, true
}

// SetInputAmount sets field value
func (o *OwnHTLCRequest) SetInputAmount(v float32) {
	o.InputAmount = v
}

// GetOutputAmount returns the OutputAmount field value
func (o *OwnHTLCRequest) GetOutputAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OutputAmount
}

// GetOutputAmountOk returns a tuple with the OutputAmount field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetOutputAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputAmount, true
}

// SetOutputAmount sets field value
func (o *OwnHTLCRequest) SetOutputAmount(v float32) {
	o.OutputAmount = v
}

// GetExpiration returns the Expiration field value
func (o *OwnHTLCRequest) GetExpiration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetExpirationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expiration, true
}

// SetExpiration sets field value
func (o *OwnHTLCRequest) SetExpiration(v float32) {
	o.Expiration = v
}

// GetHashLock returns the HashLock field value
func (o *OwnHTLCRequest) GetHashLock() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HashLock
}

// GetHashLockOk returns a tuple with the HashLock field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetHashLockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HashLock, true
}

// SetHashLock sets field value
func (o *OwnHTLCRequest) SetHashLock(v string) {
	o.HashLock = v
}

// GetTokenAddress returns the TokenAddress field value
func (o *OwnHTLCRequest) GetTokenAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenAddress
}

// GetTokenAddressOk returns a tuple with the TokenAddress field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetTokenAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenAddress, true
}

// SetTokenAddress sets field value
func (o *OwnHTLCRequest) SetTokenAddress(v string) {
	o.TokenAddress = v
}

// GetReceiver returns the Receiver field value
func (o *OwnHTLCRequest) GetReceiver() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetReceiverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Receiver, true
}

// SetReceiver sets field value
func (o *OwnHTLCRequest) SetReceiver(v string) {
	o.Receiver = v
}

// GetOutputNetwork returns the OutputNetwork field value
func (o *OwnHTLCRequest) GetOutputNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputNetwork
}

// GetOutputNetworkOk returns a tuple with the OutputNetwork field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetOutputNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputNetwork, true
}

// SetOutputNetwork sets field value
func (o *OwnHTLCRequest) SetOutputNetwork(v string) {
	o.OutputNetwork = v
}

// GetOutputAddress returns the OutputAddress field value
func (o *OwnHTLCRequest) GetOutputAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputAddress
}

// GetOutputAddressOk returns a tuple with the OutputAddress field value
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetOutputAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputAddress, true
}

// SetOutputAddress sets field value
func (o *OwnHTLCRequest) SetOutputAddress(v string) {
	o.OutputAddress = v
}

// GetGas returns the Gas field value if set, zero value otherwise.
func (o *OwnHTLCRequest) GetGas() float32 {
	if o == nil || IsNil(o.Gas) {
		var ret float32
		return ret
	}
	return *o.Gas
}

// GetGasOk returns a tuple with the Gas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OwnHTLCRequest) GetGasOk() (*float32, bool) {
	if o == nil || IsNil(o.Gas) {
		return nil, false
	}
	return o.Gas, true
}

// HasGas returns a boolean if a field has been set.
func (o *OwnHTLCRequest) HasGas() bool {
	if o != nil && !IsNil(o.Gas) {
		return true
	}

	return false
}

// SetGas gets a reference to the given float32 and assigns it to the Gas field.
func (o *OwnHTLCRequest) SetGas(v float32) {
	o.Gas = &v
}

func (o OwnHTLCRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OwnHTLCRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["htlcPackage"] = o.HtlcPackage
	toSerialize["connectorInstanceId"] = o.ConnectorInstanceId
	toSerialize["keychainId"] = o.KeychainId
	toSerialize["constructorArgs"] = o.ConstructorArgs
	toSerialize["web3SigningCredential"] = o.Web3SigningCredential
	toSerialize["inputAmount"] = o.InputAmount
	toSerialize["outputAmount"] = o.OutputAmount
	toSerialize["expiration"] = o.Expiration
	toSerialize["hashLock"] = o.HashLock
	toSerialize["tokenAddress"] = o.TokenAddress
	toSerialize["receiver"] = o.Receiver
	toSerialize["outputNetwork"] = o.OutputNetwork
	toSerialize["outputAddress"] = o.OutputAddress
	if !IsNil(o.Gas) {
		toSerialize["gas"] = o.Gas
	}
	return toSerialize, nil
}

type NullableOwnHTLCRequest struct {
	value *OwnHTLCRequest
	isSet bool
}

func (v NullableOwnHTLCRequest) Get() *OwnHTLCRequest {
	return v.value
}

func (v *NullableOwnHTLCRequest) Set(val *OwnHTLCRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOwnHTLCRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOwnHTLCRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOwnHTLCRequest(val *OwnHTLCRequest) *NullableOwnHTLCRequest {
	return &NullableOwnHTLCRequest{value: val, isSet: true}
}

func (v NullableOwnHTLCRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOwnHTLCRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


