/*
Hyperledger Cactus Plugin - Ubiquity

Ubiquity wrapper for Hyperledger Cactus

API version: v2.0.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-ubiquity

import (
	"encoding/json"
)

// checks if the GetTransactionsByAddressEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTransactionsByAddressEndpoint{}

// GetTransactionsByAddressEndpoint Gets transactions that an address was involved with, from newest to oldest. This call uses pagination. Source: https://ubiquity.docs.blockdaemon.com/swagger-ui/#/Accounts/GetTxsByAddress
type GetTransactionsByAddressEndpoint struct {
	Protocol string `json:"protocol"`
	Network string `json:"network"`
	Address string `json:"address"`
}

// NewGetTransactionsByAddressEndpoint instantiates a new GetTransactionsByAddressEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTransactionsByAddressEndpoint(protocol string, network string, address string) *GetTransactionsByAddressEndpoint {
	this := GetTransactionsByAddressEndpoint{}
	this.Protocol = protocol
	this.Network = network
	this.Address = address
	return &this
}

// NewGetTransactionsByAddressEndpointWithDefaults instantiates a new GetTransactionsByAddressEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTransactionsByAddressEndpointWithDefaults() *GetTransactionsByAddressEndpoint {
	this := GetTransactionsByAddressEndpoint{}
	return &this
}

// GetProtocol returns the Protocol field value
func (o *GetTransactionsByAddressEndpoint) GetProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *GetTransactionsByAddressEndpoint) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *GetTransactionsByAddressEndpoint) SetProtocol(v string) {
	o.Protocol = v
}

// GetNetwork returns the Network field value
func (o *GetTransactionsByAddressEndpoint) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *GetTransactionsByAddressEndpoint) GetNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *GetTransactionsByAddressEndpoint) SetNetwork(v string) {
	o.Network = v
}

// GetAddress returns the Address field value
func (o *GetTransactionsByAddressEndpoint) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *GetTransactionsByAddressEndpoint) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *GetTransactionsByAddressEndpoint) SetAddress(v string) {
	o.Address = v
}

func (o GetTransactionsByAddressEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTransactionsByAddressEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["protocol"] = o.Protocol
	toSerialize["network"] = o.Network
	toSerialize["address"] = o.Address
	return toSerialize, nil
}

type NullableGetTransactionsByAddressEndpoint struct {
	value *GetTransactionsByAddressEndpoint
	isSet bool
}

func (v NullableGetTransactionsByAddressEndpoint) Get() *GetTransactionsByAddressEndpoint {
	return v.value
}

func (v *NullableGetTransactionsByAddressEndpoint) Set(val *GetTransactionsByAddressEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTransactionsByAddressEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTransactionsByAddressEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTransactionsByAddressEndpoint(val *GetTransactionsByAddressEndpoint) *NullableGetTransactionsByAddressEndpoint {
	return &NullableGetTransactionsByAddressEndpoint{value: val, isSet: true}
}

func (v NullableGetTransactionsByAddressEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTransactionsByAddressEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


