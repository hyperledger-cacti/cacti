/*
 * Hyperledger Cactus Plugin - Connector Xdai
 * Can perform basic tasks on a Xdai ledger
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeployContractJsonObjectV1Request;
import org.openapitools.client.model.DeployContractV1Request;
import org.openapitools.client.model.DeployContractV1Response;
import org.openapitools.client.model.InvokeContractJsonObjectV1Request;
import org.openapitools.client.model.InvokeContractV1Request;
import org.openapitools.client.model.InvokeContractV1Response;
import org.openapitools.client.model.RunTransactionV1Request;
import org.openapitools.client.model.RunTransactionV1Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Deploys the bytecode of a Solidity contract.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deployContractJsonObjectV1Test() throws ApiException {
        DeployContractJsonObjectV1Request deployContractJsonObjectV1Request = null;
        DeployContractV1Response response = api.deployContractJsonObjectV1(deployContractJsonObjectV1Request);
        // TODO: test validations
    }

    /**
     * Deploys the bytecode of a Solidity contract.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deployContractV1Test() throws ApiException {
        DeployContractV1Request deployContractV1Request = null;
        DeployContractV1Response response = api.deployContractV1(deployContractV1Request);
        // TODO: test validations
    }

    /**
     * Get the Prometheus Metrics
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPrometheusMetricsV1Test() throws ApiException {
        String response = api.getPrometheusMetricsV1();
        // TODO: test validations
    }

    /**
     * Invokes a contract on a besu ledger
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invokeContractJsonObjectTest() throws ApiException {
        InvokeContractJsonObjectV1Request invokeContractJsonObjectV1Request = null;
        InvokeContractV1Response response = api.invokeContractJsonObject(invokeContractJsonObjectV1Request);
        // TODO: test validations
    }

    /**
     * Invokes a contract on a xdai ledger
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void invokeContractV1Test() throws ApiException {
        InvokeContractV1Request invokeContractV1Request = null;
        InvokeContractV1Response response = api.invokeContractV1(invokeContractV1Request);
        // TODO: test validations
    }

    /**
     * Executes a transaction on a xdai ledger
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void runTransactionV1Test() throws ApiException {
        RunTransactionV1Request runTransactionV1Request = null;
        RunTransactionV1Response response = api.runTransactionV1(runTransactionV1Request);
        // TODO: test validations
    }

}
