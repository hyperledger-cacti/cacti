/*
Hyperledger Cactus Plugin - Connector Xdai

Can perform basic tasks on a Xdai ledger

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-xdai

import (
	"encoding/json"
)

// checks if the InvokeRequestBaseV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvokeRequestBaseV1{}

// InvokeRequestBaseV1 struct for InvokeRequestBaseV1
type InvokeRequestBaseV1 struct {
	// Address of the solidity contract
	ContractAddress string `json:"contractAddress"`
	Web3SigningCredential Web3SigningCredential `json:"web3SigningCredential"`
	InvocationType EthContractInvocationType `json:"invocationType"`
	// The name of the contract method to invoke.
	MethodName string `json:"methodName"`
	// The list of arguments to pass in to the contract method being invoked.
	Params []interface{} `json:"params"`
	Value *XdaiTransactionConfigFrom `json:"value,omitempty"`
	Gas *XdaiTransactionConfigFrom `json:"gas,omitempty"`
	GasPrice *XdaiTransactionConfigFrom `json:"gasPrice,omitempty"`
	Nonce *float32 `json:"nonce,omitempty"`
	// The amount of milliseconds to wait for a transaction receipt beforegiving up and crashing. Only has any effect if the invocation type is SEND
	TimeoutMs *float32 `json:"timeoutMs,omitempty"`
	ContractJSON ContractJSON `json:"contractJSON"`
}

// NewInvokeRequestBaseV1 instantiates a new InvokeRequestBaseV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvokeRequestBaseV1(contractAddress string, web3SigningCredential Web3SigningCredential, invocationType EthContractInvocationType, methodName string, params []interface{}, contractJSON ContractJSON) *InvokeRequestBaseV1 {
	this := InvokeRequestBaseV1{}
	this.ContractAddress = contractAddress
	this.Web3SigningCredential = web3SigningCredential
	this.InvocationType = invocationType
	this.MethodName = methodName
	this.Params = params
	var timeoutMs float32 = 60000
	this.TimeoutMs = &timeoutMs
	this.ContractJSON = contractJSON
	return &this
}

// NewInvokeRequestBaseV1WithDefaults instantiates a new InvokeRequestBaseV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvokeRequestBaseV1WithDefaults() *InvokeRequestBaseV1 {
	this := InvokeRequestBaseV1{}
	var timeoutMs float32 = 60000
	this.TimeoutMs = &timeoutMs
	return &this
}

// GetContractAddress returns the ContractAddress field value
func (o *InvokeRequestBaseV1) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *InvokeRequestBaseV1) GetContractAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *InvokeRequestBaseV1) SetContractAddress(v string) {
	o.ContractAddress = v
}

// GetWeb3SigningCredential returns the Web3SigningCredential field value
func (o *InvokeRequestBaseV1) GetWeb3SigningCredential() Web3SigningCredential {
	if o == nil {
		var ret Web3SigningCredential
		return ret
	}

	return o.Web3SigningCredential
}

// GetWeb3SigningCredentialOk returns a tuple with the Web3SigningCredential field value
// and a boolean to check if the value has been set.
func (o *InvokeRequestBaseV1) GetWeb3SigningCredentialOk() (*Web3SigningCredential, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Web3SigningCredential, true
}

// SetWeb3SigningCredential sets field value
func (o *InvokeRequestBaseV1) SetWeb3SigningCredential(v Web3SigningCredential) {
	o.Web3SigningCredential = v
}

// GetInvocationType returns the InvocationType field value
func (o *InvokeRequestBaseV1) GetInvocationType() EthContractInvocationType {
	if o == nil {
		var ret EthContractInvocationType
		return ret
	}

	return o.InvocationType
}

// GetInvocationTypeOk returns a tuple with the InvocationType field value
// and a boolean to check if the value has been set.
func (o *InvokeRequestBaseV1) GetInvocationTypeOk() (*EthContractInvocationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvocationType, true
}

// SetInvocationType sets field value
func (o *InvokeRequestBaseV1) SetInvocationType(v EthContractInvocationType) {
	o.InvocationType = v
}

// GetMethodName returns the MethodName field value
func (o *InvokeRequestBaseV1) GetMethodName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MethodName
}

// GetMethodNameOk returns a tuple with the MethodName field value
// and a boolean to check if the value has been set.
func (o *InvokeRequestBaseV1) GetMethodNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MethodName, true
}

// SetMethodName sets field value
func (o *InvokeRequestBaseV1) SetMethodName(v string) {
	o.MethodName = v
}

// GetParams returns the Params field value
func (o *InvokeRequestBaseV1) GetParams() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *InvokeRequestBaseV1) GetParamsOk() ([]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Params, true
}

// SetParams sets field value
func (o *InvokeRequestBaseV1) SetParams(v []interface{}) {
	o.Params = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *InvokeRequestBaseV1) GetValue() XdaiTransactionConfigFrom {
	if o == nil || IsNil(o.Value) {
		var ret XdaiTransactionConfigFrom
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvokeRequestBaseV1) GetValueOk() (*XdaiTransactionConfigFrom, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *InvokeRequestBaseV1) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given XdaiTransactionConfigFrom and assigns it to the Value field.
func (o *InvokeRequestBaseV1) SetValue(v XdaiTransactionConfigFrom) {
	o.Value = &v
}

// GetGas returns the Gas field value if set, zero value otherwise.
func (o *InvokeRequestBaseV1) GetGas() XdaiTransactionConfigFrom {
	if o == nil || IsNil(o.Gas) {
		var ret XdaiTransactionConfigFrom
		return ret
	}
	return *o.Gas
}

// GetGasOk returns a tuple with the Gas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvokeRequestBaseV1) GetGasOk() (*XdaiTransactionConfigFrom, bool) {
	if o == nil || IsNil(o.Gas) {
		return nil, false
	}
	return o.Gas, true
}

// HasGas returns a boolean if a field has been set.
func (o *InvokeRequestBaseV1) HasGas() bool {
	if o != nil && !IsNil(o.Gas) {
		return true
	}

	return false
}

// SetGas gets a reference to the given XdaiTransactionConfigFrom and assigns it to the Gas field.
func (o *InvokeRequestBaseV1) SetGas(v XdaiTransactionConfigFrom) {
	o.Gas = &v
}

// GetGasPrice returns the GasPrice field value if set, zero value otherwise.
func (o *InvokeRequestBaseV1) GetGasPrice() XdaiTransactionConfigFrom {
	if o == nil || IsNil(o.GasPrice) {
		var ret XdaiTransactionConfigFrom
		return ret
	}
	return *o.GasPrice
}

// GetGasPriceOk returns a tuple with the GasPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvokeRequestBaseV1) GetGasPriceOk() (*XdaiTransactionConfigFrom, bool) {
	if o == nil || IsNil(o.GasPrice) {
		return nil, false
	}
	return o.GasPrice, true
}

// HasGasPrice returns a boolean if a field has been set.
func (o *InvokeRequestBaseV1) HasGasPrice() bool {
	if o != nil && !IsNil(o.GasPrice) {
		return true
	}

	return false
}

// SetGasPrice gets a reference to the given XdaiTransactionConfigFrom and assigns it to the GasPrice field.
func (o *InvokeRequestBaseV1) SetGasPrice(v XdaiTransactionConfigFrom) {
	o.GasPrice = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *InvokeRequestBaseV1) GetNonce() float32 {
	if o == nil || IsNil(o.Nonce) {
		var ret float32
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvokeRequestBaseV1) GetNonceOk() (*float32, bool) {
	if o == nil || IsNil(o.Nonce) {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *InvokeRequestBaseV1) HasNonce() bool {
	if o != nil && !IsNil(o.Nonce) {
		return true
	}

	return false
}

// SetNonce gets a reference to the given float32 and assigns it to the Nonce field.
func (o *InvokeRequestBaseV1) SetNonce(v float32) {
	o.Nonce = &v
}

// GetTimeoutMs returns the TimeoutMs field value if set, zero value otherwise.
func (o *InvokeRequestBaseV1) GetTimeoutMs() float32 {
	if o == nil || IsNil(o.TimeoutMs) {
		var ret float32
		return ret
	}
	return *o.TimeoutMs
}

// GetTimeoutMsOk returns a tuple with the TimeoutMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvokeRequestBaseV1) GetTimeoutMsOk() (*float32, bool) {
	if o == nil || IsNil(o.TimeoutMs) {
		return nil, false
	}
	return o.TimeoutMs, true
}

// HasTimeoutMs returns a boolean if a field has been set.
func (o *InvokeRequestBaseV1) HasTimeoutMs() bool {
	if o != nil && !IsNil(o.TimeoutMs) {
		return true
	}

	return false
}

// SetTimeoutMs gets a reference to the given float32 and assigns it to the TimeoutMs field.
func (o *InvokeRequestBaseV1) SetTimeoutMs(v float32) {
	o.TimeoutMs = &v
}

// GetContractJSON returns the ContractJSON field value
func (o *InvokeRequestBaseV1) GetContractJSON() ContractJSON {
	if o == nil {
		var ret ContractJSON
		return ret
	}

	return o.ContractJSON
}

// GetContractJSONOk returns a tuple with the ContractJSON field value
// and a boolean to check if the value has been set.
func (o *InvokeRequestBaseV1) GetContractJSONOk() (*ContractJSON, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractJSON, true
}

// SetContractJSON sets field value
func (o *InvokeRequestBaseV1) SetContractJSON(v ContractJSON) {
	o.ContractJSON = v
}

func (o InvokeRequestBaseV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvokeRequestBaseV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contractAddress"] = o.ContractAddress
	toSerialize["web3SigningCredential"] = o.Web3SigningCredential
	toSerialize["invocationType"] = o.InvocationType
	toSerialize["methodName"] = o.MethodName
	toSerialize["params"] = o.Params
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Gas) {
		toSerialize["gas"] = o.Gas
	}
	if !IsNil(o.GasPrice) {
		toSerialize["gasPrice"] = o.GasPrice
	}
	if !IsNil(o.Nonce) {
		toSerialize["nonce"] = o.Nonce
	}
	if !IsNil(o.TimeoutMs) {
		toSerialize["timeoutMs"] = o.TimeoutMs
	}
	toSerialize["contractJSON"] = o.ContractJSON
	return toSerialize, nil
}

type NullableInvokeRequestBaseV1 struct {
	value *InvokeRequestBaseV1
	isSet bool
}

func (v NullableInvokeRequestBaseV1) Get() *InvokeRequestBaseV1 {
	return v.value
}

func (v *NullableInvokeRequestBaseV1) Set(val *InvokeRequestBaseV1) {
	v.value = val
	v.isSet = true
}

func (v NullableInvokeRequestBaseV1) IsSet() bool {
	return v.isSet
}

func (v *NullableInvokeRequestBaseV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvokeRequestBaseV1(val *InvokeRequestBaseV1) *NullableInvokeRequestBaseV1 {
	return &NullableInvokeRequestBaseV1{value: val, isSet: true}
}

func (v NullableInvokeRequestBaseV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvokeRequestBaseV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


