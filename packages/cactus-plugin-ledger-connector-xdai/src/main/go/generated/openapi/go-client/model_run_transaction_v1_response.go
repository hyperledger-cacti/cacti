/*
Hyperledger Cactus Plugin - Connector Xdai

Can perform basic tasks on a Xdai ledger

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-xdai

import (
	"encoding/json"
)

// checks if the RunTransactionV1Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunTransactionV1Response{}

// RunTransactionV1Response struct for RunTransactionV1Response
type RunTransactionV1Response struct {
	TransactionReceipt Web3TransactionReceipt `json:"transactionReceipt"`
}

// NewRunTransactionV1Response instantiates a new RunTransactionV1Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunTransactionV1Response(transactionReceipt Web3TransactionReceipt) *RunTransactionV1Response {
	this := RunTransactionV1Response{}
	this.TransactionReceipt = transactionReceipt
	return &this
}

// NewRunTransactionV1ResponseWithDefaults instantiates a new RunTransactionV1Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunTransactionV1ResponseWithDefaults() *RunTransactionV1Response {
	this := RunTransactionV1Response{}
	return &this
}

// GetTransactionReceipt returns the TransactionReceipt field value
func (o *RunTransactionV1Response) GetTransactionReceipt() Web3TransactionReceipt {
	if o == nil {
		var ret Web3TransactionReceipt
		return ret
	}

	return o.TransactionReceipt
}

// GetTransactionReceiptOk returns a tuple with the TransactionReceipt field value
// and a boolean to check if the value has been set.
func (o *RunTransactionV1Response) GetTransactionReceiptOk() (*Web3TransactionReceipt, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionReceipt, true
}

// SetTransactionReceipt sets field value
func (o *RunTransactionV1Response) SetTransactionReceipt(v Web3TransactionReceipt) {
	o.TransactionReceipt = v
}

func (o RunTransactionV1Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunTransactionV1Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["transactionReceipt"] = o.TransactionReceipt
	return toSerialize, nil
}

type NullableRunTransactionV1Response struct {
	value *RunTransactionV1Response
	isSet bool
}

func (v NullableRunTransactionV1Response) Get() *RunTransactionV1Response {
	return v.value
}

func (v *NullableRunTransactionV1Response) Set(val *RunTransactionV1Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRunTransactionV1Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRunTransactionV1Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunTransactionV1Response(val *RunTransactionV1Response) *NullableRunTransactionV1Response {
	return &NullableRunTransactionV1Response{value: val, isSet: true}
}

func (v NullableRunTransactionV1Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunTransactionV1Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


