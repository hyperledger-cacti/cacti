/*
Hyperledger Cacti Plugin - Connector Sawtooth

Can perform basic tasks on a Sawtooth ledger

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-sawtooth

import (
	"encoding/json"
)

// checks if the WatchBlocksV1TransactionFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchBlocksV1TransactionFilter{}

// WatchBlocksV1TransactionFilter struct for WatchBlocksV1TransactionFilter
type WatchBlocksV1TransactionFilter struct {
	FamilyName *string `json:"family_name,omitempty"`
}

// NewWatchBlocksV1TransactionFilter instantiates a new WatchBlocksV1TransactionFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchBlocksV1TransactionFilter() *WatchBlocksV1TransactionFilter {
	this := WatchBlocksV1TransactionFilter{}
	return &this
}

// NewWatchBlocksV1TransactionFilterWithDefaults instantiates a new WatchBlocksV1TransactionFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchBlocksV1TransactionFilterWithDefaults() *WatchBlocksV1TransactionFilter {
	this := WatchBlocksV1TransactionFilter{}
	return &this
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *WatchBlocksV1TransactionFilter) GetFamilyName() string {
	if o == nil || IsNil(o.FamilyName) {
		var ret string
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchBlocksV1TransactionFilter) GetFamilyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyName) {
		return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *WatchBlocksV1TransactionFilter) HasFamilyName() bool {
	if o != nil && !IsNil(o.FamilyName) {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given string and assigns it to the FamilyName field.
func (o *WatchBlocksV1TransactionFilter) SetFamilyName(v string) {
	o.FamilyName = &v
}

func (o WatchBlocksV1TransactionFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchBlocksV1TransactionFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FamilyName) {
		toSerialize["family_name"] = o.FamilyName
	}
	return toSerialize, nil
}

type NullableWatchBlocksV1TransactionFilter struct {
	value *WatchBlocksV1TransactionFilter
	isSet bool
}

func (v NullableWatchBlocksV1TransactionFilter) Get() *WatchBlocksV1TransactionFilter {
	return v.value
}

func (v *NullableWatchBlocksV1TransactionFilter) Set(val *WatchBlocksV1TransactionFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchBlocksV1TransactionFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchBlocksV1TransactionFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchBlocksV1TransactionFilter(val *WatchBlocksV1TransactionFilter) *NullableWatchBlocksV1TransactionFilter {
	return &NullableWatchBlocksV1TransactionFilter{value: val, isSet: true}
}

func (v NullableWatchBlocksV1TransactionFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchBlocksV1TransactionFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


