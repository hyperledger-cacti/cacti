/*
Hyperledger Cacti Plugin - Connector Sawtooth

Can perform basic tasks on a Sawtooth ledger

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-sawtooth

import (
	"encoding/json"
)

// checks if the SawtoothTransactionHeaderV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SawtoothTransactionHeaderV1{}

// SawtoothTransactionHeaderV1 struct for SawtoothTransactionHeaderV1
type SawtoothTransactionHeaderV1 struct {
	BatcherPublicKey string `json:"batcher_public_key"`
	Dependencies []string `json:"dependencies"`
	FamilyName string `json:"family_name"`
	FamilyVersion string `json:"family_version"`
	Inputs []string `json:"inputs"`
	Nonce string `json:"nonce"`
	Outputs []string `json:"outputs"`
	PayloadSha512 string `json:"payload_sha512"`
	SignerPublicKey string `json:"signer_public_key"`
}

// NewSawtoothTransactionHeaderV1 instantiates a new SawtoothTransactionHeaderV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSawtoothTransactionHeaderV1(batcherPublicKey string, dependencies []string, familyName string, familyVersion string, inputs []string, nonce string, outputs []string, payloadSha512 string, signerPublicKey string) *SawtoothTransactionHeaderV1 {
	this := SawtoothTransactionHeaderV1{}
	this.BatcherPublicKey = batcherPublicKey
	this.Dependencies = dependencies
	this.FamilyName = familyName
	this.FamilyVersion = familyVersion
	this.Inputs = inputs
	this.Nonce = nonce
	this.Outputs = outputs
	this.PayloadSha512 = payloadSha512
	this.SignerPublicKey = signerPublicKey
	return &this
}

// NewSawtoothTransactionHeaderV1WithDefaults instantiates a new SawtoothTransactionHeaderV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSawtoothTransactionHeaderV1WithDefaults() *SawtoothTransactionHeaderV1 {
	this := SawtoothTransactionHeaderV1{}
	return &this
}

// GetBatcherPublicKey returns the BatcherPublicKey field value
func (o *SawtoothTransactionHeaderV1) GetBatcherPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BatcherPublicKey
}

// GetBatcherPublicKeyOk returns a tuple with the BatcherPublicKey field value
// and a boolean to check if the value has been set.
func (o *SawtoothTransactionHeaderV1) GetBatcherPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BatcherPublicKey, true
}

// SetBatcherPublicKey sets field value
func (o *SawtoothTransactionHeaderV1) SetBatcherPublicKey(v string) {
	o.BatcherPublicKey = v
}

// GetDependencies returns the Dependencies field value
func (o *SawtoothTransactionHeaderV1) GetDependencies() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value
// and a boolean to check if the value has been set.
func (o *SawtoothTransactionHeaderV1) GetDependenciesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dependencies, true
}

// SetDependencies sets field value
func (o *SawtoothTransactionHeaderV1) SetDependencies(v []string) {
	o.Dependencies = v
}

// GetFamilyName returns the FamilyName field value
func (o *SawtoothTransactionHeaderV1) GetFamilyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value
// and a boolean to check if the value has been set.
func (o *SawtoothTransactionHeaderV1) GetFamilyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FamilyName, true
}

// SetFamilyName sets field value
func (o *SawtoothTransactionHeaderV1) SetFamilyName(v string) {
	o.FamilyName = v
}

// GetFamilyVersion returns the FamilyVersion field value
func (o *SawtoothTransactionHeaderV1) GetFamilyVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FamilyVersion
}

// GetFamilyVersionOk returns a tuple with the FamilyVersion field value
// and a boolean to check if the value has been set.
func (o *SawtoothTransactionHeaderV1) GetFamilyVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FamilyVersion, true
}

// SetFamilyVersion sets field value
func (o *SawtoothTransactionHeaderV1) SetFamilyVersion(v string) {
	o.FamilyVersion = v
}

// GetInputs returns the Inputs field value
func (o *SawtoothTransactionHeaderV1) GetInputs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *SawtoothTransactionHeaderV1) GetInputsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inputs, true
}

// SetInputs sets field value
func (o *SawtoothTransactionHeaderV1) SetInputs(v []string) {
	o.Inputs = v
}

// GetNonce returns the Nonce field value
func (o *SawtoothTransactionHeaderV1) GetNonce() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *SawtoothTransactionHeaderV1) GetNonceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *SawtoothTransactionHeaderV1) SetNonce(v string) {
	o.Nonce = v
}

// GetOutputs returns the Outputs field value
func (o *SawtoothTransactionHeaderV1) GetOutputs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value
// and a boolean to check if the value has been set.
func (o *SawtoothTransactionHeaderV1) GetOutputsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Outputs, true
}

// SetOutputs sets field value
func (o *SawtoothTransactionHeaderV1) SetOutputs(v []string) {
	o.Outputs = v
}

// GetPayloadSha512 returns the PayloadSha512 field value
func (o *SawtoothTransactionHeaderV1) GetPayloadSha512() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayloadSha512
}

// GetPayloadSha512Ok returns a tuple with the PayloadSha512 field value
// and a boolean to check if the value has been set.
func (o *SawtoothTransactionHeaderV1) GetPayloadSha512Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayloadSha512, true
}

// SetPayloadSha512 sets field value
func (o *SawtoothTransactionHeaderV1) SetPayloadSha512(v string) {
	o.PayloadSha512 = v
}

// GetSignerPublicKey returns the SignerPublicKey field value
func (o *SawtoothTransactionHeaderV1) GetSignerPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignerPublicKey
}

// GetSignerPublicKeyOk returns a tuple with the SignerPublicKey field value
// and a boolean to check if the value has been set.
func (o *SawtoothTransactionHeaderV1) GetSignerPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignerPublicKey, true
}

// SetSignerPublicKey sets field value
func (o *SawtoothTransactionHeaderV1) SetSignerPublicKey(v string) {
	o.SignerPublicKey = v
}

func (o SawtoothTransactionHeaderV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SawtoothTransactionHeaderV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["batcher_public_key"] = o.BatcherPublicKey
	toSerialize["dependencies"] = o.Dependencies
	toSerialize["family_name"] = o.FamilyName
	toSerialize["family_version"] = o.FamilyVersion
	toSerialize["inputs"] = o.Inputs
	toSerialize["nonce"] = o.Nonce
	toSerialize["outputs"] = o.Outputs
	toSerialize["payload_sha512"] = o.PayloadSha512
	toSerialize["signer_public_key"] = o.SignerPublicKey
	return toSerialize, nil
}

type NullableSawtoothTransactionHeaderV1 struct {
	value *SawtoothTransactionHeaderV1
	isSet bool
}

func (v NullableSawtoothTransactionHeaderV1) Get() *SawtoothTransactionHeaderV1 {
	return v.value
}

func (v *NullableSawtoothTransactionHeaderV1) Set(val *SawtoothTransactionHeaderV1) {
	v.value = val
	v.isSet = true
}

func (v NullableSawtoothTransactionHeaderV1) IsSet() bool {
	return v.isSet
}

func (v *NullableSawtoothTransactionHeaderV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSawtoothTransactionHeaderV1(val *SawtoothTransactionHeaderV1) *NullableSawtoothTransactionHeaderV1 {
	return &NullableSawtoothTransactionHeaderV1{value: val, isSet: true}
}

func (v NullableSawtoothTransactionHeaderV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSawtoothTransactionHeaderV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


