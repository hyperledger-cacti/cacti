/* tslint:disable */
/* eslint-disable */
/**
 * Hyperledger Cactus Plugin - Connector Besu
 * Can perform basic tasks on a Besu ledger
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';

/**
 * 
 * @export
 * @interface AssetProfile
 */
export interface AssetProfile {
    /**
     * 
     * @type {string}
     * @memberof AssetProfile
     */
    Issuer?: string;
    /**
     * 
     * @type {string}
     * @memberof AssetProfile
     */
    AssetCode?: string;
    /**
     * 
     * @type {string}
     * @memberof AssetProfile
     */
    AssetCodeType?: string;
    /**
     * 
     * @type {string}
     * @memberof AssetProfile
     */
    IssuanceDate?: string;
    /**
     * 
     * @type {string}
     * @memberof AssetProfile
     */
    ExpirationDate?: string;
    /**
     * 
     * @type {string}
     * @memberof AssetProfile
     */
    VerificationEndPoint?: string;
    /**
     * 
     * @type {string}
     * @memberof AssetProfile
     */
    DigitalSignature?: string;
    /**
     * 
     * @type {string}
     * @memberof AssetProfile
     */
    ProspectusLink?: string;
    /**
     * 
     * @type {Array<any>}
     * @memberof AssetProfile
     */
    KeyInformationLink?: Array<any>;
    /**
     * 
     * @type {Array<any>}
     * @memberof AssetProfile
     */
    KeyWord?: Array<any>;
    /**
     * 
     * @type {Array<any>}
     * @memberof AssetProfile
     */
    TransferRestriction?: Array<any>;
    /**
     * 
     * @type {Array<any>}
     * @memberof AssetProfile
     */
    LedgerRequirements?: Array<any>;
}
/**
 * 
 * @export
 * @interface History
 */
export interface History {
    /**
     * 
     * @type {Array<object>}
     * @memberof History
     */
    Transactions?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof History
     */
    Actions?: Array<object>;
    /**
     * 
     * @type {string}
     * @memberof History
     */
    Origin?: string;
    /**
     * 
     * @type {string}
     * @memberof History
     */
    Destination?: string;
    /**
     * 
     * @type {string}
     * @memberof History
     */
    Balance?: string;
    /**
     * 
     * @type {object}
     * @memberof History
     */
    CurrentStatus?: object;
    /**
     * 
     * @type {object}
     * @memberof History
     */
    ApplicationSpecificParameters?: object;
}
/**
 * 
 * @export
 * @interface InitialMessageAck
 */
export interface InitialMessageAck {
    /**
     * 
     * @type {string}
     * @memberof InitialMessageAck
     */
    SessionID?: string;
    /**
     * 
     * @type {number}
     * @memberof InitialMessageAck
     */
    SequenceNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof InitialMessageAck
     */
    OdapPhase?: InitialMessageAckOdapPhaseEnum;
    /**
     * 
     * @type {string}
     * @memberof InitialMessageAck
     */
    InitialRequestMessageHash?: string;
    /**
     * 
     * @type {string}
     * @memberof InitialMessageAck
     */
    Destination?: string;
    /**
     * 
     * @type {string}
     * @memberof InitialMessageAck
     */
    TimeStamp?: string;
    /**
     * 
     * @type {string}
     * @memberof InitialMessageAck
     */
    ProcessedTimeStamp?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum InitialMessageAckOdapPhaseEnum {
    TransferInitialization = 'TransferInitialization',
    LockEvidenceVerification = 'LockEvidenceVerification',
    CommitmentEstablishment = 'CommitmentEstablishment'
}

/**
 * 
 * @export
 * @interface InitializationRequestMessage
 */
export interface InitializationRequestMessage {
    /**
     * 
     * @type {string}
     * @memberof InitializationRequestMessage
     */
    Version?: string;
    /**
     * 
     * @type {string}
     * @memberof InitializationRequestMessage
     */
    DeveloperURN?: string;
    /**
     * 
     * @type {object}
     * @memberof InitializationRequestMessage
     */
    PayloadProfile?: object;
    /**
     * 
     * @type {AssetProfile}
     * @memberof InitializationRequestMessage
     */
    ApplicationProfile?: AssetProfile;
    /**
     * 
     * @type {object}
     * @memberof InitializationRequestMessage
     */
    LoggingProfile?: object;
    /**
     * 
     * @type {AssetProfile}
     * @memberof InitializationRequestMessage
     */
    AccessControlProfile?: AssetProfile;
    /**
     * 
     * @type {string}
     * @memberof InitializationRequestMessage
     */
    InitializationRequestMessageSignature?: string;
    /**
     * 
     * @type {string}
     * @memberof InitializationRequestMessage
     */
    SourceGatewayPubkey?: string;
    /**
     * 
     * @type {string}
     * @memberof InitializationRequestMessage
     */
    SourceGateWayDltSystem?: string;
    /**
     * 
     * @type {string}
     * @memberof InitializationRequestMessage
     */
    RecipentGateWayPubkey?: string;
    /**
     * 
     * @type {string}
     * @memberof InitializationRequestMessage
     */
    RecipentGateWayDltSystem?: string;
    /**
     * 
     * @type {string}
     * @memberof InitializationRequestMessage
     */
    EscrowType?: InitializationRequestMessageEscrowTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof InitializationRequestMessage
     */
    ExpiryTime?: string;
    /**
     * 
     * @type {boolean}
     * @memberof InitializationRequestMessage
     */
    MultipleClaimsAllowed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof InitializationRequestMessage
     */
    MultipleCancelsAllowed?: boolean;
    /**
     * 
     * @type {object}
     * @memberof InitializationRequestMessage
     */
    Permissions?: object;
    /**
     * 
     * @type {string}
     * @memberof InitializationRequestMessage
     */
    Origin?: string;
    /**
     * 
     * @type {string}
     * @memberof InitializationRequestMessage
     */
    Destination?: string;
    /**
     * 
     * @type {object}
     * @memberof InitializationRequestMessage
     */
    SubsequentCalls?: object;
    /**
     * 
     * @type {Array<History>}
     * @memberof InitializationRequestMessage
     */
    Histories?: Array<History>;
}

/**
    * @export
    * @enum {string}
    */
export enum InitializationRequestMessageEscrowTypeEnum {
    Faucet = 'FAUCET',
    Timelock = 'TIMELOCK',
    Hashlock = 'HASHLOCK',
    Hashtimelock = 'HASHTIMELOCK',
    Multiclaimpc = 'MULTICLAIMPC',
    Destroy = 'DESTROY',
    Burn = 'BURN'
}

/**
 * 
 * @export
 * @interface OdapMessage
 */
export interface OdapMessage {
    /**
     * 
     * @type {number}
     * @memberof OdapMessage
     */
    SequenceNumber?: number;
    /**
     * 
     * @type {string}
     * @memberof OdapMessage
     */
    Phase?: OdapMessagePhaseEnum;
    /**
     * 
     * @type {string}
     * @memberof OdapMessage
     */
    ResourceURL?: string;
    /**
     * 
     * @type {string}
     * @memberof OdapMessage
     */
    DeveloperURN?: string;
    /**
     * 
     * @type {OdapMessageActionResponse}
     * @memberof OdapMessage
     */
    ActionResponse?: OdapMessageActionResponse;
    /**
     * 
     * @type {string}
     * @memberof OdapMessage
     */
    CredentialProfile?: OdapMessageCredentialProfileEnum;
    /**
     * 
     * @type {Array<any>}
     * @memberof OdapMessage
     */
    CredentialBlock?: Array<any>;
    /**
     * 
     * @type {object}
     * @memberof OdapMessage
     */
    CredentialsProfile?: object;
    /**
     * 
     * @type {object}
     * @memberof OdapMessage
     */
    ApplicationProfile?: object;
    /**
     * 
     * @type {object}
     * @memberof OdapMessage
     */
    Payload?: object;
    /**
     * 
     * @type {string}
     * @memberof OdapMessage
     */
    PayloadHash?: string;
    /**
     * 
     * @type {string}
     * @memberof OdapMessage
     */
    MessageSinature?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum OdapMessagePhaseEnum {
    TransferInitialization = 'TransferInitialization',
    LockEvidenceVerification = 'LockEvidenceVerification',
    CommitmentEstablishment = 'CommitmentEstablishment'
}
/**
    * @export
    * @enum {string}
    */
export enum OdapMessageCredentialProfileEnum {
    Saml = 'SAML',
    OAuth = 'OAuth',
    X509 = 'X509'
}

/**
 * 
 * @export
 * @interface OdapMessageActionResponse
 */
export interface OdapMessageActionResponse {
    /**
     * 
     * @type {string}
     * @memberof OdapMessageActionResponse
     */
    ResponseCode?: OdapMessageActionResponseResponseCodeEnum;
    /**
     * 
     * @type {Array<any>}
     * @memberof OdapMessageActionResponse
     */
    Arguments?: Array<any>;
}

/**
    * @export
    * @enum {string}
    */
export enum OdapMessageActionResponseResponseCodeEnum {
    OK = '200',
    RESOURCE_NOT_FOUND = '404'
}


/**
 * DefaultApi - axios parameter creator
 * @export
 */
export const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @param {InitializationRequestMessage} [initializationRequestMessage] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiV1TransferinitiationGet: async (initializationRequestMessage?: InitializationRequestMessage, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/api/v1/transferinitiation`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(initializationRequestMessage, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DefaultApi - functional programming interface
 * @export
 */
export const DefaultApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = DefaultApiAxiosParamCreator(configuration)
    return {
        /**
         * 
         * @param {InitializationRequestMessage} [initializationRequestMessage] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiV1TransferinitiationGet(initializationRequestMessage?: InitializationRequestMessage, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InitialMessageAck>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.apiV1TransferinitiationGet(initializationRequestMessage, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * DefaultApi - factory interface
 * @export
 */
export const DefaultApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = DefaultApiFp(configuration)
    return {
        /**
         * 
         * @param {InitializationRequestMessage} [initializationRequestMessage] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiV1TransferinitiationGet(initializationRequestMessage?: InitializationRequestMessage, options?: any): AxiosPromise<InitialMessageAck> {
            return localVarFp.apiV1TransferinitiationGet(initializationRequestMessage, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export class DefaultApi extends BaseAPI {
    /**
     * 
     * @param {InitializationRequestMessage} [initializationRequestMessage] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public apiV1TransferinitiationGet(initializationRequestMessage?: InitializationRequestMessage, options?: any) {
        return DefaultApiFp(this.configuration).apiV1TransferinitiationGet(initializationRequestMessage, options).then((request) => request(this.axios, this.basePath));
    }
}


