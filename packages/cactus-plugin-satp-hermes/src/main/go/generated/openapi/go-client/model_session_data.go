/*
Hyperledger Cactus Plugin - Odap Hermes

Implementation for Odap and Hermes

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-satp-hermes

import (
	"encoding/json"
)

// checks if the SessionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionData{}

// SessionData struct for SessionData
type SessionData struct {
	Id *string `json:"id,omitempty"`
	Step *float32 `json:"step,omitempty"`
	Version *string `json:"version,omitempty"`
	LastSequenceNumber *float32 `json:"lastSequenceNumber,omitempty"`
	LoggingProfile *string `json:"loggingProfile,omitempty"`
	AccessControlProfile *string `json:"accessControlProfile,omitempty"`
	ApplicationProfile *string `json:"applicationProfile,omitempty"`
	PayloadProfile *PayloadProfile `json:"payloadProfile,omitempty"`
	AssetProfile *AssetProfile `json:"assetProfile,omitempty"`
	AllowedSourceBackupGateways []string `json:"allowedSourceBackupGateways,omitempty"`
	AllowedRecipientBackupGateways []string `json:"allowedRecipientBackupGateways,omitempty"`
	SourceBasePath *string `json:"sourceBasePath,omitempty"`
	RecipientBasePath *string `json:"recipientBasePath,omitempty"`
	OriginatorPubkey *string `json:"originatorPubkey,omitempty"`
	BeneficiaryPubkey *string `json:"beneficiaryPubkey,omitempty"`
	SourceGatewayPubkey *string `json:"sourceGatewayPubkey,omitempty"`
	SourceGatewayDltSystem *string `json:"sourceGatewayDltSystem,omitempty"`
	RecipientGatewayPubkey *string `json:"recipientGatewayPubkey,omitempty"`
	RecipientGatewayDltSystem *string `json:"recipientGatewayDltSystem,omitempty"`
	InitializationRequestMessageHash *string `json:"initializationRequestMessageHash,omitempty"`
	InitializationResponseMessageHash *string `json:"initializationResponseMessageHash,omitempty"`
	InitializationRequestMessageRcvTimeStamp *string `json:"initializationRequestMessageRcvTimeStamp,omitempty"`
	InitializationRequestMessageProcessedTimeStamp *string `json:"initializationRequestMessageProcessedTimeStamp,omitempty"`
	ClientSignatureInitializationRequestMessage *string `json:"clientSignatureInitializationRequestMessage,omitempty"`
	ServerSignatureInitializationResponseMessage *string `json:"serverSignatureInitializationResponseMessage,omitempty"`
	TransferCommenceMessageRequestHash *string `json:"transferCommenceMessageRequestHash,omitempty"`
	TransferCommenceMessageResponseHash *string `json:"transferCommenceMessageResponseHash,omitempty"`
	ClientSignatureTransferCommenceRequestMessage *string `json:"clientSignatureTransferCommenceRequestMessage,omitempty"`
	ServerSignatureTransferCommenceResponseMessage *string `json:"serverSignatureTransferCommenceResponseMessage,omitempty"`
	LockEvidenceRequestMessageHash *string `json:"lockEvidenceRequestMessageHash,omitempty"`
	LockEvidenceResponseMessageHash *string `json:"lockEvidenceResponseMessageHash,omitempty"`
	ClientSignatureLockEvidenceRequestMessage *string `json:"clientSignatureLockEvidenceRequestMessage,omitempty"`
	ServerSignatureLockEvidenceResponseMessage *string `json:"serverSignatureLockEvidenceResponseMessage,omitempty"`
	LockEvidenceClaim *string `json:"lockEvidenceClaim,omitempty"`
	CommitPrepareRequestMessageHash *string `json:"commitPrepareRequestMessageHash,omitempty"`
	CommitPrepareResponseMessageHash *string `json:"commitPrepareResponseMessageHash,omitempty"`
	ClientSignatureCommitPreparationRequestMessage *string `json:"clientSignatureCommitPreparationRequestMessage,omitempty"`
	ServerSignatureCommitPreparationResponseMessage *string `json:"serverSignatureCommitPreparationResponseMessage,omitempty"`
	CommitFinalRequestMessageHash *string `json:"commitFinalRequestMessageHash,omitempty"`
	CommitFinalResponseMessageHash *string `json:"commitFinalResponseMessageHash,omitempty"`
	CommitFinalClaim *string `json:"commitFinalClaim,omitempty"`
	CommitFinalClaimFormat *string `json:"commitFinalClaimFormat,omitempty"`
	CommitAcknowledgementClaim *string `json:"commitAcknowledgementClaim,omitempty"`
	CommitAcknowledgementClaimFormat *string `json:"commitAcknowledgementClaimFormat,omitempty"`
	ClientSignatureCommitFinalRequestMessage *string `json:"clientSignatureCommitFinalRequestMessage,omitempty"`
	ServerSignatureCommitFinalResponseMessage *string `json:"serverSignatureCommitFinalResponseMessage,omitempty"`
	TransferCompleteMessageHash *string `json:"transferCompleteMessageHash,omitempty"`
	ClientSignatureTransferCompleteMessage *string `json:"clientSignatureTransferCompleteMessage,omitempty"`
	MaxRetries *float32 `json:"maxRetries,omitempty"`
	RecipientLedgerAssetID *string `json:"recipientLedgerAssetID,omitempty"`
	SourceLedgerAssetID *string `json:"sourceLedgerAssetID,omitempty"`
	MaxTimeout *float32 `json:"maxTimeout,omitempty"`
	LastLogEntryTimestamp *string `json:"lastLogEntryTimestamp,omitempty"`
	UnlockAssetClaim *string `json:"unlockAssetClaim,omitempty"`
	RecreateAssetClaim *string `json:"recreateAssetClaim,omitempty"`
	DeleteAssetClaim *string `json:"deleteAssetClaim,omitempty"`
	LastMessageReceivedTimestamp *string `json:"lastMessageReceivedTimestamp,omitempty"`
	Rollback *bool `json:"rollback,omitempty"`
	RollbackMessageHash *string `json:"rollbackMessageHash,omitempty"`
	RollbackProofs []string `json:"rollbackProofs,omitempty"`
	RollbackActionsPerformed []string `json:"rollbackActionsPerformed,omitempty"`
}

// NewSessionData instantiates a new SessionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionData() *SessionData {
	this := SessionData{}
	return &this
}

// NewSessionDataWithDefaults instantiates a new SessionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionDataWithDefaults() *SessionData {
	this := SessionData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SessionData) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SessionData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SessionData) SetId(v string) {
	o.Id = &v
}

// GetStep returns the Step field value if set, zero value otherwise.
func (o *SessionData) GetStep() float32 {
	if o == nil || IsNil(o.Step) {
		var ret float32
		return ret
	}
	return *o.Step
}

// GetStepOk returns a tuple with the Step field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetStepOk() (*float32, bool) {
	if o == nil || IsNil(o.Step) {
		return nil, false
	}
	return o.Step, true
}

// HasStep returns a boolean if a field has been set.
func (o *SessionData) HasStep() bool {
	if o != nil && !IsNil(o.Step) {
		return true
	}

	return false
}

// SetStep gets a reference to the given float32 and assigns it to the Step field.
func (o *SessionData) SetStep(v float32) {
	o.Step = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SessionData) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SessionData) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *SessionData) SetVersion(v string) {
	o.Version = &v
}

// GetLastSequenceNumber returns the LastSequenceNumber field value if set, zero value otherwise.
func (o *SessionData) GetLastSequenceNumber() float32 {
	if o == nil || IsNil(o.LastSequenceNumber) {
		var ret float32
		return ret
	}
	return *o.LastSequenceNumber
}

// GetLastSequenceNumberOk returns a tuple with the LastSequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetLastSequenceNumberOk() (*float32, bool) {
	if o == nil || IsNil(o.LastSequenceNumber) {
		return nil, false
	}
	return o.LastSequenceNumber, true
}

// HasLastSequenceNumber returns a boolean if a field has been set.
func (o *SessionData) HasLastSequenceNumber() bool {
	if o != nil && !IsNil(o.LastSequenceNumber) {
		return true
	}

	return false
}

// SetLastSequenceNumber gets a reference to the given float32 and assigns it to the LastSequenceNumber field.
func (o *SessionData) SetLastSequenceNumber(v float32) {
	o.LastSequenceNumber = &v
}

// GetLoggingProfile returns the LoggingProfile field value if set, zero value otherwise.
func (o *SessionData) GetLoggingProfile() string {
	if o == nil || IsNil(o.LoggingProfile) {
		var ret string
		return ret
	}
	return *o.LoggingProfile
}

// GetLoggingProfileOk returns a tuple with the LoggingProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetLoggingProfileOk() (*string, bool) {
	if o == nil || IsNil(o.LoggingProfile) {
		return nil, false
	}
	return o.LoggingProfile, true
}

// HasLoggingProfile returns a boolean if a field has been set.
func (o *SessionData) HasLoggingProfile() bool {
	if o != nil && !IsNil(o.LoggingProfile) {
		return true
	}

	return false
}

// SetLoggingProfile gets a reference to the given string and assigns it to the LoggingProfile field.
func (o *SessionData) SetLoggingProfile(v string) {
	o.LoggingProfile = &v
}

// GetAccessControlProfile returns the AccessControlProfile field value if set, zero value otherwise.
func (o *SessionData) GetAccessControlProfile() string {
	if o == nil || IsNil(o.AccessControlProfile) {
		var ret string
		return ret
	}
	return *o.AccessControlProfile
}

// GetAccessControlProfileOk returns a tuple with the AccessControlProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetAccessControlProfileOk() (*string, bool) {
	if o == nil || IsNil(o.AccessControlProfile) {
		return nil, false
	}
	return o.AccessControlProfile, true
}

// HasAccessControlProfile returns a boolean if a field has been set.
func (o *SessionData) HasAccessControlProfile() bool {
	if o != nil && !IsNil(o.AccessControlProfile) {
		return true
	}

	return false
}

// SetAccessControlProfile gets a reference to the given string and assigns it to the AccessControlProfile field.
func (o *SessionData) SetAccessControlProfile(v string) {
	o.AccessControlProfile = &v
}

// GetApplicationProfile returns the ApplicationProfile field value if set, zero value otherwise.
func (o *SessionData) GetApplicationProfile() string {
	if o == nil || IsNil(o.ApplicationProfile) {
		var ret string
		return ret
	}
	return *o.ApplicationProfile
}

// GetApplicationProfileOk returns a tuple with the ApplicationProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetApplicationProfileOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationProfile) {
		return nil, false
	}
	return o.ApplicationProfile, true
}

// HasApplicationProfile returns a boolean if a field has been set.
func (o *SessionData) HasApplicationProfile() bool {
	if o != nil && !IsNil(o.ApplicationProfile) {
		return true
	}

	return false
}

// SetApplicationProfile gets a reference to the given string and assigns it to the ApplicationProfile field.
func (o *SessionData) SetApplicationProfile(v string) {
	o.ApplicationProfile = &v
}

// GetPayloadProfile returns the PayloadProfile field value if set, zero value otherwise.
func (o *SessionData) GetPayloadProfile() PayloadProfile {
	if o == nil || IsNil(o.PayloadProfile) {
		var ret PayloadProfile
		return ret
	}
	return *o.PayloadProfile
}

// GetPayloadProfileOk returns a tuple with the PayloadProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetPayloadProfileOk() (*PayloadProfile, bool) {
	if o == nil || IsNil(o.PayloadProfile) {
		return nil, false
	}
	return o.PayloadProfile, true
}

// HasPayloadProfile returns a boolean if a field has been set.
func (o *SessionData) HasPayloadProfile() bool {
	if o != nil && !IsNil(o.PayloadProfile) {
		return true
	}

	return false
}

// SetPayloadProfile gets a reference to the given PayloadProfile and assigns it to the PayloadProfile field.
func (o *SessionData) SetPayloadProfile(v PayloadProfile) {
	o.PayloadProfile = &v
}

// GetAssetProfile returns the AssetProfile field value if set, zero value otherwise.
func (o *SessionData) GetAssetProfile() AssetProfile {
	if o == nil || IsNil(o.AssetProfile) {
		var ret AssetProfile
		return ret
	}
	return *o.AssetProfile
}

// GetAssetProfileOk returns a tuple with the AssetProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetAssetProfileOk() (*AssetProfile, bool) {
	if o == nil || IsNil(o.AssetProfile) {
		return nil, false
	}
	return o.AssetProfile, true
}

// HasAssetProfile returns a boolean if a field has been set.
func (o *SessionData) HasAssetProfile() bool {
	if o != nil && !IsNil(o.AssetProfile) {
		return true
	}

	return false
}

// SetAssetProfile gets a reference to the given AssetProfile and assigns it to the AssetProfile field.
func (o *SessionData) SetAssetProfile(v AssetProfile) {
	o.AssetProfile = &v
}

// GetAllowedSourceBackupGateways returns the AllowedSourceBackupGateways field value if set, zero value otherwise.
func (o *SessionData) GetAllowedSourceBackupGateways() []string {
	if o == nil || IsNil(o.AllowedSourceBackupGateways) {
		var ret []string
		return ret
	}
	return o.AllowedSourceBackupGateways
}

// GetAllowedSourceBackupGatewaysOk returns a tuple with the AllowedSourceBackupGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetAllowedSourceBackupGatewaysOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedSourceBackupGateways) {
		return nil, false
	}
	return o.AllowedSourceBackupGateways, true
}

// HasAllowedSourceBackupGateways returns a boolean if a field has been set.
func (o *SessionData) HasAllowedSourceBackupGateways() bool {
	if o != nil && !IsNil(o.AllowedSourceBackupGateways) {
		return true
	}

	return false
}

// SetAllowedSourceBackupGateways gets a reference to the given []string and assigns it to the AllowedSourceBackupGateways field.
func (o *SessionData) SetAllowedSourceBackupGateways(v []string) {
	o.AllowedSourceBackupGateways = v
}

// GetAllowedRecipientBackupGateways returns the AllowedRecipientBackupGateways field value if set, zero value otherwise.
func (o *SessionData) GetAllowedRecipientBackupGateways() []string {
	if o == nil || IsNil(o.AllowedRecipientBackupGateways) {
		var ret []string
		return ret
	}
	return o.AllowedRecipientBackupGateways
}

// GetAllowedRecipientBackupGatewaysOk returns a tuple with the AllowedRecipientBackupGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetAllowedRecipientBackupGatewaysOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedRecipientBackupGateways) {
		return nil, false
	}
	return o.AllowedRecipientBackupGateways, true
}

// HasAllowedRecipientBackupGateways returns a boolean if a field has been set.
func (o *SessionData) HasAllowedRecipientBackupGateways() bool {
	if o != nil && !IsNil(o.AllowedRecipientBackupGateways) {
		return true
	}

	return false
}

// SetAllowedRecipientBackupGateways gets a reference to the given []string and assigns it to the AllowedRecipientBackupGateways field.
func (o *SessionData) SetAllowedRecipientBackupGateways(v []string) {
	o.AllowedRecipientBackupGateways = v
}

// GetSourceBasePath returns the SourceBasePath field value if set, zero value otherwise.
func (o *SessionData) GetSourceBasePath() string {
	if o == nil || IsNil(o.SourceBasePath) {
		var ret string
		return ret
	}
	return *o.SourceBasePath
}

// GetSourceBasePathOk returns a tuple with the SourceBasePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetSourceBasePathOk() (*string, bool) {
	if o == nil || IsNil(o.SourceBasePath) {
		return nil, false
	}
	return o.SourceBasePath, true
}

// HasSourceBasePath returns a boolean if a field has been set.
func (o *SessionData) HasSourceBasePath() bool {
	if o != nil && !IsNil(o.SourceBasePath) {
		return true
	}

	return false
}

// SetSourceBasePath gets a reference to the given string and assigns it to the SourceBasePath field.
func (o *SessionData) SetSourceBasePath(v string) {
	o.SourceBasePath = &v
}

// GetRecipientBasePath returns the RecipientBasePath field value if set, zero value otherwise.
func (o *SessionData) GetRecipientBasePath() string {
	if o == nil || IsNil(o.RecipientBasePath) {
		var ret string
		return ret
	}
	return *o.RecipientBasePath
}

// GetRecipientBasePathOk returns a tuple with the RecipientBasePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetRecipientBasePathOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientBasePath) {
		return nil, false
	}
	return o.RecipientBasePath, true
}

// HasRecipientBasePath returns a boolean if a field has been set.
func (o *SessionData) HasRecipientBasePath() bool {
	if o != nil && !IsNil(o.RecipientBasePath) {
		return true
	}

	return false
}

// SetRecipientBasePath gets a reference to the given string and assigns it to the RecipientBasePath field.
func (o *SessionData) SetRecipientBasePath(v string) {
	o.RecipientBasePath = &v
}

// GetOriginatorPubkey returns the OriginatorPubkey field value if set, zero value otherwise.
func (o *SessionData) GetOriginatorPubkey() string {
	if o == nil || IsNil(o.OriginatorPubkey) {
		var ret string
		return ret
	}
	return *o.OriginatorPubkey
}

// GetOriginatorPubkeyOk returns a tuple with the OriginatorPubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetOriginatorPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.OriginatorPubkey) {
		return nil, false
	}
	return o.OriginatorPubkey, true
}

// HasOriginatorPubkey returns a boolean if a field has been set.
func (o *SessionData) HasOriginatorPubkey() bool {
	if o != nil && !IsNil(o.OriginatorPubkey) {
		return true
	}

	return false
}

// SetOriginatorPubkey gets a reference to the given string and assigns it to the OriginatorPubkey field.
func (o *SessionData) SetOriginatorPubkey(v string) {
	o.OriginatorPubkey = &v
}

// GetBeneficiaryPubkey returns the BeneficiaryPubkey field value if set, zero value otherwise.
func (o *SessionData) GetBeneficiaryPubkey() string {
	if o == nil || IsNil(o.BeneficiaryPubkey) {
		var ret string
		return ret
	}
	return *o.BeneficiaryPubkey
}

// GetBeneficiaryPubkeyOk returns a tuple with the BeneficiaryPubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetBeneficiaryPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.BeneficiaryPubkey) {
		return nil, false
	}
	return o.BeneficiaryPubkey, true
}

// HasBeneficiaryPubkey returns a boolean if a field has been set.
func (o *SessionData) HasBeneficiaryPubkey() bool {
	if o != nil && !IsNil(o.BeneficiaryPubkey) {
		return true
	}

	return false
}

// SetBeneficiaryPubkey gets a reference to the given string and assigns it to the BeneficiaryPubkey field.
func (o *SessionData) SetBeneficiaryPubkey(v string) {
	o.BeneficiaryPubkey = &v
}

// GetSourceGatewayPubkey returns the SourceGatewayPubkey field value if set, zero value otherwise.
func (o *SessionData) GetSourceGatewayPubkey() string {
	if o == nil || IsNil(o.SourceGatewayPubkey) {
		var ret string
		return ret
	}
	return *o.SourceGatewayPubkey
}

// GetSourceGatewayPubkeyOk returns a tuple with the SourceGatewayPubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetSourceGatewayPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.SourceGatewayPubkey) {
		return nil, false
	}
	return o.SourceGatewayPubkey, true
}

// HasSourceGatewayPubkey returns a boolean if a field has been set.
func (o *SessionData) HasSourceGatewayPubkey() bool {
	if o != nil && !IsNil(o.SourceGatewayPubkey) {
		return true
	}

	return false
}

// SetSourceGatewayPubkey gets a reference to the given string and assigns it to the SourceGatewayPubkey field.
func (o *SessionData) SetSourceGatewayPubkey(v string) {
	o.SourceGatewayPubkey = &v
}

// GetSourceGatewayDltSystem returns the SourceGatewayDltSystem field value if set, zero value otherwise.
func (o *SessionData) GetSourceGatewayDltSystem() string {
	if o == nil || IsNil(o.SourceGatewayDltSystem) {
		var ret string
		return ret
	}
	return *o.SourceGatewayDltSystem
}

// GetSourceGatewayDltSystemOk returns a tuple with the SourceGatewayDltSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetSourceGatewayDltSystemOk() (*string, bool) {
	if o == nil || IsNil(o.SourceGatewayDltSystem) {
		return nil, false
	}
	return o.SourceGatewayDltSystem, true
}

// HasSourceGatewayDltSystem returns a boolean if a field has been set.
func (o *SessionData) HasSourceGatewayDltSystem() bool {
	if o != nil && !IsNil(o.SourceGatewayDltSystem) {
		return true
	}

	return false
}

// SetSourceGatewayDltSystem gets a reference to the given string and assigns it to the SourceGatewayDltSystem field.
func (o *SessionData) SetSourceGatewayDltSystem(v string) {
	o.SourceGatewayDltSystem = &v
}

// GetRecipientGatewayPubkey returns the RecipientGatewayPubkey field value if set, zero value otherwise.
func (o *SessionData) GetRecipientGatewayPubkey() string {
	if o == nil || IsNil(o.RecipientGatewayPubkey) {
		var ret string
		return ret
	}
	return *o.RecipientGatewayPubkey
}

// GetRecipientGatewayPubkeyOk returns a tuple with the RecipientGatewayPubkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetRecipientGatewayPubkeyOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientGatewayPubkey) {
		return nil, false
	}
	return o.RecipientGatewayPubkey, true
}

// HasRecipientGatewayPubkey returns a boolean if a field has been set.
func (o *SessionData) HasRecipientGatewayPubkey() bool {
	if o != nil && !IsNil(o.RecipientGatewayPubkey) {
		return true
	}

	return false
}

// SetRecipientGatewayPubkey gets a reference to the given string and assigns it to the RecipientGatewayPubkey field.
func (o *SessionData) SetRecipientGatewayPubkey(v string) {
	o.RecipientGatewayPubkey = &v
}

// GetRecipientGatewayDltSystem returns the RecipientGatewayDltSystem field value if set, zero value otherwise.
func (o *SessionData) GetRecipientGatewayDltSystem() string {
	if o == nil || IsNil(o.RecipientGatewayDltSystem) {
		var ret string
		return ret
	}
	return *o.RecipientGatewayDltSystem
}

// GetRecipientGatewayDltSystemOk returns a tuple with the RecipientGatewayDltSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetRecipientGatewayDltSystemOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientGatewayDltSystem) {
		return nil, false
	}
	return o.RecipientGatewayDltSystem, true
}

// HasRecipientGatewayDltSystem returns a boolean if a field has been set.
func (o *SessionData) HasRecipientGatewayDltSystem() bool {
	if o != nil && !IsNil(o.RecipientGatewayDltSystem) {
		return true
	}

	return false
}

// SetRecipientGatewayDltSystem gets a reference to the given string and assigns it to the RecipientGatewayDltSystem field.
func (o *SessionData) SetRecipientGatewayDltSystem(v string) {
	o.RecipientGatewayDltSystem = &v
}

// GetInitializationRequestMessageHash returns the InitializationRequestMessageHash field value if set, zero value otherwise.
func (o *SessionData) GetInitializationRequestMessageHash() string {
	if o == nil || IsNil(o.InitializationRequestMessageHash) {
		var ret string
		return ret
	}
	return *o.InitializationRequestMessageHash
}

// GetInitializationRequestMessageHashOk returns a tuple with the InitializationRequestMessageHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetInitializationRequestMessageHashOk() (*string, bool) {
	if o == nil || IsNil(o.InitializationRequestMessageHash) {
		return nil, false
	}
	return o.InitializationRequestMessageHash, true
}

// HasInitializationRequestMessageHash returns a boolean if a field has been set.
func (o *SessionData) HasInitializationRequestMessageHash() bool {
	if o != nil && !IsNil(o.InitializationRequestMessageHash) {
		return true
	}

	return false
}

// SetInitializationRequestMessageHash gets a reference to the given string and assigns it to the InitializationRequestMessageHash field.
func (o *SessionData) SetInitializationRequestMessageHash(v string) {
	o.InitializationRequestMessageHash = &v
}

// GetInitializationResponseMessageHash returns the InitializationResponseMessageHash field value if set, zero value otherwise.
func (o *SessionData) GetInitializationResponseMessageHash() string {
	if o == nil || IsNil(o.InitializationResponseMessageHash) {
		var ret string
		return ret
	}
	return *o.InitializationResponseMessageHash
}

// GetInitializationResponseMessageHashOk returns a tuple with the InitializationResponseMessageHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetInitializationResponseMessageHashOk() (*string, bool) {
	if o == nil || IsNil(o.InitializationResponseMessageHash) {
		return nil, false
	}
	return o.InitializationResponseMessageHash, true
}

// HasInitializationResponseMessageHash returns a boolean if a field has been set.
func (o *SessionData) HasInitializationResponseMessageHash() bool {
	if o != nil && !IsNil(o.InitializationResponseMessageHash) {
		return true
	}

	return false
}

// SetInitializationResponseMessageHash gets a reference to the given string and assigns it to the InitializationResponseMessageHash field.
func (o *SessionData) SetInitializationResponseMessageHash(v string) {
	o.InitializationResponseMessageHash = &v
}

// GetInitializationRequestMessageRcvTimeStamp returns the InitializationRequestMessageRcvTimeStamp field value if set, zero value otherwise.
func (o *SessionData) GetInitializationRequestMessageRcvTimeStamp() string {
	if o == nil || IsNil(o.InitializationRequestMessageRcvTimeStamp) {
		var ret string
		return ret
	}
	return *o.InitializationRequestMessageRcvTimeStamp
}

// GetInitializationRequestMessageRcvTimeStampOk returns a tuple with the InitializationRequestMessageRcvTimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetInitializationRequestMessageRcvTimeStampOk() (*string, bool) {
	if o == nil || IsNil(o.InitializationRequestMessageRcvTimeStamp) {
		return nil, false
	}
	return o.InitializationRequestMessageRcvTimeStamp, true
}

// HasInitializationRequestMessageRcvTimeStamp returns a boolean if a field has been set.
func (o *SessionData) HasInitializationRequestMessageRcvTimeStamp() bool {
	if o != nil && !IsNil(o.InitializationRequestMessageRcvTimeStamp) {
		return true
	}

	return false
}

// SetInitializationRequestMessageRcvTimeStamp gets a reference to the given string and assigns it to the InitializationRequestMessageRcvTimeStamp field.
func (o *SessionData) SetInitializationRequestMessageRcvTimeStamp(v string) {
	o.InitializationRequestMessageRcvTimeStamp = &v
}

// GetInitializationRequestMessageProcessedTimeStamp returns the InitializationRequestMessageProcessedTimeStamp field value if set, zero value otherwise.
func (o *SessionData) GetInitializationRequestMessageProcessedTimeStamp() string {
	if o == nil || IsNil(o.InitializationRequestMessageProcessedTimeStamp) {
		var ret string
		return ret
	}
	return *o.InitializationRequestMessageProcessedTimeStamp
}

// GetInitializationRequestMessageProcessedTimeStampOk returns a tuple with the InitializationRequestMessageProcessedTimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetInitializationRequestMessageProcessedTimeStampOk() (*string, bool) {
	if o == nil || IsNil(o.InitializationRequestMessageProcessedTimeStamp) {
		return nil, false
	}
	return o.InitializationRequestMessageProcessedTimeStamp, true
}

// HasInitializationRequestMessageProcessedTimeStamp returns a boolean if a field has been set.
func (o *SessionData) HasInitializationRequestMessageProcessedTimeStamp() bool {
	if o != nil && !IsNil(o.InitializationRequestMessageProcessedTimeStamp) {
		return true
	}

	return false
}

// SetInitializationRequestMessageProcessedTimeStamp gets a reference to the given string and assigns it to the InitializationRequestMessageProcessedTimeStamp field.
func (o *SessionData) SetInitializationRequestMessageProcessedTimeStamp(v string) {
	o.InitializationRequestMessageProcessedTimeStamp = &v
}

// GetClientSignatureInitializationRequestMessage returns the ClientSignatureInitializationRequestMessage field value if set, zero value otherwise.
func (o *SessionData) GetClientSignatureInitializationRequestMessage() string {
	if o == nil || IsNil(o.ClientSignatureInitializationRequestMessage) {
		var ret string
		return ret
	}
	return *o.ClientSignatureInitializationRequestMessage
}

// GetClientSignatureInitializationRequestMessageOk returns a tuple with the ClientSignatureInitializationRequestMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetClientSignatureInitializationRequestMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSignatureInitializationRequestMessage) {
		return nil, false
	}
	return o.ClientSignatureInitializationRequestMessage, true
}

// HasClientSignatureInitializationRequestMessage returns a boolean if a field has been set.
func (o *SessionData) HasClientSignatureInitializationRequestMessage() bool {
	if o != nil && !IsNil(o.ClientSignatureInitializationRequestMessage) {
		return true
	}

	return false
}

// SetClientSignatureInitializationRequestMessage gets a reference to the given string and assigns it to the ClientSignatureInitializationRequestMessage field.
func (o *SessionData) SetClientSignatureInitializationRequestMessage(v string) {
	o.ClientSignatureInitializationRequestMessage = &v
}

// GetServerSignatureInitializationResponseMessage returns the ServerSignatureInitializationResponseMessage field value if set, zero value otherwise.
func (o *SessionData) GetServerSignatureInitializationResponseMessage() string {
	if o == nil || IsNil(o.ServerSignatureInitializationResponseMessage) {
		var ret string
		return ret
	}
	return *o.ServerSignatureInitializationResponseMessage
}

// GetServerSignatureInitializationResponseMessageOk returns a tuple with the ServerSignatureInitializationResponseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetServerSignatureInitializationResponseMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ServerSignatureInitializationResponseMessage) {
		return nil, false
	}
	return o.ServerSignatureInitializationResponseMessage, true
}

// HasServerSignatureInitializationResponseMessage returns a boolean if a field has been set.
func (o *SessionData) HasServerSignatureInitializationResponseMessage() bool {
	if o != nil && !IsNil(o.ServerSignatureInitializationResponseMessage) {
		return true
	}

	return false
}

// SetServerSignatureInitializationResponseMessage gets a reference to the given string and assigns it to the ServerSignatureInitializationResponseMessage field.
func (o *SessionData) SetServerSignatureInitializationResponseMessage(v string) {
	o.ServerSignatureInitializationResponseMessage = &v
}

// GetTransferCommenceMessageRequestHash returns the TransferCommenceMessageRequestHash field value if set, zero value otherwise.
func (o *SessionData) GetTransferCommenceMessageRequestHash() string {
	if o == nil || IsNil(o.TransferCommenceMessageRequestHash) {
		var ret string
		return ret
	}
	return *o.TransferCommenceMessageRequestHash
}

// GetTransferCommenceMessageRequestHashOk returns a tuple with the TransferCommenceMessageRequestHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetTransferCommenceMessageRequestHashOk() (*string, bool) {
	if o == nil || IsNil(o.TransferCommenceMessageRequestHash) {
		return nil, false
	}
	return o.TransferCommenceMessageRequestHash, true
}

// HasTransferCommenceMessageRequestHash returns a boolean if a field has been set.
func (o *SessionData) HasTransferCommenceMessageRequestHash() bool {
	if o != nil && !IsNil(o.TransferCommenceMessageRequestHash) {
		return true
	}

	return false
}

// SetTransferCommenceMessageRequestHash gets a reference to the given string and assigns it to the TransferCommenceMessageRequestHash field.
func (o *SessionData) SetTransferCommenceMessageRequestHash(v string) {
	o.TransferCommenceMessageRequestHash = &v
}

// GetTransferCommenceMessageResponseHash returns the TransferCommenceMessageResponseHash field value if set, zero value otherwise.
func (o *SessionData) GetTransferCommenceMessageResponseHash() string {
	if o == nil || IsNil(o.TransferCommenceMessageResponseHash) {
		var ret string
		return ret
	}
	return *o.TransferCommenceMessageResponseHash
}

// GetTransferCommenceMessageResponseHashOk returns a tuple with the TransferCommenceMessageResponseHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetTransferCommenceMessageResponseHashOk() (*string, bool) {
	if o == nil || IsNil(o.TransferCommenceMessageResponseHash) {
		return nil, false
	}
	return o.TransferCommenceMessageResponseHash, true
}

// HasTransferCommenceMessageResponseHash returns a boolean if a field has been set.
func (o *SessionData) HasTransferCommenceMessageResponseHash() bool {
	if o != nil && !IsNil(o.TransferCommenceMessageResponseHash) {
		return true
	}

	return false
}

// SetTransferCommenceMessageResponseHash gets a reference to the given string and assigns it to the TransferCommenceMessageResponseHash field.
func (o *SessionData) SetTransferCommenceMessageResponseHash(v string) {
	o.TransferCommenceMessageResponseHash = &v
}

// GetClientSignatureTransferCommenceRequestMessage returns the ClientSignatureTransferCommenceRequestMessage field value if set, zero value otherwise.
func (o *SessionData) GetClientSignatureTransferCommenceRequestMessage() string {
	if o == nil || IsNil(o.ClientSignatureTransferCommenceRequestMessage) {
		var ret string
		return ret
	}
	return *o.ClientSignatureTransferCommenceRequestMessage
}

// GetClientSignatureTransferCommenceRequestMessageOk returns a tuple with the ClientSignatureTransferCommenceRequestMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetClientSignatureTransferCommenceRequestMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSignatureTransferCommenceRequestMessage) {
		return nil, false
	}
	return o.ClientSignatureTransferCommenceRequestMessage, true
}

// HasClientSignatureTransferCommenceRequestMessage returns a boolean if a field has been set.
func (o *SessionData) HasClientSignatureTransferCommenceRequestMessage() bool {
	if o != nil && !IsNil(o.ClientSignatureTransferCommenceRequestMessage) {
		return true
	}

	return false
}

// SetClientSignatureTransferCommenceRequestMessage gets a reference to the given string and assigns it to the ClientSignatureTransferCommenceRequestMessage field.
func (o *SessionData) SetClientSignatureTransferCommenceRequestMessage(v string) {
	o.ClientSignatureTransferCommenceRequestMessage = &v
}

// GetServerSignatureTransferCommenceResponseMessage returns the ServerSignatureTransferCommenceResponseMessage field value if set, zero value otherwise.
func (o *SessionData) GetServerSignatureTransferCommenceResponseMessage() string {
	if o == nil || IsNil(o.ServerSignatureTransferCommenceResponseMessage) {
		var ret string
		return ret
	}
	return *o.ServerSignatureTransferCommenceResponseMessage
}

// GetServerSignatureTransferCommenceResponseMessageOk returns a tuple with the ServerSignatureTransferCommenceResponseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetServerSignatureTransferCommenceResponseMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ServerSignatureTransferCommenceResponseMessage) {
		return nil, false
	}
	return o.ServerSignatureTransferCommenceResponseMessage, true
}

// HasServerSignatureTransferCommenceResponseMessage returns a boolean if a field has been set.
func (o *SessionData) HasServerSignatureTransferCommenceResponseMessage() bool {
	if o != nil && !IsNil(o.ServerSignatureTransferCommenceResponseMessage) {
		return true
	}

	return false
}

// SetServerSignatureTransferCommenceResponseMessage gets a reference to the given string and assigns it to the ServerSignatureTransferCommenceResponseMessage field.
func (o *SessionData) SetServerSignatureTransferCommenceResponseMessage(v string) {
	o.ServerSignatureTransferCommenceResponseMessage = &v
}

// GetLockEvidenceRequestMessageHash returns the LockEvidenceRequestMessageHash field value if set, zero value otherwise.
func (o *SessionData) GetLockEvidenceRequestMessageHash() string {
	if o == nil || IsNil(o.LockEvidenceRequestMessageHash) {
		var ret string
		return ret
	}
	return *o.LockEvidenceRequestMessageHash
}

// GetLockEvidenceRequestMessageHashOk returns a tuple with the LockEvidenceRequestMessageHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetLockEvidenceRequestMessageHashOk() (*string, bool) {
	if o == nil || IsNil(o.LockEvidenceRequestMessageHash) {
		return nil, false
	}
	return o.LockEvidenceRequestMessageHash, true
}

// HasLockEvidenceRequestMessageHash returns a boolean if a field has been set.
func (o *SessionData) HasLockEvidenceRequestMessageHash() bool {
	if o != nil && !IsNil(o.LockEvidenceRequestMessageHash) {
		return true
	}

	return false
}

// SetLockEvidenceRequestMessageHash gets a reference to the given string and assigns it to the LockEvidenceRequestMessageHash field.
func (o *SessionData) SetLockEvidenceRequestMessageHash(v string) {
	o.LockEvidenceRequestMessageHash = &v
}

// GetLockEvidenceResponseMessageHash returns the LockEvidenceResponseMessageHash field value if set, zero value otherwise.
func (o *SessionData) GetLockEvidenceResponseMessageHash() string {
	if o == nil || IsNil(o.LockEvidenceResponseMessageHash) {
		var ret string
		return ret
	}
	return *o.LockEvidenceResponseMessageHash
}

// GetLockEvidenceResponseMessageHashOk returns a tuple with the LockEvidenceResponseMessageHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetLockEvidenceResponseMessageHashOk() (*string, bool) {
	if o == nil || IsNil(o.LockEvidenceResponseMessageHash) {
		return nil, false
	}
	return o.LockEvidenceResponseMessageHash, true
}

// HasLockEvidenceResponseMessageHash returns a boolean if a field has been set.
func (o *SessionData) HasLockEvidenceResponseMessageHash() bool {
	if o != nil && !IsNil(o.LockEvidenceResponseMessageHash) {
		return true
	}

	return false
}

// SetLockEvidenceResponseMessageHash gets a reference to the given string and assigns it to the LockEvidenceResponseMessageHash field.
func (o *SessionData) SetLockEvidenceResponseMessageHash(v string) {
	o.LockEvidenceResponseMessageHash = &v
}

// GetClientSignatureLockEvidenceRequestMessage returns the ClientSignatureLockEvidenceRequestMessage field value if set, zero value otherwise.
func (o *SessionData) GetClientSignatureLockEvidenceRequestMessage() string {
	if o == nil || IsNil(o.ClientSignatureLockEvidenceRequestMessage) {
		var ret string
		return ret
	}
	return *o.ClientSignatureLockEvidenceRequestMessage
}

// GetClientSignatureLockEvidenceRequestMessageOk returns a tuple with the ClientSignatureLockEvidenceRequestMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetClientSignatureLockEvidenceRequestMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSignatureLockEvidenceRequestMessage) {
		return nil, false
	}
	return o.ClientSignatureLockEvidenceRequestMessage, true
}

// HasClientSignatureLockEvidenceRequestMessage returns a boolean if a field has been set.
func (o *SessionData) HasClientSignatureLockEvidenceRequestMessage() bool {
	if o != nil && !IsNil(o.ClientSignatureLockEvidenceRequestMessage) {
		return true
	}

	return false
}

// SetClientSignatureLockEvidenceRequestMessage gets a reference to the given string and assigns it to the ClientSignatureLockEvidenceRequestMessage field.
func (o *SessionData) SetClientSignatureLockEvidenceRequestMessage(v string) {
	o.ClientSignatureLockEvidenceRequestMessage = &v
}

// GetServerSignatureLockEvidenceResponseMessage returns the ServerSignatureLockEvidenceResponseMessage field value if set, zero value otherwise.
func (o *SessionData) GetServerSignatureLockEvidenceResponseMessage() string {
	if o == nil || IsNil(o.ServerSignatureLockEvidenceResponseMessage) {
		var ret string
		return ret
	}
	return *o.ServerSignatureLockEvidenceResponseMessage
}

// GetServerSignatureLockEvidenceResponseMessageOk returns a tuple with the ServerSignatureLockEvidenceResponseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetServerSignatureLockEvidenceResponseMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ServerSignatureLockEvidenceResponseMessage) {
		return nil, false
	}
	return o.ServerSignatureLockEvidenceResponseMessage, true
}

// HasServerSignatureLockEvidenceResponseMessage returns a boolean if a field has been set.
func (o *SessionData) HasServerSignatureLockEvidenceResponseMessage() bool {
	if o != nil && !IsNil(o.ServerSignatureLockEvidenceResponseMessage) {
		return true
	}

	return false
}

// SetServerSignatureLockEvidenceResponseMessage gets a reference to the given string and assigns it to the ServerSignatureLockEvidenceResponseMessage field.
func (o *SessionData) SetServerSignatureLockEvidenceResponseMessage(v string) {
	o.ServerSignatureLockEvidenceResponseMessage = &v
}

// GetLockEvidenceClaim returns the LockEvidenceClaim field value if set, zero value otherwise.
func (o *SessionData) GetLockEvidenceClaim() string {
	if o == nil || IsNil(o.LockEvidenceClaim) {
		var ret string
		return ret
	}
	return *o.LockEvidenceClaim
}

// GetLockEvidenceClaimOk returns a tuple with the LockEvidenceClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetLockEvidenceClaimOk() (*string, bool) {
	if o == nil || IsNil(o.LockEvidenceClaim) {
		return nil, false
	}
	return o.LockEvidenceClaim, true
}

// HasLockEvidenceClaim returns a boolean if a field has been set.
func (o *SessionData) HasLockEvidenceClaim() bool {
	if o != nil && !IsNil(o.LockEvidenceClaim) {
		return true
	}

	return false
}

// SetLockEvidenceClaim gets a reference to the given string and assigns it to the LockEvidenceClaim field.
func (o *SessionData) SetLockEvidenceClaim(v string) {
	o.LockEvidenceClaim = &v
}

// GetCommitPrepareRequestMessageHash returns the CommitPrepareRequestMessageHash field value if set, zero value otherwise.
func (o *SessionData) GetCommitPrepareRequestMessageHash() string {
	if o == nil || IsNil(o.CommitPrepareRequestMessageHash) {
		var ret string
		return ret
	}
	return *o.CommitPrepareRequestMessageHash
}

// GetCommitPrepareRequestMessageHashOk returns a tuple with the CommitPrepareRequestMessageHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetCommitPrepareRequestMessageHashOk() (*string, bool) {
	if o == nil || IsNil(o.CommitPrepareRequestMessageHash) {
		return nil, false
	}
	return o.CommitPrepareRequestMessageHash, true
}

// HasCommitPrepareRequestMessageHash returns a boolean if a field has been set.
func (o *SessionData) HasCommitPrepareRequestMessageHash() bool {
	if o != nil && !IsNil(o.CommitPrepareRequestMessageHash) {
		return true
	}

	return false
}

// SetCommitPrepareRequestMessageHash gets a reference to the given string and assigns it to the CommitPrepareRequestMessageHash field.
func (o *SessionData) SetCommitPrepareRequestMessageHash(v string) {
	o.CommitPrepareRequestMessageHash = &v
}

// GetCommitPrepareResponseMessageHash returns the CommitPrepareResponseMessageHash field value if set, zero value otherwise.
func (o *SessionData) GetCommitPrepareResponseMessageHash() string {
	if o == nil || IsNil(o.CommitPrepareResponseMessageHash) {
		var ret string
		return ret
	}
	return *o.CommitPrepareResponseMessageHash
}

// GetCommitPrepareResponseMessageHashOk returns a tuple with the CommitPrepareResponseMessageHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetCommitPrepareResponseMessageHashOk() (*string, bool) {
	if o == nil || IsNil(o.CommitPrepareResponseMessageHash) {
		return nil, false
	}
	return o.CommitPrepareResponseMessageHash, true
}

// HasCommitPrepareResponseMessageHash returns a boolean if a field has been set.
func (o *SessionData) HasCommitPrepareResponseMessageHash() bool {
	if o != nil && !IsNil(o.CommitPrepareResponseMessageHash) {
		return true
	}

	return false
}

// SetCommitPrepareResponseMessageHash gets a reference to the given string and assigns it to the CommitPrepareResponseMessageHash field.
func (o *SessionData) SetCommitPrepareResponseMessageHash(v string) {
	o.CommitPrepareResponseMessageHash = &v
}

// GetClientSignatureCommitPreparationRequestMessage returns the ClientSignatureCommitPreparationRequestMessage field value if set, zero value otherwise.
func (o *SessionData) GetClientSignatureCommitPreparationRequestMessage() string {
	if o == nil || IsNil(o.ClientSignatureCommitPreparationRequestMessage) {
		var ret string
		return ret
	}
	return *o.ClientSignatureCommitPreparationRequestMessage
}

// GetClientSignatureCommitPreparationRequestMessageOk returns a tuple with the ClientSignatureCommitPreparationRequestMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetClientSignatureCommitPreparationRequestMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSignatureCommitPreparationRequestMessage) {
		return nil, false
	}
	return o.ClientSignatureCommitPreparationRequestMessage, true
}

// HasClientSignatureCommitPreparationRequestMessage returns a boolean if a field has been set.
func (o *SessionData) HasClientSignatureCommitPreparationRequestMessage() bool {
	if o != nil && !IsNil(o.ClientSignatureCommitPreparationRequestMessage) {
		return true
	}

	return false
}

// SetClientSignatureCommitPreparationRequestMessage gets a reference to the given string and assigns it to the ClientSignatureCommitPreparationRequestMessage field.
func (o *SessionData) SetClientSignatureCommitPreparationRequestMessage(v string) {
	o.ClientSignatureCommitPreparationRequestMessage = &v
}

// GetServerSignatureCommitPreparationResponseMessage returns the ServerSignatureCommitPreparationResponseMessage field value if set, zero value otherwise.
func (o *SessionData) GetServerSignatureCommitPreparationResponseMessage() string {
	if o == nil || IsNil(o.ServerSignatureCommitPreparationResponseMessage) {
		var ret string
		return ret
	}
	return *o.ServerSignatureCommitPreparationResponseMessage
}

// GetServerSignatureCommitPreparationResponseMessageOk returns a tuple with the ServerSignatureCommitPreparationResponseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetServerSignatureCommitPreparationResponseMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ServerSignatureCommitPreparationResponseMessage) {
		return nil, false
	}
	return o.ServerSignatureCommitPreparationResponseMessage, true
}

// HasServerSignatureCommitPreparationResponseMessage returns a boolean if a field has been set.
func (o *SessionData) HasServerSignatureCommitPreparationResponseMessage() bool {
	if o != nil && !IsNil(o.ServerSignatureCommitPreparationResponseMessage) {
		return true
	}

	return false
}

// SetServerSignatureCommitPreparationResponseMessage gets a reference to the given string and assigns it to the ServerSignatureCommitPreparationResponseMessage field.
func (o *SessionData) SetServerSignatureCommitPreparationResponseMessage(v string) {
	o.ServerSignatureCommitPreparationResponseMessage = &v
}

// GetCommitFinalRequestMessageHash returns the CommitFinalRequestMessageHash field value if set, zero value otherwise.
func (o *SessionData) GetCommitFinalRequestMessageHash() string {
	if o == nil || IsNil(o.CommitFinalRequestMessageHash) {
		var ret string
		return ret
	}
	return *o.CommitFinalRequestMessageHash
}

// GetCommitFinalRequestMessageHashOk returns a tuple with the CommitFinalRequestMessageHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetCommitFinalRequestMessageHashOk() (*string, bool) {
	if o == nil || IsNil(o.CommitFinalRequestMessageHash) {
		return nil, false
	}
	return o.CommitFinalRequestMessageHash, true
}

// HasCommitFinalRequestMessageHash returns a boolean if a field has been set.
func (o *SessionData) HasCommitFinalRequestMessageHash() bool {
	if o != nil && !IsNil(o.CommitFinalRequestMessageHash) {
		return true
	}

	return false
}

// SetCommitFinalRequestMessageHash gets a reference to the given string and assigns it to the CommitFinalRequestMessageHash field.
func (o *SessionData) SetCommitFinalRequestMessageHash(v string) {
	o.CommitFinalRequestMessageHash = &v
}

// GetCommitFinalResponseMessageHash returns the CommitFinalResponseMessageHash field value if set, zero value otherwise.
func (o *SessionData) GetCommitFinalResponseMessageHash() string {
	if o == nil || IsNil(o.CommitFinalResponseMessageHash) {
		var ret string
		return ret
	}
	return *o.CommitFinalResponseMessageHash
}

// GetCommitFinalResponseMessageHashOk returns a tuple with the CommitFinalResponseMessageHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetCommitFinalResponseMessageHashOk() (*string, bool) {
	if o == nil || IsNil(o.CommitFinalResponseMessageHash) {
		return nil, false
	}
	return o.CommitFinalResponseMessageHash, true
}

// HasCommitFinalResponseMessageHash returns a boolean if a field has been set.
func (o *SessionData) HasCommitFinalResponseMessageHash() bool {
	if o != nil && !IsNil(o.CommitFinalResponseMessageHash) {
		return true
	}

	return false
}

// SetCommitFinalResponseMessageHash gets a reference to the given string and assigns it to the CommitFinalResponseMessageHash field.
func (o *SessionData) SetCommitFinalResponseMessageHash(v string) {
	o.CommitFinalResponseMessageHash = &v
}

// GetCommitFinalClaim returns the CommitFinalClaim field value if set, zero value otherwise.
func (o *SessionData) GetCommitFinalClaim() string {
	if o == nil || IsNil(o.CommitFinalClaim) {
		var ret string
		return ret
	}
	return *o.CommitFinalClaim
}

// GetCommitFinalClaimOk returns a tuple with the CommitFinalClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetCommitFinalClaimOk() (*string, bool) {
	if o == nil || IsNil(o.CommitFinalClaim) {
		return nil, false
	}
	return o.CommitFinalClaim, true
}

// HasCommitFinalClaim returns a boolean if a field has been set.
func (o *SessionData) HasCommitFinalClaim() bool {
	if o != nil && !IsNil(o.CommitFinalClaim) {
		return true
	}

	return false
}

// SetCommitFinalClaim gets a reference to the given string and assigns it to the CommitFinalClaim field.
func (o *SessionData) SetCommitFinalClaim(v string) {
	o.CommitFinalClaim = &v
}

// GetCommitFinalClaimFormat returns the CommitFinalClaimFormat field value if set, zero value otherwise.
func (o *SessionData) GetCommitFinalClaimFormat() string {
	if o == nil || IsNil(o.CommitFinalClaimFormat) {
		var ret string
		return ret
	}
	return *o.CommitFinalClaimFormat
}

// GetCommitFinalClaimFormatOk returns a tuple with the CommitFinalClaimFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetCommitFinalClaimFormatOk() (*string, bool) {
	if o == nil || IsNil(o.CommitFinalClaimFormat) {
		return nil, false
	}
	return o.CommitFinalClaimFormat, true
}

// HasCommitFinalClaimFormat returns a boolean if a field has been set.
func (o *SessionData) HasCommitFinalClaimFormat() bool {
	if o != nil && !IsNil(o.CommitFinalClaimFormat) {
		return true
	}

	return false
}

// SetCommitFinalClaimFormat gets a reference to the given string and assigns it to the CommitFinalClaimFormat field.
func (o *SessionData) SetCommitFinalClaimFormat(v string) {
	o.CommitFinalClaimFormat = &v
}

// GetCommitAcknowledgementClaim returns the CommitAcknowledgementClaim field value if set, zero value otherwise.
func (o *SessionData) GetCommitAcknowledgementClaim() string {
	if o == nil || IsNil(o.CommitAcknowledgementClaim) {
		var ret string
		return ret
	}
	return *o.CommitAcknowledgementClaim
}

// GetCommitAcknowledgementClaimOk returns a tuple with the CommitAcknowledgementClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetCommitAcknowledgementClaimOk() (*string, bool) {
	if o == nil || IsNil(o.CommitAcknowledgementClaim) {
		return nil, false
	}
	return o.CommitAcknowledgementClaim, true
}

// HasCommitAcknowledgementClaim returns a boolean if a field has been set.
func (o *SessionData) HasCommitAcknowledgementClaim() bool {
	if o != nil && !IsNil(o.CommitAcknowledgementClaim) {
		return true
	}

	return false
}

// SetCommitAcknowledgementClaim gets a reference to the given string and assigns it to the CommitAcknowledgementClaim field.
func (o *SessionData) SetCommitAcknowledgementClaim(v string) {
	o.CommitAcknowledgementClaim = &v
}

// GetCommitAcknowledgementClaimFormat returns the CommitAcknowledgementClaimFormat field value if set, zero value otherwise.
func (o *SessionData) GetCommitAcknowledgementClaimFormat() string {
	if o == nil || IsNil(o.CommitAcknowledgementClaimFormat) {
		var ret string
		return ret
	}
	return *o.CommitAcknowledgementClaimFormat
}

// GetCommitAcknowledgementClaimFormatOk returns a tuple with the CommitAcknowledgementClaimFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetCommitAcknowledgementClaimFormatOk() (*string, bool) {
	if o == nil || IsNil(o.CommitAcknowledgementClaimFormat) {
		return nil, false
	}
	return o.CommitAcknowledgementClaimFormat, true
}

// HasCommitAcknowledgementClaimFormat returns a boolean if a field has been set.
func (o *SessionData) HasCommitAcknowledgementClaimFormat() bool {
	if o != nil && !IsNil(o.CommitAcknowledgementClaimFormat) {
		return true
	}

	return false
}

// SetCommitAcknowledgementClaimFormat gets a reference to the given string and assigns it to the CommitAcknowledgementClaimFormat field.
func (o *SessionData) SetCommitAcknowledgementClaimFormat(v string) {
	o.CommitAcknowledgementClaimFormat = &v
}

// GetClientSignatureCommitFinalRequestMessage returns the ClientSignatureCommitFinalRequestMessage field value if set, zero value otherwise.
func (o *SessionData) GetClientSignatureCommitFinalRequestMessage() string {
	if o == nil || IsNil(o.ClientSignatureCommitFinalRequestMessage) {
		var ret string
		return ret
	}
	return *o.ClientSignatureCommitFinalRequestMessage
}

// GetClientSignatureCommitFinalRequestMessageOk returns a tuple with the ClientSignatureCommitFinalRequestMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetClientSignatureCommitFinalRequestMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSignatureCommitFinalRequestMessage) {
		return nil, false
	}
	return o.ClientSignatureCommitFinalRequestMessage, true
}

// HasClientSignatureCommitFinalRequestMessage returns a boolean if a field has been set.
func (o *SessionData) HasClientSignatureCommitFinalRequestMessage() bool {
	if o != nil && !IsNil(o.ClientSignatureCommitFinalRequestMessage) {
		return true
	}

	return false
}

// SetClientSignatureCommitFinalRequestMessage gets a reference to the given string and assigns it to the ClientSignatureCommitFinalRequestMessage field.
func (o *SessionData) SetClientSignatureCommitFinalRequestMessage(v string) {
	o.ClientSignatureCommitFinalRequestMessage = &v
}

// GetServerSignatureCommitFinalResponseMessage returns the ServerSignatureCommitFinalResponseMessage field value if set, zero value otherwise.
func (o *SessionData) GetServerSignatureCommitFinalResponseMessage() string {
	if o == nil || IsNil(o.ServerSignatureCommitFinalResponseMessage) {
		var ret string
		return ret
	}
	return *o.ServerSignatureCommitFinalResponseMessage
}

// GetServerSignatureCommitFinalResponseMessageOk returns a tuple with the ServerSignatureCommitFinalResponseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetServerSignatureCommitFinalResponseMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ServerSignatureCommitFinalResponseMessage) {
		return nil, false
	}
	return o.ServerSignatureCommitFinalResponseMessage, true
}

// HasServerSignatureCommitFinalResponseMessage returns a boolean if a field has been set.
func (o *SessionData) HasServerSignatureCommitFinalResponseMessage() bool {
	if o != nil && !IsNil(o.ServerSignatureCommitFinalResponseMessage) {
		return true
	}

	return false
}

// SetServerSignatureCommitFinalResponseMessage gets a reference to the given string and assigns it to the ServerSignatureCommitFinalResponseMessage field.
func (o *SessionData) SetServerSignatureCommitFinalResponseMessage(v string) {
	o.ServerSignatureCommitFinalResponseMessage = &v
}

// GetTransferCompleteMessageHash returns the TransferCompleteMessageHash field value if set, zero value otherwise.
func (o *SessionData) GetTransferCompleteMessageHash() string {
	if o == nil || IsNil(o.TransferCompleteMessageHash) {
		var ret string
		return ret
	}
	return *o.TransferCompleteMessageHash
}

// GetTransferCompleteMessageHashOk returns a tuple with the TransferCompleteMessageHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetTransferCompleteMessageHashOk() (*string, bool) {
	if o == nil || IsNil(o.TransferCompleteMessageHash) {
		return nil, false
	}
	return o.TransferCompleteMessageHash, true
}

// HasTransferCompleteMessageHash returns a boolean if a field has been set.
func (o *SessionData) HasTransferCompleteMessageHash() bool {
	if o != nil && !IsNil(o.TransferCompleteMessageHash) {
		return true
	}

	return false
}

// SetTransferCompleteMessageHash gets a reference to the given string and assigns it to the TransferCompleteMessageHash field.
func (o *SessionData) SetTransferCompleteMessageHash(v string) {
	o.TransferCompleteMessageHash = &v
}

// GetClientSignatureTransferCompleteMessage returns the ClientSignatureTransferCompleteMessage field value if set, zero value otherwise.
func (o *SessionData) GetClientSignatureTransferCompleteMessage() string {
	if o == nil || IsNil(o.ClientSignatureTransferCompleteMessage) {
		var ret string
		return ret
	}
	return *o.ClientSignatureTransferCompleteMessage
}

// GetClientSignatureTransferCompleteMessageOk returns a tuple with the ClientSignatureTransferCompleteMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetClientSignatureTransferCompleteMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSignatureTransferCompleteMessage) {
		return nil, false
	}
	return o.ClientSignatureTransferCompleteMessage, true
}

// HasClientSignatureTransferCompleteMessage returns a boolean if a field has been set.
func (o *SessionData) HasClientSignatureTransferCompleteMessage() bool {
	if o != nil && !IsNil(o.ClientSignatureTransferCompleteMessage) {
		return true
	}

	return false
}

// SetClientSignatureTransferCompleteMessage gets a reference to the given string and assigns it to the ClientSignatureTransferCompleteMessage field.
func (o *SessionData) SetClientSignatureTransferCompleteMessage(v string) {
	o.ClientSignatureTransferCompleteMessage = &v
}

// GetMaxRetries returns the MaxRetries field value if set, zero value otherwise.
func (o *SessionData) GetMaxRetries() float32 {
	if o == nil || IsNil(o.MaxRetries) {
		var ret float32
		return ret
	}
	return *o.MaxRetries
}

// GetMaxRetriesOk returns a tuple with the MaxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetMaxRetriesOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxRetries) {
		return nil, false
	}
	return o.MaxRetries, true
}

// HasMaxRetries returns a boolean if a field has been set.
func (o *SessionData) HasMaxRetries() bool {
	if o != nil && !IsNil(o.MaxRetries) {
		return true
	}

	return false
}

// SetMaxRetries gets a reference to the given float32 and assigns it to the MaxRetries field.
func (o *SessionData) SetMaxRetries(v float32) {
	o.MaxRetries = &v
}

// GetRecipientLedgerAssetID returns the RecipientLedgerAssetID field value if set, zero value otherwise.
func (o *SessionData) GetRecipientLedgerAssetID() string {
	if o == nil || IsNil(o.RecipientLedgerAssetID) {
		var ret string
		return ret
	}
	return *o.RecipientLedgerAssetID
}

// GetRecipientLedgerAssetIDOk returns a tuple with the RecipientLedgerAssetID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetRecipientLedgerAssetIDOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientLedgerAssetID) {
		return nil, false
	}
	return o.RecipientLedgerAssetID, true
}

// HasRecipientLedgerAssetID returns a boolean if a field has been set.
func (o *SessionData) HasRecipientLedgerAssetID() bool {
	if o != nil && !IsNil(o.RecipientLedgerAssetID) {
		return true
	}

	return false
}

// SetRecipientLedgerAssetID gets a reference to the given string and assigns it to the RecipientLedgerAssetID field.
func (o *SessionData) SetRecipientLedgerAssetID(v string) {
	o.RecipientLedgerAssetID = &v
}

// GetSourceLedgerAssetID returns the SourceLedgerAssetID field value if set, zero value otherwise.
func (o *SessionData) GetSourceLedgerAssetID() string {
	if o == nil || IsNil(o.SourceLedgerAssetID) {
		var ret string
		return ret
	}
	return *o.SourceLedgerAssetID
}

// GetSourceLedgerAssetIDOk returns a tuple with the SourceLedgerAssetID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetSourceLedgerAssetIDOk() (*string, bool) {
	if o == nil || IsNil(o.SourceLedgerAssetID) {
		return nil, false
	}
	return o.SourceLedgerAssetID, true
}

// HasSourceLedgerAssetID returns a boolean if a field has been set.
func (o *SessionData) HasSourceLedgerAssetID() bool {
	if o != nil && !IsNil(o.SourceLedgerAssetID) {
		return true
	}

	return false
}

// SetSourceLedgerAssetID gets a reference to the given string and assigns it to the SourceLedgerAssetID field.
func (o *SessionData) SetSourceLedgerAssetID(v string) {
	o.SourceLedgerAssetID = &v
}

// GetMaxTimeout returns the MaxTimeout field value if set, zero value otherwise.
func (o *SessionData) GetMaxTimeout() float32 {
	if o == nil || IsNil(o.MaxTimeout) {
		var ret float32
		return ret
	}
	return *o.MaxTimeout
}

// GetMaxTimeoutOk returns a tuple with the MaxTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetMaxTimeoutOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxTimeout) {
		return nil, false
	}
	return o.MaxTimeout, true
}

// HasMaxTimeout returns a boolean if a field has been set.
func (o *SessionData) HasMaxTimeout() bool {
	if o != nil && !IsNil(o.MaxTimeout) {
		return true
	}

	return false
}

// SetMaxTimeout gets a reference to the given float32 and assigns it to the MaxTimeout field.
func (o *SessionData) SetMaxTimeout(v float32) {
	o.MaxTimeout = &v
}

// GetLastLogEntryTimestamp returns the LastLogEntryTimestamp field value if set, zero value otherwise.
func (o *SessionData) GetLastLogEntryTimestamp() string {
	if o == nil || IsNil(o.LastLogEntryTimestamp) {
		var ret string
		return ret
	}
	return *o.LastLogEntryTimestamp
}

// GetLastLogEntryTimestampOk returns a tuple with the LastLogEntryTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetLastLogEntryTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.LastLogEntryTimestamp) {
		return nil, false
	}
	return o.LastLogEntryTimestamp, true
}

// HasLastLogEntryTimestamp returns a boolean if a field has been set.
func (o *SessionData) HasLastLogEntryTimestamp() bool {
	if o != nil && !IsNil(o.LastLogEntryTimestamp) {
		return true
	}

	return false
}

// SetLastLogEntryTimestamp gets a reference to the given string and assigns it to the LastLogEntryTimestamp field.
func (o *SessionData) SetLastLogEntryTimestamp(v string) {
	o.LastLogEntryTimestamp = &v
}

// GetUnlockAssetClaim returns the UnlockAssetClaim field value if set, zero value otherwise.
func (o *SessionData) GetUnlockAssetClaim() string {
	if o == nil || IsNil(o.UnlockAssetClaim) {
		var ret string
		return ret
	}
	return *o.UnlockAssetClaim
}

// GetUnlockAssetClaimOk returns a tuple with the UnlockAssetClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetUnlockAssetClaimOk() (*string, bool) {
	if o == nil || IsNil(o.UnlockAssetClaim) {
		return nil, false
	}
	return o.UnlockAssetClaim, true
}

// HasUnlockAssetClaim returns a boolean if a field has been set.
func (o *SessionData) HasUnlockAssetClaim() bool {
	if o != nil && !IsNil(o.UnlockAssetClaim) {
		return true
	}

	return false
}

// SetUnlockAssetClaim gets a reference to the given string and assigns it to the UnlockAssetClaim field.
func (o *SessionData) SetUnlockAssetClaim(v string) {
	o.UnlockAssetClaim = &v
}

// GetRecreateAssetClaim returns the RecreateAssetClaim field value if set, zero value otherwise.
func (o *SessionData) GetRecreateAssetClaim() string {
	if o == nil || IsNil(o.RecreateAssetClaim) {
		var ret string
		return ret
	}
	return *o.RecreateAssetClaim
}

// GetRecreateAssetClaimOk returns a tuple with the RecreateAssetClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetRecreateAssetClaimOk() (*string, bool) {
	if o == nil || IsNil(o.RecreateAssetClaim) {
		return nil, false
	}
	return o.RecreateAssetClaim, true
}

// HasRecreateAssetClaim returns a boolean if a field has been set.
func (o *SessionData) HasRecreateAssetClaim() bool {
	if o != nil && !IsNil(o.RecreateAssetClaim) {
		return true
	}

	return false
}

// SetRecreateAssetClaim gets a reference to the given string and assigns it to the RecreateAssetClaim field.
func (o *SessionData) SetRecreateAssetClaim(v string) {
	o.RecreateAssetClaim = &v
}

// GetDeleteAssetClaim returns the DeleteAssetClaim field value if set, zero value otherwise.
func (o *SessionData) GetDeleteAssetClaim() string {
	if o == nil || IsNil(o.DeleteAssetClaim) {
		var ret string
		return ret
	}
	return *o.DeleteAssetClaim
}

// GetDeleteAssetClaimOk returns a tuple with the DeleteAssetClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetDeleteAssetClaimOk() (*string, bool) {
	if o == nil || IsNil(o.DeleteAssetClaim) {
		return nil, false
	}
	return o.DeleteAssetClaim, true
}

// HasDeleteAssetClaim returns a boolean if a field has been set.
func (o *SessionData) HasDeleteAssetClaim() bool {
	if o != nil && !IsNil(o.DeleteAssetClaim) {
		return true
	}

	return false
}

// SetDeleteAssetClaim gets a reference to the given string and assigns it to the DeleteAssetClaim field.
func (o *SessionData) SetDeleteAssetClaim(v string) {
	o.DeleteAssetClaim = &v
}

// GetLastMessageReceivedTimestamp returns the LastMessageReceivedTimestamp field value if set, zero value otherwise.
func (o *SessionData) GetLastMessageReceivedTimestamp() string {
	if o == nil || IsNil(o.LastMessageReceivedTimestamp) {
		var ret string
		return ret
	}
	return *o.LastMessageReceivedTimestamp
}

// GetLastMessageReceivedTimestampOk returns a tuple with the LastMessageReceivedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetLastMessageReceivedTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.LastMessageReceivedTimestamp) {
		return nil, false
	}
	return o.LastMessageReceivedTimestamp, true
}

// HasLastMessageReceivedTimestamp returns a boolean if a field has been set.
func (o *SessionData) HasLastMessageReceivedTimestamp() bool {
	if o != nil && !IsNil(o.LastMessageReceivedTimestamp) {
		return true
	}

	return false
}

// SetLastMessageReceivedTimestamp gets a reference to the given string and assigns it to the LastMessageReceivedTimestamp field.
func (o *SessionData) SetLastMessageReceivedTimestamp(v string) {
	o.LastMessageReceivedTimestamp = &v
}

// GetRollback returns the Rollback field value if set, zero value otherwise.
func (o *SessionData) GetRollback() bool {
	if o == nil || IsNil(o.Rollback) {
		var ret bool
		return ret
	}
	return *o.Rollback
}

// GetRollbackOk returns a tuple with the Rollback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetRollbackOk() (*bool, bool) {
	if o == nil || IsNil(o.Rollback) {
		return nil, false
	}
	return o.Rollback, true
}

// HasRollback returns a boolean if a field has been set.
func (o *SessionData) HasRollback() bool {
	if o != nil && !IsNil(o.Rollback) {
		return true
	}

	return false
}

// SetRollback gets a reference to the given bool and assigns it to the Rollback field.
func (o *SessionData) SetRollback(v bool) {
	o.Rollback = &v
}

// GetRollbackMessageHash returns the RollbackMessageHash field value if set, zero value otherwise.
func (o *SessionData) GetRollbackMessageHash() string {
	if o == nil || IsNil(o.RollbackMessageHash) {
		var ret string
		return ret
	}
	return *o.RollbackMessageHash
}

// GetRollbackMessageHashOk returns a tuple with the RollbackMessageHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetRollbackMessageHashOk() (*string, bool) {
	if o == nil || IsNil(o.RollbackMessageHash) {
		return nil, false
	}
	return o.RollbackMessageHash, true
}

// HasRollbackMessageHash returns a boolean if a field has been set.
func (o *SessionData) HasRollbackMessageHash() bool {
	if o != nil && !IsNil(o.RollbackMessageHash) {
		return true
	}

	return false
}

// SetRollbackMessageHash gets a reference to the given string and assigns it to the RollbackMessageHash field.
func (o *SessionData) SetRollbackMessageHash(v string) {
	o.RollbackMessageHash = &v
}

// GetRollbackProofs returns the RollbackProofs field value if set, zero value otherwise.
func (o *SessionData) GetRollbackProofs() []string {
	if o == nil || IsNil(o.RollbackProofs) {
		var ret []string
		return ret
	}
	return o.RollbackProofs
}

// GetRollbackProofsOk returns a tuple with the RollbackProofs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetRollbackProofsOk() ([]string, bool) {
	if o == nil || IsNil(o.RollbackProofs) {
		return nil, false
	}
	return o.RollbackProofs, true
}

// HasRollbackProofs returns a boolean if a field has been set.
func (o *SessionData) HasRollbackProofs() bool {
	if o != nil && !IsNil(o.RollbackProofs) {
		return true
	}

	return false
}

// SetRollbackProofs gets a reference to the given []string and assigns it to the RollbackProofs field.
func (o *SessionData) SetRollbackProofs(v []string) {
	o.RollbackProofs = v
}

// GetRollbackActionsPerformed returns the RollbackActionsPerformed field value if set, zero value otherwise.
func (o *SessionData) GetRollbackActionsPerformed() []string {
	if o == nil || IsNil(o.RollbackActionsPerformed) {
		var ret []string
		return ret
	}
	return o.RollbackActionsPerformed
}

// GetRollbackActionsPerformedOk returns a tuple with the RollbackActionsPerformed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionData) GetRollbackActionsPerformedOk() ([]string, bool) {
	if o == nil || IsNil(o.RollbackActionsPerformed) {
		return nil, false
	}
	return o.RollbackActionsPerformed, true
}

// HasRollbackActionsPerformed returns a boolean if a field has been set.
func (o *SessionData) HasRollbackActionsPerformed() bool {
	if o != nil && !IsNil(o.RollbackActionsPerformed) {
		return true
	}

	return false
}

// SetRollbackActionsPerformed gets a reference to the given []string and assigns it to the RollbackActionsPerformed field.
func (o *SessionData) SetRollbackActionsPerformed(v []string) {
	o.RollbackActionsPerformed = v
}

func (o SessionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Step) {
		toSerialize["step"] = o.Step
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.LastSequenceNumber) {
		toSerialize["lastSequenceNumber"] = o.LastSequenceNumber
	}
	if !IsNil(o.LoggingProfile) {
		toSerialize["loggingProfile"] = o.LoggingProfile
	}
	if !IsNil(o.AccessControlProfile) {
		toSerialize["accessControlProfile"] = o.AccessControlProfile
	}
	if !IsNil(o.ApplicationProfile) {
		toSerialize["applicationProfile"] = o.ApplicationProfile
	}
	if !IsNil(o.PayloadProfile) {
		toSerialize["payloadProfile"] = o.PayloadProfile
	}
	if !IsNil(o.AssetProfile) {
		toSerialize["assetProfile"] = o.AssetProfile
	}
	if !IsNil(o.AllowedSourceBackupGateways) {
		toSerialize["allowedSourceBackupGateways"] = o.AllowedSourceBackupGateways
	}
	if !IsNil(o.AllowedRecipientBackupGateways) {
		toSerialize["allowedRecipientBackupGateways"] = o.AllowedRecipientBackupGateways
	}
	if !IsNil(o.SourceBasePath) {
		toSerialize["sourceBasePath"] = o.SourceBasePath
	}
	if !IsNil(o.RecipientBasePath) {
		toSerialize["recipientBasePath"] = o.RecipientBasePath
	}
	if !IsNil(o.OriginatorPubkey) {
		toSerialize["originatorPubkey"] = o.OriginatorPubkey
	}
	if !IsNil(o.BeneficiaryPubkey) {
		toSerialize["beneficiaryPubkey"] = o.BeneficiaryPubkey
	}
	if !IsNil(o.SourceGatewayPubkey) {
		toSerialize["sourceGatewayPubkey"] = o.SourceGatewayPubkey
	}
	if !IsNil(o.SourceGatewayDltSystem) {
		toSerialize["sourceGatewayDltSystem"] = o.SourceGatewayDltSystem
	}
	if !IsNil(o.RecipientGatewayPubkey) {
		toSerialize["recipientGatewayPubkey"] = o.RecipientGatewayPubkey
	}
	if !IsNil(o.RecipientGatewayDltSystem) {
		toSerialize["recipientGatewayDltSystem"] = o.RecipientGatewayDltSystem
	}
	if !IsNil(o.InitializationRequestMessageHash) {
		toSerialize["initializationRequestMessageHash"] = o.InitializationRequestMessageHash
	}
	if !IsNil(o.InitializationResponseMessageHash) {
		toSerialize["initializationResponseMessageHash"] = o.InitializationResponseMessageHash
	}
	if !IsNil(o.InitializationRequestMessageRcvTimeStamp) {
		toSerialize["initializationRequestMessageRcvTimeStamp"] = o.InitializationRequestMessageRcvTimeStamp
	}
	if !IsNil(o.InitializationRequestMessageProcessedTimeStamp) {
		toSerialize["initializationRequestMessageProcessedTimeStamp"] = o.InitializationRequestMessageProcessedTimeStamp
	}
	if !IsNil(o.ClientSignatureInitializationRequestMessage) {
		toSerialize["clientSignatureInitializationRequestMessage"] = o.ClientSignatureInitializationRequestMessage
	}
	if !IsNil(o.ServerSignatureInitializationResponseMessage) {
		toSerialize["serverSignatureInitializationResponseMessage"] = o.ServerSignatureInitializationResponseMessage
	}
	if !IsNil(o.TransferCommenceMessageRequestHash) {
		toSerialize["transferCommenceMessageRequestHash"] = o.TransferCommenceMessageRequestHash
	}
	if !IsNil(o.TransferCommenceMessageResponseHash) {
		toSerialize["transferCommenceMessageResponseHash"] = o.TransferCommenceMessageResponseHash
	}
	if !IsNil(o.ClientSignatureTransferCommenceRequestMessage) {
		toSerialize["clientSignatureTransferCommenceRequestMessage"] = o.ClientSignatureTransferCommenceRequestMessage
	}
	if !IsNil(o.ServerSignatureTransferCommenceResponseMessage) {
		toSerialize["serverSignatureTransferCommenceResponseMessage"] = o.ServerSignatureTransferCommenceResponseMessage
	}
	if !IsNil(o.LockEvidenceRequestMessageHash) {
		toSerialize["lockEvidenceRequestMessageHash"] = o.LockEvidenceRequestMessageHash
	}
	if !IsNil(o.LockEvidenceResponseMessageHash) {
		toSerialize["lockEvidenceResponseMessageHash"] = o.LockEvidenceResponseMessageHash
	}
	if !IsNil(o.ClientSignatureLockEvidenceRequestMessage) {
		toSerialize["clientSignatureLockEvidenceRequestMessage"] = o.ClientSignatureLockEvidenceRequestMessage
	}
	if !IsNil(o.ServerSignatureLockEvidenceResponseMessage) {
		toSerialize["serverSignatureLockEvidenceResponseMessage"] = o.ServerSignatureLockEvidenceResponseMessage
	}
	if !IsNil(o.LockEvidenceClaim) {
		toSerialize["lockEvidenceClaim"] = o.LockEvidenceClaim
	}
	if !IsNil(o.CommitPrepareRequestMessageHash) {
		toSerialize["commitPrepareRequestMessageHash"] = o.CommitPrepareRequestMessageHash
	}
	if !IsNil(o.CommitPrepareResponseMessageHash) {
		toSerialize["commitPrepareResponseMessageHash"] = o.CommitPrepareResponseMessageHash
	}
	if !IsNil(o.ClientSignatureCommitPreparationRequestMessage) {
		toSerialize["clientSignatureCommitPreparationRequestMessage"] = o.ClientSignatureCommitPreparationRequestMessage
	}
	if !IsNil(o.ServerSignatureCommitPreparationResponseMessage) {
		toSerialize["serverSignatureCommitPreparationResponseMessage"] = o.ServerSignatureCommitPreparationResponseMessage
	}
	if !IsNil(o.CommitFinalRequestMessageHash) {
		toSerialize["commitFinalRequestMessageHash"] = o.CommitFinalRequestMessageHash
	}
	if !IsNil(o.CommitFinalResponseMessageHash) {
		toSerialize["commitFinalResponseMessageHash"] = o.CommitFinalResponseMessageHash
	}
	if !IsNil(o.CommitFinalClaim) {
		toSerialize["commitFinalClaim"] = o.CommitFinalClaim
	}
	if !IsNil(o.CommitFinalClaimFormat) {
		toSerialize["commitFinalClaimFormat"] = o.CommitFinalClaimFormat
	}
	if !IsNil(o.CommitAcknowledgementClaim) {
		toSerialize["commitAcknowledgementClaim"] = o.CommitAcknowledgementClaim
	}
	if !IsNil(o.CommitAcknowledgementClaimFormat) {
		toSerialize["commitAcknowledgementClaimFormat"] = o.CommitAcknowledgementClaimFormat
	}
	if !IsNil(o.ClientSignatureCommitFinalRequestMessage) {
		toSerialize["clientSignatureCommitFinalRequestMessage"] = o.ClientSignatureCommitFinalRequestMessage
	}
	if !IsNil(o.ServerSignatureCommitFinalResponseMessage) {
		toSerialize["serverSignatureCommitFinalResponseMessage"] = o.ServerSignatureCommitFinalResponseMessage
	}
	if !IsNil(o.TransferCompleteMessageHash) {
		toSerialize["transferCompleteMessageHash"] = o.TransferCompleteMessageHash
	}
	if !IsNil(o.ClientSignatureTransferCompleteMessage) {
		toSerialize["clientSignatureTransferCompleteMessage"] = o.ClientSignatureTransferCompleteMessage
	}
	if !IsNil(o.MaxRetries) {
		toSerialize["maxRetries"] = o.MaxRetries
	}
	if !IsNil(o.RecipientLedgerAssetID) {
		toSerialize["recipientLedgerAssetID"] = o.RecipientLedgerAssetID
	}
	if !IsNil(o.SourceLedgerAssetID) {
		toSerialize["sourceLedgerAssetID"] = o.SourceLedgerAssetID
	}
	if !IsNil(o.MaxTimeout) {
		toSerialize["maxTimeout"] = o.MaxTimeout
	}
	if !IsNil(o.LastLogEntryTimestamp) {
		toSerialize["lastLogEntryTimestamp"] = o.LastLogEntryTimestamp
	}
	if !IsNil(o.UnlockAssetClaim) {
		toSerialize["unlockAssetClaim"] = o.UnlockAssetClaim
	}
	if !IsNil(o.RecreateAssetClaim) {
		toSerialize["recreateAssetClaim"] = o.RecreateAssetClaim
	}
	if !IsNil(o.DeleteAssetClaim) {
		toSerialize["deleteAssetClaim"] = o.DeleteAssetClaim
	}
	if !IsNil(o.LastMessageReceivedTimestamp) {
		toSerialize["lastMessageReceivedTimestamp"] = o.LastMessageReceivedTimestamp
	}
	if !IsNil(o.Rollback) {
		toSerialize["rollback"] = o.Rollback
	}
	if !IsNil(o.RollbackMessageHash) {
		toSerialize["rollbackMessageHash"] = o.RollbackMessageHash
	}
	if !IsNil(o.RollbackProofs) {
		toSerialize["rollbackProofs"] = o.RollbackProofs
	}
	if !IsNil(o.RollbackActionsPerformed) {
		toSerialize["rollbackActionsPerformed"] = o.RollbackActionsPerformed
	}
	return toSerialize, nil
}

type NullableSessionData struct {
	value *SessionData
	isSet bool
}

func (v NullableSessionData) Get() *SessionData {
	return v.value
}

func (v *NullableSessionData) Set(val *SessionData) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionData) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionData(val *SessionData) *NullableSessionData {
	return &NullableSessionData{value: val, isSet: true}
}

func (v NullableSessionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


