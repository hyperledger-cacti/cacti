/*
SATP Gateway Client (Business Logic Orchestrator)

SATP is a protocol operating between two gateways that conducts the transfer of a digital asset from one gateway to another. The protocol establishes a secure channel between the endpoints and implements a 2-phase commit to ensure the properties of transfer atomicity, consistency, isolation and durability.  This API defines the gateway client facing API (business logic orchestrator, or BLO), which is named API-Type 1 in the SATP-Core specification.  **Additional Resources**: - [Proposed SATP Charter](https://datatracker.ietf.org/doc/charter-ietf-satp/) - [SATP Core draft](https://datatracker.ietf.org/doc/draft-ietf-satp-core) - [SATP Crash Recovery draft](https://datatracker.ietf.org/doc/draft-belchior-satp-gateway-recovery/) - [SATP Architecture draft](https://datatracker.ietf.org/doc/draft-ietf-satp-architecture/) - [SATP Use-Cases draft](https://datatracker.ietf.org/doc/draft-ramakrishna-sat-use-cases/) - [SATP Data sharing draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-data-sharing) - [SATP View Addresses draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-views-addresses)

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
)

// checks if the GetRoutes200ResponseRoutesInnerFromTokenExtensions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRoutes200ResponseRoutesInnerFromTokenExtensions{}

// GetRoutes200ResponseRoutesInnerFromTokenExtensions struct for GetRoutes200ResponseRoutesInnerFromTokenExtensions
type GetRoutes200ResponseRoutesInnerFromTokenExtensions struct {
	BridgeInfo *map[string]GetRoutes200ResponseRoutesInnerFromTokenExtensionsBridgeInfoValue `json:"bridgeInfo,omitempty"`
	// Indicates whether the token is verified.
	Verified *bool `json:"verified,omitempty"`
}

// NewGetRoutes200ResponseRoutesInnerFromTokenExtensions instantiates a new GetRoutes200ResponseRoutesInnerFromTokenExtensions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRoutes200ResponseRoutesInnerFromTokenExtensions() *GetRoutes200ResponseRoutesInnerFromTokenExtensions {
	this := GetRoutes200ResponseRoutesInnerFromTokenExtensions{}
	return &this
}

// NewGetRoutes200ResponseRoutesInnerFromTokenExtensionsWithDefaults instantiates a new GetRoutes200ResponseRoutesInnerFromTokenExtensions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRoutes200ResponseRoutesInnerFromTokenExtensionsWithDefaults() *GetRoutes200ResponseRoutesInnerFromTokenExtensions {
	this := GetRoutes200ResponseRoutesInnerFromTokenExtensions{}
	return &this
}

// GetBridgeInfo returns the BridgeInfo field value if set, zero value otherwise.
func (o *GetRoutes200ResponseRoutesInnerFromTokenExtensions) GetBridgeInfo() map[string]GetRoutes200ResponseRoutesInnerFromTokenExtensionsBridgeInfoValue {
	if o == nil || IsNil(o.BridgeInfo) {
		var ret map[string]GetRoutes200ResponseRoutesInnerFromTokenExtensionsBridgeInfoValue
		return ret
	}
	return *o.BridgeInfo
}

// GetBridgeInfoOk returns a tuple with the BridgeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoutes200ResponseRoutesInnerFromTokenExtensions) GetBridgeInfoOk() (*map[string]GetRoutes200ResponseRoutesInnerFromTokenExtensionsBridgeInfoValue, bool) {
	if o == nil || IsNil(o.BridgeInfo) {
		return nil, false
	}
	return o.BridgeInfo, true
}

// HasBridgeInfo returns a boolean if a field has been set.
func (o *GetRoutes200ResponseRoutesInnerFromTokenExtensions) HasBridgeInfo() bool {
	if o != nil && !IsNil(o.BridgeInfo) {
		return true
	}

	return false
}

// SetBridgeInfo gets a reference to the given map[string]GetRoutes200ResponseRoutesInnerFromTokenExtensionsBridgeInfoValue and assigns it to the BridgeInfo field.
func (o *GetRoutes200ResponseRoutesInnerFromTokenExtensions) SetBridgeInfo(v map[string]GetRoutes200ResponseRoutesInnerFromTokenExtensionsBridgeInfoValue) {
	o.BridgeInfo = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *GetRoutes200ResponseRoutesInnerFromTokenExtensions) GetVerified() bool {
	if o == nil || IsNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoutes200ResponseRoutesInnerFromTokenExtensions) GetVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *GetRoutes200ResponseRoutesInnerFromTokenExtensions) HasVerified() bool {
	if o != nil && !IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *GetRoutes200ResponseRoutesInnerFromTokenExtensions) SetVerified(v bool) {
	o.Verified = &v
}

func (o GetRoutes200ResponseRoutesInnerFromTokenExtensions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRoutes200ResponseRoutesInnerFromTokenExtensions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BridgeInfo) {
		toSerialize["bridgeInfo"] = o.BridgeInfo
	}
	if !IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	return toSerialize, nil
}

type NullableGetRoutes200ResponseRoutesInnerFromTokenExtensions struct {
	value *GetRoutes200ResponseRoutesInnerFromTokenExtensions
	isSet bool
}

func (v NullableGetRoutes200ResponseRoutesInnerFromTokenExtensions) Get() *GetRoutes200ResponseRoutesInnerFromTokenExtensions {
	return v.value
}

func (v *NullableGetRoutes200ResponseRoutesInnerFromTokenExtensions) Set(val *GetRoutes200ResponseRoutesInnerFromTokenExtensions) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRoutes200ResponseRoutesInnerFromTokenExtensions) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRoutes200ResponseRoutesInnerFromTokenExtensions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRoutes200ResponseRoutesInnerFromTokenExtensions(val *GetRoutes200ResponseRoutesInnerFromTokenExtensions) *NullableGetRoutes200ResponseRoutesInnerFromTokenExtensions {
	return &NullableGetRoutes200ResponseRoutesInnerFromTokenExtensions{value: val, isSet: true}
}

func (v NullableGetRoutes200ResponseRoutesInnerFromTokenExtensions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRoutes200ResponseRoutesInnerFromTokenExtensions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


