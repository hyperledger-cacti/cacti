/*
SATP Gateway Client (Business Logic Orchestrator)

SATP is a protocol operating between two gateways that conducts the transfer of a digital asset from one gateway to another. The protocol establishes a secure channel between the endpoints and implements a 2-phase commit to ensure the properties of transfer atomicity, consistency, isolation and durability.  This API defines the gateway client facing API (business logic orchestrator, or BLO), which is named API-Type 1 in the SATP-Core specification.  **Additional Resources**: - [Proposed SATP Charter](https://datatracker.ietf.org/doc/charter-ietf-satp/) - [SATP Core draft](https://datatracker.ietf.org/doc/draft-ietf-satp-core) - [SATP Crash Recovery draft](https://datatracker.ietf.org/doc/draft-belchior-satp-gateway-recovery/) - [SATP Architecture draft](https://datatracker.ietf.org/doc/draft-ietf-satp-architecture/) - [SATP Use-Cases draft](https://datatracker.ietf.org/doc/draft-ramakrishna-sat-use-cases/) - [SATP Data sharing draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-data-sharing) - [SATP View Addresses draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-views-addresses)

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
)

// checks if the GetIntegrations200ResponseIntegrationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIntegrations200ResponseIntegrationsInner{}

// GetIntegrations200ResponseIntegrationsInner struct for GetIntegrations200ResponseIntegrationsInner
type GetIntegrations200ResponseIntegrationsInner struct {
	// A unique identifier for the blockchain network/system.
	Id string `json:"id"`
	// The name of the blockchain network/system.
	Name string `json:"name"`
	// The type of network (e.g., 'evm', 'fabric', 'SQL Database').
	Type string `json:"type"`
	// The specific network name (e.g., 'mainnet', 'testnet').
	Environment *string `json:"environment,omitempty"`
}

// NewGetIntegrations200ResponseIntegrationsInner instantiates a new GetIntegrations200ResponseIntegrationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIntegrations200ResponseIntegrationsInner(id string, name string, type_ string) *GetIntegrations200ResponseIntegrationsInner {
	this := GetIntegrations200ResponseIntegrationsInner{}
	this.Id = id
	this.Name = name
	this.Type = type_
	return &this
}

// NewGetIntegrations200ResponseIntegrationsInnerWithDefaults instantiates a new GetIntegrations200ResponseIntegrationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIntegrations200ResponseIntegrationsInnerWithDefaults() *GetIntegrations200ResponseIntegrationsInner {
	this := GetIntegrations200ResponseIntegrationsInner{}
	return &this
}

// GetId returns the Id field value
func (o *GetIntegrations200ResponseIntegrationsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetIntegrations200ResponseIntegrationsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetIntegrations200ResponseIntegrationsInner) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *GetIntegrations200ResponseIntegrationsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetIntegrations200ResponseIntegrationsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetIntegrations200ResponseIntegrationsInner) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *GetIntegrations200ResponseIntegrationsInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetIntegrations200ResponseIntegrationsInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GetIntegrations200ResponseIntegrationsInner) SetType(v string) {
	o.Type = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *GetIntegrations200ResponseIntegrationsInner) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIntegrations200ResponseIntegrationsInner) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *GetIntegrations200ResponseIntegrationsInner) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *GetIntegrations200ResponseIntegrationsInner) SetEnvironment(v string) {
	o.Environment = &v
}

func (o GetIntegrations200ResponseIntegrationsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIntegrations200ResponseIntegrationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	return toSerialize, nil
}

type NullableGetIntegrations200ResponseIntegrationsInner struct {
	value *GetIntegrations200ResponseIntegrationsInner
	isSet bool
}

func (v NullableGetIntegrations200ResponseIntegrationsInner) Get() *GetIntegrations200ResponseIntegrationsInner {
	return v.value
}

func (v *NullableGetIntegrations200ResponseIntegrationsInner) Set(val *GetIntegrations200ResponseIntegrationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIntegrations200ResponseIntegrationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIntegrations200ResponseIntegrationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIntegrations200ResponseIntegrationsInner(val *GetIntegrations200ResponseIntegrationsInner) *NullableGetIntegrations200ResponseIntegrationsInner {
	return &NullableGetIntegrations200ResponseIntegrationsInner{value: val, isSet: true}
}

func (v NullableGetIntegrations200ResponseIntegrationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIntegrations200ResponseIntegrationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


