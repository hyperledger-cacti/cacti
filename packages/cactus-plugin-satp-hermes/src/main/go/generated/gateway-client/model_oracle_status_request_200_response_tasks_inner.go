/*
SATP Gateway Client (Business Logic Orchestrator)

SATP is a protocol operating between two gateways that conducts the transfer of a digital asset from one gateway to another. The protocol establishes a secure channel between the endpoints and implements a 2-phase commit to ensure the properties of transfer atomicity, consistency, isolation and durability.  This API defines the gateway client facing API (business logic orchestrator, or BLO), which is named API-Type 1 in the SATP-Core specification.  **Additional Resources**: - [Proposed SATP Charter](https://datatracker.ietf.org/doc/charter-ietf-satp/) - [SATP Core draft](https://datatracker.ietf.org/doc/draft-ietf-satp-core) - [SATP Crash Recovery draft](https://datatracker.ietf.org/doc/draft-belchior-satp-gateway-recovery/) - [SATP Architecture draft](https://datatracker.ietf.org/doc/draft-ietf-satp-architecture/) - [SATP Use-Cases draft](https://datatracker.ietf.org/doc/draft-ramakrishna-sat-use-cases/) - [SATP Data sharing draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-data-sharing) - [SATP View Addresses draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-views-addresses)

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
	"time"
)

// checks if the OracleStatusRequest200ResponseTasksInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OracleStatusRequest200ResponseTasksInner{}

// OracleStatusRequest200ResponseTasksInner Represents a task with an identifier, timestamp, and status.
type OracleStatusRequest200ResponseTasksInner struct {
	// A unique identifier for the task.
	Id string `json:"id"`
	// The timestamp when the task was created or last updated.
	Timestamp time.Time `json:"timestamp"`
	// The current status of the task.
	Status string `json:"status"`
}

// NewOracleStatusRequest200ResponseTasksInner instantiates a new OracleStatusRequest200ResponseTasksInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOracleStatusRequest200ResponseTasksInner(id string, timestamp time.Time, status string) *OracleStatusRequest200ResponseTasksInner {
	this := OracleStatusRequest200ResponseTasksInner{}
	this.Id = id
	this.Timestamp = timestamp
	this.Status = status
	return &this
}

// NewOracleStatusRequest200ResponseTasksInnerWithDefaults instantiates a new OracleStatusRequest200ResponseTasksInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOracleStatusRequest200ResponseTasksInnerWithDefaults() *OracleStatusRequest200ResponseTasksInner {
	this := OracleStatusRequest200ResponseTasksInner{}
	return &this
}

// GetId returns the Id field value
func (o *OracleStatusRequest200ResponseTasksInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200ResponseTasksInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OracleStatusRequest200ResponseTasksInner) SetId(v string) {
	o.Id = v
}

// GetTimestamp returns the Timestamp field value
func (o *OracleStatusRequest200ResponseTasksInner) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200ResponseTasksInner) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *OracleStatusRequest200ResponseTasksInner) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetStatus returns the Status field value
func (o *OracleStatusRequest200ResponseTasksInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200ResponseTasksInner) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *OracleStatusRequest200ResponseTasksInner) SetStatus(v string) {
	o.Status = v
}

func (o OracleStatusRequest200ResponseTasksInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OracleStatusRequest200ResponseTasksInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableOracleStatusRequest200ResponseTasksInner struct {
	value *OracleStatusRequest200ResponseTasksInner
	isSet bool
}

func (v NullableOracleStatusRequest200ResponseTasksInner) Get() *OracleStatusRequest200ResponseTasksInner {
	return v.value
}

func (v *NullableOracleStatusRequest200ResponseTasksInner) Set(val *OracleStatusRequest200ResponseTasksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOracleStatusRequest200ResponseTasksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOracleStatusRequest200ResponseTasksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOracleStatusRequest200ResponseTasksInner(val *OracleStatusRequest200ResponseTasksInner) *NullableOracleStatusRequest200ResponseTasksInner {
	return &NullableOracleStatusRequest200ResponseTasksInner{value: val, isSet: true}
}

func (v NullableOracleStatusRequest200ResponseTasksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOracleStatusRequest200ResponseTasksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


