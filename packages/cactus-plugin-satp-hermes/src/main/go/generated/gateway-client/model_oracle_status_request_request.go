/*
SATP Gateway Client (Business Logic Orchestrator)

SATP is a protocol operating between two gateways that conducts the transfer of a digital asset from one gateway to another. The protocol establishes a secure channel between the endpoints and implements a 2-phase commit to ensure the properties of transfer atomicity, consistency, isolation and durability.  This API defines the gateway client facing API (business logic orchestrator, or BLO), which is named API-Type 1 in the SATP-Core specification.  **Additional Resources**: - [Proposed SATP Charter](https://datatracker.ietf.org/doc/charter-ietf-satp/) - [SATP Core draft](https://datatracker.ietf.org/doc/draft-ietf-satp-core) - [SATP Crash Recovery draft](https://datatracker.ietf.org/doc/draft-belchior-satp-gateway-recovery/) - [SATP Architecture draft](https://datatracker.ietf.org/doc/draft-ietf-satp-architecture/) - [SATP Use-Cases draft](https://datatracker.ietf.org/doc/draft-ramakrishna-sat-use-cases/) - [SATP Data sharing draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-data-sharing) - [SATP View Addresses draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-views-addresses)

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
)

// checks if the OracleStatusRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OracleStatusRequestRequest{}

// OracleStatusRequestRequest Request schema for checking the status of a data transfer task.
type OracleStatusRequestRequest struct {
	TaskID string `json:"taskID"`
}

// NewOracleStatusRequestRequest instantiates a new OracleStatusRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOracleStatusRequestRequest(taskID string) *OracleStatusRequestRequest {
	this := OracleStatusRequestRequest{}
	this.TaskID = taskID
	return &this
}

// NewOracleStatusRequestRequestWithDefaults instantiates a new OracleStatusRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOracleStatusRequestRequestWithDefaults() *OracleStatusRequestRequest {
	this := OracleStatusRequestRequest{}
	return &this
}

// GetTaskID returns the TaskID field value
func (o *OracleStatusRequestRequest) GetTaskID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TaskID
}

// GetTaskIDOk returns a tuple with the TaskID field value
// and a boolean to check if the value has been set.
func (o *OracleStatusRequestRequest) GetTaskIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaskID, true
}

// SetTaskID sets field value
func (o *OracleStatusRequestRequest) SetTaskID(v string) {
	o.TaskID = v
}

func (o OracleStatusRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OracleStatusRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["taskID"] = o.TaskID
	return toSerialize, nil
}

type NullableOracleStatusRequestRequest struct {
	value *OracleStatusRequestRequest
	isSet bool
}

func (v NullableOracleStatusRequestRequest) Get() *OracleStatusRequestRequest {
	return v.value
}

func (v *NullableOracleStatusRequestRequest) Set(val *OracleStatusRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOracleStatusRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOracleStatusRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOracleStatusRequestRequest(val *OracleStatusRequestRequest) *NullableOracleStatusRequestRequest {
	return &NullableOracleStatusRequestRequest{value: val, isSet: true}
}

func (v NullableOracleStatusRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOracleStatusRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


