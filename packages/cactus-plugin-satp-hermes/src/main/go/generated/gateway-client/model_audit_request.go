/*
SATP Gateway Client (Business Logic Orchestrator)

SATP is a protocol operating between two gateways that conducts the transfer of a digital asset from one gateway to another. The protocol establishes a secure channel between the endpoints and implements a 2-phase commit to ensure the properties of transfer atomicity, consistency, isolation and durability.  This API defines the gateway client facing API (business logic orchestrator, or BLO), which is named API-Type 1 in the SATP-Core specification.  **Additional Resources**: - [Proposed SATP Charter](https://datatracker.ietf.org/doc/charter-ietf-satp/) - [SATP Core draft](https://datatracker.ietf.org/doc/draft-ietf-satp-core) - [SATP Crash Recovery draft](https://datatracker.ietf.org/doc/draft-belchior-satp-gateway-recovery/) - [SATP Architecture draft](https://datatracker.ietf.org/doc/draft-ietf-satp-architecture/) - [SATP Use-Cases draft](https://datatracker.ietf.org/doc/draft-ramakrishna-sat-use-cases/) - [SATP Data sharing draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-data-sharing) - [SATP View Addresses draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-views-addresses)

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
)

// checks if the AuditRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditRequest{}

// AuditRequest Response schema for an audit request. Contains the proofs generated during the audit period and the start and end datetimes.
type AuditRequest struct {
	// The start timestamp for the audit period, as a Unix timestamp (milliseconds since epoch).
	StartTimestamp int64 `json:"startTimestamp"`
	// The end timestamp for the audit period, as a Unix timestamp (milliseconds since epoch).
	EndTimestamp int64 `json:"endTimestamp"`
}

// NewAuditRequest instantiates a new AuditRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditRequest(startTimestamp int64, endTimestamp int64) *AuditRequest {
	this := AuditRequest{}
	this.StartTimestamp = startTimestamp
	this.EndTimestamp = endTimestamp
	return &this
}

// NewAuditRequestWithDefaults instantiates a new AuditRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditRequestWithDefaults() *AuditRequest {
	this := AuditRequest{}
	return &this
}

// GetStartTimestamp returns the StartTimestamp field value
func (o *AuditRequest) GetStartTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StartTimestamp
}

// GetStartTimestampOk returns a tuple with the StartTimestamp field value
// and a boolean to check if the value has been set.
func (o *AuditRequest) GetStartTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTimestamp, true
}

// SetStartTimestamp sets field value
func (o *AuditRequest) SetStartTimestamp(v int64) {
	o.StartTimestamp = v
}

// GetEndTimestamp returns the EndTimestamp field value
func (o *AuditRequest) GetEndTimestamp() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EndTimestamp
}

// GetEndTimestampOk returns a tuple with the EndTimestamp field value
// and a boolean to check if the value has been set.
func (o *AuditRequest) GetEndTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTimestamp, true
}

// SetEndTimestamp sets field value
func (o *AuditRequest) SetEndTimestamp(v int64) {
	o.EndTimestamp = v
}

func (o AuditRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startTimestamp"] = o.StartTimestamp
	toSerialize["endTimestamp"] = o.EndTimestamp
	return toSerialize, nil
}

type NullableAuditRequest struct {
	value *AuditRequest
	isSet bool
}

func (v NullableAuditRequest) Get() *AuditRequest {
	return v.value
}

func (v *NullableAuditRequest) Set(val *AuditRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditRequest(val *AuditRequest) *NullableAuditRequest {
	return &NullableAuditRequest{value: val, isSet: true}
}

func (v NullableAuditRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


