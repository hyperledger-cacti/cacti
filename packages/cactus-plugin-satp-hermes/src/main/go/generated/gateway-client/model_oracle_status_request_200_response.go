/*
SATP Gateway Client (Business Logic Orchestrator)

SATP is a protocol operating between two gateways that conducts the transfer of a digital asset from one gateway to another. The protocol establishes a secure channel between the endpoints and implements a 2-phase commit to ensure the properties of transfer atomicity, consistency, isolation and durability.  This API defines the gateway client facing API (business logic orchestrator, or BLO), which is named API-Type 1 in the SATP-Core specification.  **Additional Resources**: - [Proposed SATP Charter](https://datatracker.ietf.org/doc/charter-ietf-satp/) - [SATP Core draft](https://datatracker.ietf.org/doc/draft-ietf-satp-core) - [SATP Crash Recovery draft](https://datatracker.ietf.org/doc/draft-belchior-satp-gateway-recovery/) - [SATP Architecture draft](https://datatracker.ietf.org/doc/draft-ietf-satp-architecture/) - [SATP Use-Cases draft](https://datatracker.ietf.org/doc/draft-ramakrishna-sat-use-cases/) - [SATP Data sharing draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-data-sharing) - [SATP View Addresses draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-views-addresses)

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
)

// checks if the OracleStatusRequest200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OracleStatusRequest200Response{}

// OracleStatusRequest200Response Response schema for checking the status of a data transfer task.
type OracleStatusRequest200Response struct {
	// The unique identifier for the context of the data transfer task.
	TaskID *string `json:"taskID,omitempty"`
	SourceNetwork *TransactRequestSourceAssetNetworkId `json:"sourceNetwork,omitempty"`
	DestinationNetwork *TransactRequestSourceAssetNetworkId `json:"destinationNetwork,omitempty"`
	OriginContract *OracleStatusRequest200ResponseOriginContract `json:"originContract,omitempty"`
	DestinationContract *OracleStatusRequest200ResponseDestinationContract `json:"destinationContract,omitempty"`
	EventOfInterest *OracleStatusRequest200ResponseEventOfInterest `json:"eventOfInterest,omitempty"`
	WriteFunction *OracleStatusRequest200ResponseWriteFunction `json:"writeFunction,omitempty"`
	Tasks []OracleStatusRequest200ResponseTasksInner `json:"tasks,omitempty"`
	// The status of the data transfer task.
	Status *string `json:"status,omitempty"`
}

// NewOracleStatusRequest200Response instantiates a new OracleStatusRequest200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOracleStatusRequest200Response() *OracleStatusRequest200Response {
	this := OracleStatusRequest200Response{}
	return &this
}

// NewOracleStatusRequest200ResponseWithDefaults instantiates a new OracleStatusRequest200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOracleStatusRequest200ResponseWithDefaults() *OracleStatusRequest200Response {
	this := OracleStatusRequest200Response{}
	return &this
}

// GetTaskID returns the TaskID field value if set, zero value otherwise.
func (o *OracleStatusRequest200Response) GetTaskID() string {
	if o == nil || IsNil(o.TaskID) {
		var ret string
		return ret
	}
	return *o.TaskID
}

// GetTaskIDOk returns a tuple with the TaskID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200Response) GetTaskIDOk() (*string, bool) {
	if o == nil || IsNil(o.TaskID) {
		return nil, false
	}
	return o.TaskID, true
}

// HasTaskID returns a boolean if a field has been set.
func (o *OracleStatusRequest200Response) HasTaskID() bool {
	if o != nil && !IsNil(o.TaskID) {
		return true
	}

	return false
}

// SetTaskID gets a reference to the given string and assigns it to the TaskID field.
func (o *OracleStatusRequest200Response) SetTaskID(v string) {
	o.TaskID = &v
}

// GetSourceNetwork returns the SourceNetwork field value if set, zero value otherwise.
func (o *OracleStatusRequest200Response) GetSourceNetwork() TransactRequestSourceAssetNetworkId {
	if o == nil || IsNil(o.SourceNetwork) {
		var ret TransactRequestSourceAssetNetworkId
		return ret
	}
	return *o.SourceNetwork
}

// GetSourceNetworkOk returns a tuple with the SourceNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200Response) GetSourceNetworkOk() (*TransactRequestSourceAssetNetworkId, bool) {
	if o == nil || IsNil(o.SourceNetwork) {
		return nil, false
	}
	return o.SourceNetwork, true
}

// HasSourceNetwork returns a boolean if a field has been set.
func (o *OracleStatusRequest200Response) HasSourceNetwork() bool {
	if o != nil && !IsNil(o.SourceNetwork) {
		return true
	}

	return false
}

// SetSourceNetwork gets a reference to the given TransactRequestSourceAssetNetworkId and assigns it to the SourceNetwork field.
func (o *OracleStatusRequest200Response) SetSourceNetwork(v TransactRequestSourceAssetNetworkId) {
	o.SourceNetwork = &v
}

// GetDestinationNetwork returns the DestinationNetwork field value if set, zero value otherwise.
func (o *OracleStatusRequest200Response) GetDestinationNetwork() TransactRequestSourceAssetNetworkId {
	if o == nil || IsNil(o.DestinationNetwork) {
		var ret TransactRequestSourceAssetNetworkId
		return ret
	}
	return *o.DestinationNetwork
}

// GetDestinationNetworkOk returns a tuple with the DestinationNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200Response) GetDestinationNetworkOk() (*TransactRequestSourceAssetNetworkId, bool) {
	if o == nil || IsNil(o.DestinationNetwork) {
		return nil, false
	}
	return o.DestinationNetwork, true
}

// HasDestinationNetwork returns a boolean if a field has been set.
func (o *OracleStatusRequest200Response) HasDestinationNetwork() bool {
	if o != nil && !IsNil(o.DestinationNetwork) {
		return true
	}

	return false
}

// SetDestinationNetwork gets a reference to the given TransactRequestSourceAssetNetworkId and assigns it to the DestinationNetwork field.
func (o *OracleStatusRequest200Response) SetDestinationNetwork(v TransactRequestSourceAssetNetworkId) {
	o.DestinationNetwork = &v
}

// GetOriginContract returns the OriginContract field value if set, zero value otherwise.
func (o *OracleStatusRequest200Response) GetOriginContract() OracleStatusRequest200ResponseOriginContract {
	if o == nil || IsNil(o.OriginContract) {
		var ret OracleStatusRequest200ResponseOriginContract
		return ret
	}
	return *o.OriginContract
}

// GetOriginContractOk returns a tuple with the OriginContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200Response) GetOriginContractOk() (*OracleStatusRequest200ResponseOriginContract, bool) {
	if o == nil || IsNil(o.OriginContract) {
		return nil, false
	}
	return o.OriginContract, true
}

// HasOriginContract returns a boolean if a field has been set.
func (o *OracleStatusRequest200Response) HasOriginContract() bool {
	if o != nil && !IsNil(o.OriginContract) {
		return true
	}

	return false
}

// SetOriginContract gets a reference to the given OracleStatusRequest200ResponseOriginContract and assigns it to the OriginContract field.
func (o *OracleStatusRequest200Response) SetOriginContract(v OracleStatusRequest200ResponseOriginContract) {
	o.OriginContract = &v
}

// GetDestinationContract returns the DestinationContract field value if set, zero value otherwise.
func (o *OracleStatusRequest200Response) GetDestinationContract() OracleStatusRequest200ResponseDestinationContract {
	if o == nil || IsNil(o.DestinationContract) {
		var ret OracleStatusRequest200ResponseDestinationContract
		return ret
	}
	return *o.DestinationContract
}

// GetDestinationContractOk returns a tuple with the DestinationContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200Response) GetDestinationContractOk() (*OracleStatusRequest200ResponseDestinationContract, bool) {
	if o == nil || IsNil(o.DestinationContract) {
		return nil, false
	}
	return o.DestinationContract, true
}

// HasDestinationContract returns a boolean if a field has been set.
func (o *OracleStatusRequest200Response) HasDestinationContract() bool {
	if o != nil && !IsNil(o.DestinationContract) {
		return true
	}

	return false
}

// SetDestinationContract gets a reference to the given OracleStatusRequest200ResponseDestinationContract and assigns it to the DestinationContract field.
func (o *OracleStatusRequest200Response) SetDestinationContract(v OracleStatusRequest200ResponseDestinationContract) {
	o.DestinationContract = &v
}

// GetEventOfInterest returns the EventOfInterest field value if set, zero value otherwise.
func (o *OracleStatusRequest200Response) GetEventOfInterest() OracleStatusRequest200ResponseEventOfInterest {
	if o == nil || IsNil(o.EventOfInterest) {
		var ret OracleStatusRequest200ResponseEventOfInterest
		return ret
	}
	return *o.EventOfInterest
}

// GetEventOfInterestOk returns a tuple with the EventOfInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200Response) GetEventOfInterestOk() (*OracleStatusRequest200ResponseEventOfInterest, bool) {
	if o == nil || IsNil(o.EventOfInterest) {
		return nil, false
	}
	return o.EventOfInterest, true
}

// HasEventOfInterest returns a boolean if a field has been set.
func (o *OracleStatusRequest200Response) HasEventOfInterest() bool {
	if o != nil && !IsNil(o.EventOfInterest) {
		return true
	}

	return false
}

// SetEventOfInterest gets a reference to the given OracleStatusRequest200ResponseEventOfInterest and assigns it to the EventOfInterest field.
func (o *OracleStatusRequest200Response) SetEventOfInterest(v OracleStatusRequest200ResponseEventOfInterest) {
	o.EventOfInterest = &v
}

// GetWriteFunction returns the WriteFunction field value if set, zero value otherwise.
func (o *OracleStatusRequest200Response) GetWriteFunction() OracleStatusRequest200ResponseWriteFunction {
	if o == nil || IsNil(o.WriteFunction) {
		var ret OracleStatusRequest200ResponseWriteFunction
		return ret
	}
	return *o.WriteFunction
}

// GetWriteFunctionOk returns a tuple with the WriteFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200Response) GetWriteFunctionOk() (*OracleStatusRequest200ResponseWriteFunction, bool) {
	if o == nil || IsNil(o.WriteFunction) {
		return nil, false
	}
	return o.WriteFunction, true
}

// HasWriteFunction returns a boolean if a field has been set.
func (o *OracleStatusRequest200Response) HasWriteFunction() bool {
	if o != nil && !IsNil(o.WriteFunction) {
		return true
	}

	return false
}

// SetWriteFunction gets a reference to the given OracleStatusRequest200ResponseWriteFunction and assigns it to the WriteFunction field.
func (o *OracleStatusRequest200Response) SetWriteFunction(v OracleStatusRequest200ResponseWriteFunction) {
	o.WriteFunction = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *OracleStatusRequest200Response) GetTasks() []OracleStatusRequest200ResponseTasksInner {
	if o == nil || IsNil(o.Tasks) {
		var ret []OracleStatusRequest200ResponseTasksInner
		return ret
	}
	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200Response) GetTasksOk() ([]OracleStatusRequest200ResponseTasksInner, bool) {
	if o == nil || IsNil(o.Tasks) {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *OracleStatusRequest200Response) HasTasks() bool {
	if o != nil && !IsNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []OracleStatusRequest200ResponseTasksInner and assigns it to the Tasks field.
func (o *OracleStatusRequest200Response) SetTasks(v []OracleStatusRequest200ResponseTasksInner) {
	o.Tasks = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OracleStatusRequest200Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusRequest200Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OracleStatusRequest200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OracleStatusRequest200Response) SetStatus(v string) {
	o.Status = &v
}

func (o OracleStatusRequest200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OracleStatusRequest200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaskID) {
		toSerialize["taskID"] = o.TaskID
	}
	if !IsNil(o.SourceNetwork) {
		toSerialize["sourceNetwork"] = o.SourceNetwork
	}
	if !IsNil(o.DestinationNetwork) {
		toSerialize["destinationNetwork"] = o.DestinationNetwork
	}
	if !IsNil(o.OriginContract) {
		toSerialize["originContract"] = o.OriginContract
	}
	if !IsNil(o.DestinationContract) {
		toSerialize["destinationContract"] = o.DestinationContract
	}
	if !IsNil(o.EventOfInterest) {
		toSerialize["eventOfInterest"] = o.EventOfInterest
	}
	if !IsNil(o.WriteFunction) {
		toSerialize["writeFunction"] = o.WriteFunction
	}
	if !IsNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableOracleStatusRequest200Response struct {
	value *OracleStatusRequest200Response
	isSet bool
}

func (v NullableOracleStatusRequest200Response) Get() *OracleStatusRequest200Response {
	return v.value
}

func (v *NullableOracleStatusRequest200Response) Set(val *OracleStatusRequest200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableOracleStatusRequest200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableOracleStatusRequest200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOracleStatusRequest200Response(val *OracleStatusRequest200Response) *NullableOracleStatusRequest200Response {
	return &NullableOracleStatusRequest200Response{value: val, isSet: true}
}

func (v NullableOracleStatusRequest200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOracleStatusRequest200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


