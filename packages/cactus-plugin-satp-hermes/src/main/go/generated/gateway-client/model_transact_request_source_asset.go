/*
SATP Gateway Client (Business Logic Orchestrator)

SATP is a protocol operating between two gateways that conducts the transfer of a digital asset from one gateway to another. The protocol establishes a secure channel between the endpoints and implements a 2-phase commit to ensure the properties of transfer atomicity, consistency, isolation and durability.  This API defines the gateway client facing API (business logic orchestrator, or BLO), which is named API-Type 1 in the SATP-Core specification.  **Additional Resources**: - [Proposed SATP Charter](https://datatracker.ietf.org/doc/charter-ietf-satp/) - [SATP Core draft](https://datatracker.ietf.org/doc/draft-ietf-satp-core) - [SATP Crash Recovery draft](https://datatracker.ietf.org/doc/draft-belchior-satp-gateway-recovery/) - [SATP Architecture draft](https://datatracker.ietf.org/doc/draft-ietf-satp-architecture/) - [SATP Use-Cases draft](https://datatracker.ietf.org/doc/draft-ramakrishna-sat-use-cases/) - [SATP Data sharing draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-data-sharing) - [SATP View Addresses draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-views-addresses)

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
)

// checks if the TransactRequestSourceAsset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactRequestSourceAsset{}

// TransactRequestSourceAsset An asset
type TransactRequestSourceAsset struct {
	Id string `json:"id"`
	Owner string `json:"owner"`
	ContractName string `json:"contractName"`
	ContractAddress *string `json:"contractAddress,omitempty"`
	MspId *string `json:"mspId,omitempty"`
	ChannelName *string `json:"channelName,omitempty"`
	Amount *string `json:"amount,omitempty"`
	NetworkId TransactRequestSourceAssetNetworkId `json:"networkId"`
	// The type of token.
	TokenType string `json:"tokenType"`
	ReferenceId string `json:"referenceId"`
}

// NewTransactRequestSourceAsset instantiates a new TransactRequestSourceAsset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactRequestSourceAsset(id string, owner string, contractName string, networkId TransactRequestSourceAssetNetworkId, tokenType string, referenceId string) *TransactRequestSourceAsset {
	this := TransactRequestSourceAsset{}
	this.Id = id
	this.Owner = owner
	this.ContractName = contractName
	this.NetworkId = networkId
	this.TokenType = tokenType
	this.ReferenceId = referenceId
	return &this
}

// NewTransactRequestSourceAssetWithDefaults instantiates a new TransactRequestSourceAsset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactRequestSourceAssetWithDefaults() *TransactRequestSourceAsset {
	this := TransactRequestSourceAsset{}
	return &this
}

// GetId returns the Id field value
func (o *TransactRequestSourceAsset) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TransactRequestSourceAsset) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TransactRequestSourceAsset) SetId(v string) {
	o.Id = v
}

// GetOwner returns the Owner field value
func (o *TransactRequestSourceAsset) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *TransactRequestSourceAsset) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *TransactRequestSourceAsset) SetOwner(v string) {
	o.Owner = v
}

// GetContractName returns the ContractName field value
func (o *TransactRequestSourceAsset) GetContractName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractName
}

// GetContractNameOk returns a tuple with the ContractName field value
// and a boolean to check if the value has been set.
func (o *TransactRequestSourceAsset) GetContractNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractName, true
}

// SetContractName sets field value
func (o *TransactRequestSourceAsset) SetContractName(v string) {
	o.ContractName = v
}

// GetContractAddress returns the ContractAddress field value if set, zero value otherwise.
func (o *TransactRequestSourceAsset) GetContractAddress() string {
	if o == nil || IsNil(o.ContractAddress) {
		var ret string
		return ret
	}
	return *o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactRequestSourceAsset) GetContractAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ContractAddress) {
		return nil, false
	}
	return o.ContractAddress, true
}

// HasContractAddress returns a boolean if a field has been set.
func (o *TransactRequestSourceAsset) HasContractAddress() bool {
	if o != nil && !IsNil(o.ContractAddress) {
		return true
	}

	return false
}

// SetContractAddress gets a reference to the given string and assigns it to the ContractAddress field.
func (o *TransactRequestSourceAsset) SetContractAddress(v string) {
	o.ContractAddress = &v
}

// GetMspId returns the MspId field value if set, zero value otherwise.
func (o *TransactRequestSourceAsset) GetMspId() string {
	if o == nil || IsNil(o.MspId) {
		var ret string
		return ret
	}
	return *o.MspId
}

// GetMspIdOk returns a tuple with the MspId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactRequestSourceAsset) GetMspIdOk() (*string, bool) {
	if o == nil || IsNil(o.MspId) {
		return nil, false
	}
	return o.MspId, true
}

// HasMspId returns a boolean if a field has been set.
func (o *TransactRequestSourceAsset) HasMspId() bool {
	if o != nil && !IsNil(o.MspId) {
		return true
	}

	return false
}

// SetMspId gets a reference to the given string and assigns it to the MspId field.
func (o *TransactRequestSourceAsset) SetMspId(v string) {
	o.MspId = &v
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise.
func (o *TransactRequestSourceAsset) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName) {
		var ret string
		return ret
	}
	return *o.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactRequestSourceAsset) GetChannelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelName) {
		return nil, false
	}
	return o.ChannelName, true
}

// HasChannelName returns a boolean if a field has been set.
func (o *TransactRequestSourceAsset) HasChannelName() bool {
	if o != nil && !IsNil(o.ChannelName) {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given string and assigns it to the ChannelName field.
func (o *TransactRequestSourceAsset) SetChannelName(v string) {
	o.ChannelName = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *TransactRequestSourceAsset) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactRequestSourceAsset) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *TransactRequestSourceAsset) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *TransactRequestSourceAsset) SetAmount(v string) {
	o.Amount = &v
}

// GetNetworkId returns the NetworkId field value
func (o *TransactRequestSourceAsset) GetNetworkId() TransactRequestSourceAssetNetworkId {
	if o == nil {
		var ret TransactRequestSourceAssetNetworkId
		return ret
	}

	return o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value
// and a boolean to check if the value has been set.
func (o *TransactRequestSourceAsset) GetNetworkIdOk() (*TransactRequestSourceAssetNetworkId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkId, true
}

// SetNetworkId sets field value
func (o *TransactRequestSourceAsset) SetNetworkId(v TransactRequestSourceAssetNetworkId) {
	o.NetworkId = v
}

// GetTokenType returns the TokenType field value
func (o *TransactRequestSourceAsset) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *TransactRequestSourceAsset) GetTokenTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *TransactRequestSourceAsset) SetTokenType(v string) {
	o.TokenType = v
}

// GetReferenceId returns the ReferenceId field value
func (o *TransactRequestSourceAsset) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *TransactRequestSourceAsset) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *TransactRequestSourceAsset) SetReferenceId(v string) {
	o.ReferenceId = v
}

func (o TransactRequestSourceAsset) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactRequestSourceAsset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["owner"] = o.Owner
	toSerialize["contractName"] = o.ContractName
	if !IsNil(o.ContractAddress) {
		toSerialize["contractAddress"] = o.ContractAddress
	}
	if !IsNil(o.MspId) {
		toSerialize["mspId"] = o.MspId
	}
	if !IsNil(o.ChannelName) {
		toSerialize["channelName"] = o.ChannelName
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	toSerialize["networkId"] = o.NetworkId
	toSerialize["tokenType"] = o.TokenType
	toSerialize["referenceId"] = o.ReferenceId
	return toSerialize, nil
}

type NullableTransactRequestSourceAsset struct {
	value *TransactRequestSourceAsset
	isSet bool
}

func (v NullableTransactRequestSourceAsset) Get() *TransactRequestSourceAsset {
	return v.value
}

func (v *NullableTransactRequestSourceAsset) Set(val *TransactRequestSourceAsset) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactRequestSourceAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactRequestSourceAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactRequestSourceAsset(val *TransactRequestSourceAsset) *NullableTransactRequestSourceAsset {
	return &NullableTransactRequestSourceAsset{value: val, isSet: true}
}

func (v NullableTransactRequestSourceAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactRequestSourceAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


