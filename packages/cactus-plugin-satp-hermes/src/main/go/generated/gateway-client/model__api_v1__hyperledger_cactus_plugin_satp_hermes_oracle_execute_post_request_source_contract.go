/*
SATP Gateway Client (Business Logic Orchestrator)

SATP is a protocol operating between two gateways that conducts the transfer of a digital asset from one gateway to another. The protocol establishes a secure channel between the endpoints and implements a 2-phase commit to ensure the properties of transfer atomicity, consistency, isolation and durability.  This API defines the gateway client facing API (business logic orchestrator, or BLO), which is named API-Type 1 in the SATP-Core specification.  **Additional Resources**: - [Proposed SATP Charter](https://datatracker.ietf.org/doc/charter-ietf-satp/) - [SATP Core draft](https://datatracker.ietf.org/doc/draft-ietf-satp-core) - [SATP Crash Recovery draft](https://datatracker.ietf.org/doc/draft-belchior-satp-gateway-recovery/) - [SATP Architecture draft](https://datatracker.ietf.org/doc/draft-ietf-satp-architecture/) - [SATP Use-Cases draft](https://datatracker.ietf.org/doc/draft-ramakrishna-sat-use-cases/) - [SATP Data sharing draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-data-sharing) - [SATP View Addresses draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-views-addresses)

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
)

// checks if the ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract{}

// ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract The contract data on the source blockchain. Only if taskType is READ or READ_AND_UPDATE.
type ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract struct {
	// The name of the contract.
	ContractName *string `json:"contractName,omitempty"`
	// The address of the contract.
	ContractAddress NullableString `json:"contractAddress,omitempty"`
	// The ABI (Application Binary Interface) of the contract.
	ContractAbi []map[string]interface{} `json:"contractAbi,omitempty"`
	// The bytecode of the contract.
	ContractBytecode NullableString `json:"contractBytecode,omitempty"`
	// The name of the method to be invoked on the contract.
	MethodName *string `json:"methodName,omitempty"`
	// The parameters to be passed to the contract method.
	Params []ApiV1HyperledgerCactusPluginSatpHermesOracleRegisterPostRequestSrcContractParamsInner `json:"params,omitempty"`
	// The event signatures to listen for on the source network. To be defined if task mode is EVENT_LISTENING.
	EventSignature *string `json:"eventSignature,omitempty"`
}

// NewApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract instantiates a new ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract() *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract {
	this := ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract{}
	return &this
}

// NewApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContractWithDefaults instantiates a new ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContractWithDefaults() *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract {
	this := ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract{}
	return &this
}

// GetContractName returns the ContractName field value if set, zero value otherwise.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetContractName() string {
	if o == nil || IsNil(o.ContractName) {
		var ret string
		return ret
	}
	return *o.ContractName
}

// GetContractNameOk returns a tuple with the ContractName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetContractNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContractName) {
		return nil, false
	}
	return o.ContractName, true
}

// HasContractName returns a boolean if a field has been set.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) HasContractName() bool {
	if o != nil && !IsNil(o.ContractName) {
		return true
	}

	return false
}

// SetContractName gets a reference to the given string and assigns it to the ContractName field.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) SetContractName(v string) {
	o.ContractName = &v
}

// GetContractAddress returns the ContractAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetContractAddress() string {
	if o == nil || IsNil(o.ContractAddress.Get()) {
		var ret string
		return ret
	}
	return *o.ContractAddress.Get()
}

// GetContractAddressOk returns a tuple with the ContractAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetContractAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractAddress.Get(), o.ContractAddress.IsSet()
}

// HasContractAddress returns a boolean if a field has been set.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) HasContractAddress() bool {
	if o != nil && o.ContractAddress.IsSet() {
		return true
	}

	return false
}

// SetContractAddress gets a reference to the given NullableString and assigns it to the ContractAddress field.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) SetContractAddress(v string) {
	o.ContractAddress.Set(&v)
}
// SetContractAddressNil sets the value for ContractAddress to be an explicit nil
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) SetContractAddressNil() {
	o.ContractAddress.Set(nil)
}

// UnsetContractAddress ensures that no value is present for ContractAddress, not even an explicit nil
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) UnsetContractAddress() {
	o.ContractAddress.Unset()
}

// GetContractAbi returns the ContractAbi field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetContractAbi() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.ContractAbi
}

// GetContractAbiOk returns a tuple with the ContractAbi field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetContractAbiOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.ContractAbi) {
		return nil, false
	}
	return o.ContractAbi, true
}

// HasContractAbi returns a boolean if a field has been set.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) HasContractAbi() bool {
	if o != nil && IsNil(o.ContractAbi) {
		return true
	}

	return false
}

// SetContractAbi gets a reference to the given []map[string]interface{} and assigns it to the ContractAbi field.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) SetContractAbi(v []map[string]interface{}) {
	o.ContractAbi = v
}

// GetContractBytecode returns the ContractBytecode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetContractBytecode() string {
	if o == nil || IsNil(o.ContractBytecode.Get()) {
		var ret string
		return ret
	}
	return *o.ContractBytecode.Get()
}

// GetContractBytecodeOk returns a tuple with the ContractBytecode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetContractBytecodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContractBytecode.Get(), o.ContractBytecode.IsSet()
}

// HasContractBytecode returns a boolean if a field has been set.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) HasContractBytecode() bool {
	if o != nil && o.ContractBytecode.IsSet() {
		return true
	}

	return false
}

// SetContractBytecode gets a reference to the given NullableString and assigns it to the ContractBytecode field.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) SetContractBytecode(v string) {
	o.ContractBytecode.Set(&v)
}
// SetContractBytecodeNil sets the value for ContractBytecode to be an explicit nil
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) SetContractBytecodeNil() {
	o.ContractBytecode.Set(nil)
}

// UnsetContractBytecode ensures that no value is present for ContractBytecode, not even an explicit nil
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) UnsetContractBytecode() {
	o.ContractBytecode.Unset()
}

// GetMethodName returns the MethodName field value if set, zero value otherwise.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetMethodName() string {
	if o == nil || IsNil(o.MethodName) {
		var ret string
		return ret
	}
	return *o.MethodName
}

// GetMethodNameOk returns a tuple with the MethodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetMethodNameOk() (*string, bool) {
	if o == nil || IsNil(o.MethodName) {
		return nil, false
	}
	return o.MethodName, true
}

// HasMethodName returns a boolean if a field has been set.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) HasMethodName() bool {
	if o != nil && !IsNil(o.MethodName) {
		return true
	}

	return false
}

// SetMethodName gets a reference to the given string and assigns it to the MethodName field.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) SetMethodName(v string) {
	o.MethodName = &v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetParams() []ApiV1HyperledgerCactusPluginSatpHermesOracleRegisterPostRequestSrcContractParamsInner {
	if o == nil || IsNil(o.Params) {
		var ret []ApiV1HyperledgerCactusPluginSatpHermesOracleRegisterPostRequestSrcContractParamsInner
		return ret
	}
	return o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetParamsOk() ([]ApiV1HyperledgerCactusPluginSatpHermesOracleRegisterPostRequestSrcContractParamsInner, bool) {
	if o == nil || IsNil(o.Params) {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given []ApiV1HyperledgerCactusPluginSatpHermesOracleRegisterPostRequestSrcContractParamsInner and assigns it to the Params field.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) SetParams(v []ApiV1HyperledgerCactusPluginSatpHermesOracleRegisterPostRequestSrcContractParamsInner) {
	o.Params = v
}

// GetEventSignature returns the EventSignature field value if set, zero value otherwise.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetEventSignature() string {
	if o == nil || IsNil(o.EventSignature) {
		var ret string
		return ret
	}
	return *o.EventSignature
}

// GetEventSignatureOk returns a tuple with the EventSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) GetEventSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.EventSignature) {
		return nil, false
	}
	return o.EventSignature, true
}

// HasEventSignature returns a boolean if a field has been set.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) HasEventSignature() bool {
	if o != nil && !IsNil(o.EventSignature) {
		return true
	}

	return false
}

// SetEventSignature gets a reference to the given string and assigns it to the EventSignature field.
func (o *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) SetEventSignature(v string) {
	o.EventSignature = &v
}

func (o ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractName) {
		toSerialize["contractName"] = o.ContractName
	}
	if o.ContractAddress.IsSet() {
		toSerialize["contractAddress"] = o.ContractAddress.Get()
	}
	if o.ContractAbi != nil {
		toSerialize["contractAbi"] = o.ContractAbi
	}
	if o.ContractBytecode.IsSet() {
		toSerialize["contractBytecode"] = o.ContractBytecode.Get()
	}
	if !IsNil(o.MethodName) {
		toSerialize["methodName"] = o.MethodName
	}
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	if !IsNil(o.EventSignature) {
		toSerialize["eventSignature"] = o.EventSignature
	}
	return toSerialize, nil
}

type NullableApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract struct {
	value *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract
	isSet bool
}

func (v NullableApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) Get() *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract {
	return v.value
}

func (v *NullableApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) Set(val *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract(val *ApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) *NullableApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract {
	return &NullableApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract{value: val, isSet: true}
}

func (v NullableApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV1HyperledgerCactusPluginSatpHermesOracleExecutePostRequestSourceContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


