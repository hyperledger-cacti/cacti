/*
SATP Gateway Client (Business Logic Orchestrator)

SATP is a protocol operating between two gateways that conducts the transfer of a digital asset from one gateway to another. The protocol establishes a secure channel between the endpoints and implements a 2-phase commit to ensure the properties of transfer atomicity, consistency, isolation and durability.  This API defines the gateway client facing API (business logic orchestrator, or BLO), which is named API-Type 1 in the SATP-Core specification.  **Additional Resources**: - [Proposed SATP Charter](https://datatracker.ietf.org/doc/charter-ietf-satp/) - [SATP Core draft](https://datatracker.ietf.org/doc/draft-ietf-satp-core) - [SATP Crash Recovery draft](https://datatracker.ietf.org/doc/draft-belchior-satp-gateway-recovery/) - [SATP Architecture draft](https://datatracker.ietf.org/doc/draft-ietf-satp-architecture/) - [SATP Use-Cases draft](https://datatracker.ietf.org/doc/draft-ramakrishna-sat-use-cases/) - [SATP Data sharing draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-data-sharing) - [SATP View Addresses draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-views-addresses)

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
)

// checks if the TransactRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactRequest{}

// TransactRequest Request schema for initiating a transaction. Includes details such as the transaction context, mode (data or transfer), payload, and information about the source and destination DLT networks.
type TransactRequest struct {
	ContextID string `json:"contextID"`
	Payload *string `json:"payload,omitempty"`
	FromDLTNetworkID string `json:"fromDLTNetworkID"`
	ToDLTNetworkID string `json:"toDLTNetworkID"`
	FromAmount string `json:"fromAmount"`
	ToAmount string `json:"toAmount"`
	BeneficiaryPubkey string `json:"beneficiaryPubkey"`
	OriginatorPubkey string `json:"originatorPubkey"`
	SourceAsset TransactRequestSourceAsset `json:"sourceAsset"`
	DestinyAsset TransactRequestSourceAsset `json:"destinyAsset"`
}

// NewTransactRequest instantiates a new TransactRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactRequest(contextID string, fromDLTNetworkID string, toDLTNetworkID string, fromAmount string, toAmount string, beneficiaryPubkey string, originatorPubkey string, sourceAsset TransactRequestSourceAsset, destinyAsset TransactRequestSourceAsset) *TransactRequest {
	this := TransactRequest{}
	this.ContextID = contextID
	this.FromDLTNetworkID = fromDLTNetworkID
	this.ToDLTNetworkID = toDLTNetworkID
	this.FromAmount = fromAmount
	this.ToAmount = toAmount
	this.BeneficiaryPubkey = beneficiaryPubkey
	this.OriginatorPubkey = originatorPubkey
	this.SourceAsset = sourceAsset
	this.DestinyAsset = destinyAsset
	return &this
}

// NewTransactRequestWithDefaults instantiates a new TransactRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactRequestWithDefaults() *TransactRequest {
	this := TransactRequest{}
	return &this
}

// GetContextID returns the ContextID field value
func (o *TransactRequest) GetContextID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContextID
}

// GetContextIDOk returns a tuple with the ContextID field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetContextIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContextID, true
}

// SetContextID sets field value
func (o *TransactRequest) SetContextID(v string) {
	o.ContextID = v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *TransactRequest) GetPayload() string {
	if o == nil || IsNil(o.Payload) {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *TransactRequest) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *TransactRequest) SetPayload(v string) {
	o.Payload = &v
}

// GetFromDLTNetworkID returns the FromDLTNetworkID field value
func (o *TransactRequest) GetFromDLTNetworkID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromDLTNetworkID
}

// GetFromDLTNetworkIDOk returns a tuple with the FromDLTNetworkID field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetFromDLTNetworkIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromDLTNetworkID, true
}

// SetFromDLTNetworkID sets field value
func (o *TransactRequest) SetFromDLTNetworkID(v string) {
	o.FromDLTNetworkID = v
}

// GetToDLTNetworkID returns the ToDLTNetworkID field value
func (o *TransactRequest) GetToDLTNetworkID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToDLTNetworkID
}

// GetToDLTNetworkIDOk returns a tuple with the ToDLTNetworkID field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetToDLTNetworkIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToDLTNetworkID, true
}

// SetToDLTNetworkID sets field value
func (o *TransactRequest) SetToDLTNetworkID(v string) {
	o.ToDLTNetworkID = v
}

// GetFromAmount returns the FromAmount field value
func (o *TransactRequest) GetFromAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromAmount
}

// GetFromAmountOk returns a tuple with the FromAmount field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetFromAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromAmount, true
}

// SetFromAmount sets field value
func (o *TransactRequest) SetFromAmount(v string) {
	o.FromAmount = v
}

// GetToAmount returns the ToAmount field value
func (o *TransactRequest) GetToAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToAmount
}

// GetToAmountOk returns a tuple with the ToAmount field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetToAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToAmount, true
}

// SetToAmount sets field value
func (o *TransactRequest) SetToAmount(v string) {
	o.ToAmount = v
}

// GetBeneficiaryPubkey returns the BeneficiaryPubkey field value
func (o *TransactRequest) GetBeneficiaryPubkey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BeneficiaryPubkey
}

// GetBeneficiaryPubkeyOk returns a tuple with the BeneficiaryPubkey field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetBeneficiaryPubkeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BeneficiaryPubkey, true
}

// SetBeneficiaryPubkey sets field value
func (o *TransactRequest) SetBeneficiaryPubkey(v string) {
	o.BeneficiaryPubkey = v
}

// GetOriginatorPubkey returns the OriginatorPubkey field value
func (o *TransactRequest) GetOriginatorPubkey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginatorPubkey
}

// GetOriginatorPubkeyOk returns a tuple with the OriginatorPubkey field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetOriginatorPubkeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginatorPubkey, true
}

// SetOriginatorPubkey sets field value
func (o *TransactRequest) SetOriginatorPubkey(v string) {
	o.OriginatorPubkey = v
}

// GetSourceAsset returns the SourceAsset field value
func (o *TransactRequest) GetSourceAsset() TransactRequestSourceAsset {
	if o == nil {
		var ret TransactRequestSourceAsset
		return ret
	}

	return o.SourceAsset
}

// GetSourceAssetOk returns a tuple with the SourceAsset field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetSourceAssetOk() (*TransactRequestSourceAsset, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceAsset, true
}

// SetSourceAsset sets field value
func (o *TransactRequest) SetSourceAsset(v TransactRequestSourceAsset) {
	o.SourceAsset = v
}

// GetDestinyAsset returns the DestinyAsset field value
func (o *TransactRequest) GetDestinyAsset() TransactRequestSourceAsset {
	if o == nil {
		var ret TransactRequestSourceAsset
		return ret
	}

	return o.DestinyAsset
}

// GetDestinyAssetOk returns a tuple with the DestinyAsset field value
// and a boolean to check if the value has been set.
func (o *TransactRequest) GetDestinyAssetOk() (*TransactRequestSourceAsset, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinyAsset, true
}

// SetDestinyAsset sets field value
func (o *TransactRequest) SetDestinyAsset(v TransactRequestSourceAsset) {
	o.DestinyAsset = v
}

func (o TransactRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contextID"] = o.ContextID
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	toSerialize["fromDLTNetworkID"] = o.FromDLTNetworkID
	toSerialize["toDLTNetworkID"] = o.ToDLTNetworkID
	toSerialize["fromAmount"] = o.FromAmount
	toSerialize["toAmount"] = o.ToAmount
	toSerialize["beneficiaryPubkey"] = o.BeneficiaryPubkey
	toSerialize["originatorPubkey"] = o.OriginatorPubkey
	toSerialize["sourceAsset"] = o.SourceAsset
	toSerialize["destinyAsset"] = o.DestinyAsset
	return toSerialize, nil
}

type NullableTransactRequest struct {
	value *TransactRequest
	isSet bool
}

func (v NullableTransactRequest) Get() *TransactRequest {
	return v.value
}

func (v *NullableTransactRequest) Set(val *TransactRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactRequest(val *TransactRequest) *NullableTransactRequest {
	return &NullableTransactRequest{value: val, isSet: true}
}

func (v NullableTransactRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


