// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file cacti/satp/v02/common/message.proto (package cacti.satp.v02.common, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cacti/satp/v02/common/message.proto.
 */
export const file_cacti_satp_v02_common_message: GenFile = /*@__PURE__*/
  fileDesc("CiNjYWN0aS9zYXRwL3YwMi9jb21tb24vbWVzc2FnZS5wcm90bxIVY2FjdGkuc2F0cC52MDIuY29tbW9uIh4KC01lc3NhZ2VDb3JlEg8KB21lc3NhZ2UYASABKAkiJgoTUm9sbGJhY2tNZXNzYWdlQ29yZRIPCgdtZXNzYWdlGAEgASgJIjQKA0FjaxItCgZzdGF0dXMYASABKA4yHS5jYWN0aS5zYXRwLnYwMi5jb21tb24uU1RBVFVTIvoECg5UcmFuc2ZlckNsYWltcxIYChBkaWdpdGFsX2Fzc2V0X2lkGAEgASgJEhgKEGFzc2V0X3Byb2ZpbGVfaWQYAiABKAkSJQoddmVyaWZpZWRfb3JpZ2luYXRvcl9lbnRpdHlfaWQYAyABKAkSJgoedmVyaWZpZWRfYmVuZWZpY2lhcnlfZW50aXR5X2lkGAQgASgJEhkKEW9yaWdpbmF0b3JfcHVia2V5GAUgASgJEhoKEmJlbmVmaWNpYXJ5X3B1YmtleRgGIAEoCRIhChlzZW5kZXJfZ2F0ZXdheV9uZXR3b3JrX2lkGAcgASgJEiQKHHJlY2lwaWVudF9nYXRld2F5X25ldHdvcmtfaWQYCCABKAkSHQoVY2xpZW50X2dhdGV3YXlfcHVia2V5GAkgASgJEh0KFXNlcnZlcl9nYXRld2F5X3B1YmtleRgKIAEoCRIfChdzZW5kZXJfZ2F0ZXdheV9vd25lcl9pZBgLIAEoCRIhChlyZWNlaXZlcl9nYXRld2F5X293bmVyX2lkGAwgASgJEhMKC21heF9yZXRyaWVzGA0gASgNEhMKC21heF90aW1lb3V0GA4gASgEEh4KFmFtb3VudF9mcm9tX29yaWdpbmF0b3IYDyABKAkSHQoVYW1vdW50X3RvX2JlbmVmaWNpYXJ5GBAgASgJEj0KD3Byb2Nlc3NQb2xpY2llcxgRIAMoCzIkLmNhY3RpLnNhdHAudjAyLmNvbW1vbi5Qcml2YWN5UG9saWN5EjsKDW1lcmdlUG9saWNpZXMYEiADKAsyJC5jYWN0aS5zYXRwLnYwMi5jb21tb24uUHJpdmFjeVBvbGljeSIWChRUcmFuc2ZlckNsYWltc0Zvcm1hdCIwCg1Qcml2YWN5UG9saWN5EgwKBG5hbWUYASABKAkSEQoJYXJndW1lbnRzGAIgAygJIg0KC1Blcm1pc3Npb25zIhEKD1N1YnNlcXVlbnRDYWxscyK4AgoHSGlzdG9yeRI4Cgx0cmFuc2FjdGlvbnMYASADKAsyIi5jYWN0aS5zYXRwLnYwMi5jb21tb24uVHJhbnNhY3Rpb24SQAoRYWN0aW9uX2NhdGVnb3JpZXMYAiADKAsyJS5jYWN0aS5zYXRwLnYwMi5jb21tb24uQWN0aW9uQ2F0ZWdvcnkSDgoGb3JpZ2luGAMgASgJEhMKC2Rlc3RpbmF0aW9uGAQgASgJEg8KB2JhbGFuY2UYBSABKAkSLQoGc3RhdHVzGAYgASgOMh0uY2FjdGkuc2F0cC52MDIuY29tbW9uLlNUQVRVUxJMChZhcHBsaWNhdGlvbl9wYXJhbWV0ZXJzGAcgASgLMiwuY2FjdGkuc2F0cC52MDIuY29tbW9uLkFwcGxpY2F0aW9uUGFyYW1ldGVycyIQCg5BY3Rpb25DYXRlZ29yeSINCgtUcmFuc2FjdGlvbiIXChVBcHBsaWNhdGlvblBhcmFtZXRlcnMihAUKE05ldHdvcmtDYXBhYmlsaXRpZXMSIQoZc2VuZGVyX2dhdGV3YXlfbmV0d29ya19pZBgBIAEoCRJGChNzaWduYXR1cmVfYWxnb3JpdGhtGAIgASgOMikuY2FjdGkuc2F0cC52MDIuY29tbW9uLlNpZ25hdHVyZUFsZ29yaXRobRJRCh5zdXBwb3J0ZWRfc2lnbmF0dXJlX2FsZ29yaXRobXMYAyADKA4yKS5jYWN0aS5zYXRwLnYwMi5jb21tb24uU2lnbmF0dXJlQWxnb3JpdGhtEjIKCWxvY2tfdHlwZRgEIAEoDjIfLmNhY3RpLnNhdHAudjAyLmNvbW1vbi5Mb2NrVHlwZRIcChRsb2NrX2V4cGlyYXRpb25fdGltZRgFIAEoBBI3CgtwZXJtaXNzaW9ucxgGIAEoCzIiLmNhY3RpLnNhdHAudjAyLmNvbW1vbi5QZXJtaXNzaW9ucxIVCg1kZXZlbG9wZXJfdXJuGAcgASgJEkQKEmNyZWRlbnRpYWxfcHJvZmlsZRgIIAEoDjIoLmNhY3RpLnNhdHAudjAyLmNvbW1vbi5DcmVkZW50aWFsUHJvZmlsZRIbChNhcHBsaWNhdGlvbl9wcm9maWxlGAkgASgJEhcKD2xvZ2dpbmdfcHJvZmlsZRgKIAEoCRIeChZhY2Nlc3NfY29udHJvbF9wcm9maWxlGAsgASgJEkAKEHN1YnNlcXVlbnRfY2FsbHMYDCABKAsyJi5jYWN0aS5zYXRwLnYwMi5jb21tb24uU3Vic2VxdWVudENhbGxzEi8KB2hpc3RvcnkYDSADKAsyHi5jYWN0aS5zYXRwLnYwMi5jb21tb24uSGlzdG9yeSK2BAoKQ29tbW9uU2F0cBIPCgd2ZXJzaW9uGAEgASgJEjgKDG1lc3NhZ2VfdHlwZRgCIAEoDjIiLmNhY3RpLnNhdHAudjAyLmNvbW1vbi5NZXNzYWdlVHlwZRISCgpzZXNzaW9uX2lkGAMgASgJEhsKE3RyYW5zZmVyX2NvbnRleHRfaWQYBCABKAkSFwoPc2VxdWVuY2VfbnVtYmVyGAUgASgEEhQKDHJlc291cmNlX3VybBgGIAEoCRI+Cg9hY3Rpb25fcmVzcG9uc2UYCCABKAsyJS5jYWN0aS5zYXRwLnYwMi5jb21tb24uQWN0aW9uUmVzcG9uc2USGAoQY3JlZGVudGlhbF9ibG9jaxgKIAEoCRI+Cg9wYXlsb2FkX3Byb2ZpbGUYCyABKAsyJS5jYWN0aS5zYXRwLnYwMi5jb21tb24uUGF5bG9hZFByb2ZpbGUSLwoHcGF5bG9hZBgNIAEoCzIeLmNhY3RpLnNhdHAudjAyLmNvbW1vbi5QYXlsb2FkEhQKDHBheWxvYWRfaGFzaBgOIAEoCRIdChVjbGllbnRfZ2F0ZXdheV9wdWJrZXkYDyABKAkSHQoVc2VydmVyX2dhdGV3YXlfcHVia2V5GBAgASgJEh0KFWhhc2hfcHJldmlvdXNfbWVzc2FnZRgRIAEoCRINCgVlcnJvchgSIAEoCBIwCgplcnJvcl9jb2RlGBMgASgOMhwuY2FjdGkuc2F0cC52MDIuY29tbW9uLkVycm9yIhAKDkFjdGlvblJlc3BvbnNlImIKDlBheWxvYWRQcm9maWxlEjoKDWFzc2V0X3Byb2ZpbGUYASABKAsyIy5jYWN0aS5zYXRwLnYwMi5jb21tb24uQXNzZXRQcm9maWxlEhQKDGNhcGFiaWxpdGllcxgCIAEoCSK7AgoMQXNzZXRQcm9maWxlEg4KBmlzc3VlchgBIAEoCRISCgphc3NldF9jb2RlGAIgASgJEhcKD2Fzc2V0X2NvZGVfdHlwZRgDIAEoCRIVCg1pc3N1YW5jZV9kYXRlGAQgASgJEhcKD2V4cGlyYXRpb25fZGF0ZRgFIAEoCRIeChZ2ZXJpZmljYXRpb25fZW5kX3BvaW50GAYgASgJEhkKEWRpZ2l0YWxfc2lnbmF0dXJlGAcgASgJEhcKD3Byb3NwZWN0dXNfbGluaxgIIAEoCRIcChRrZXlfaW5mb3JtYXRpb25fbGluaxgJIAMoCRIQCghrZXl3b3JkcxgKIAMoCRIdChV0cmFuc2Zlcl9yZXN0cmljdGlvbnMYCyADKAkSGwoTbGVkZ2VyX3JlcXVpcmVtZW50cxgMIAMoCSIJCgdQYXlsb2FkIk4KGFdyYXBBc3NlcnRpb25DbGFpbUZvcm1hdBIyCgZmb3JtYXQYASABKA4yIi5jYWN0aS5zYXRwLnYwMi5jb21tb24uQ2xhaW1Gb3JtYXQiTgoYTG9ja0Fzc2VydGlvbkNsYWltRm9ybWF0EjIKBmZvcm1hdBgBIAEoDjIiLmNhY3RpLnNhdHAudjAyLmNvbW1vbi5DbGFpbUZvcm1hdCJOChhNaW50QXNzZXJ0aW9uQ2xhaW1Gb3JtYXQSMgoGZm9ybWF0GAEgASgOMiIuY2FjdGkuc2F0cC52MDIuY29tbW9uLkNsYWltRm9ybWF0Ik4KGEJ1cm5Bc3NlcnRpb25DbGFpbUZvcm1hdBIyCgZmb3JtYXQYASABKA4yIi5jYWN0aS5zYXRwLnYwMi5jb21tb24uQ2xhaW1Gb3JtYXQiVAoeQXNzaWdubWVudEFzc2VydGlvbkNsYWltRm9ybWF0EjIKBmZvcm1hdBgBIAEoDjIiLmNhY3RpLnNhdHAudjAyLmNvbW1vbi5DbGFpbUZvcm1hdCJHChJMb2NrQXNzZXJ0aW9uQ2xhaW0SDwoHcmVjZWlwdBgBIAEoCRINCgVwcm9vZhgCIAEoCRIRCglzaWduYXR1cmUYAyABKAkiRwoSTWludEFzc2VydGlvbkNsYWltEg8KB3JlY2VpcHQYASABKAkSDQoFcHJvb2YYAiABKAkSEQoJc2lnbmF0dXJlGAMgASgJIkcKEkJ1cm5Bc3NlcnRpb25DbGFpbRIPCgdyZWNlaXB0GAEgASgJEg0KBXByb29mGAIgASgJEhEKCXNpZ25hdHVyZRgDIAEoCSJNChhBc3NpZ25tZW50QXNzZXJ0aW9uQ2xhaW0SDwoHcmVjZWlwdBgBIAEoCRINCgVwcm9vZhgCIAEoCRIRCglzaWduYXR1cmUYAyABKAkiRwoSV3JhcEFzc2VydGlvbkNsYWltEg8KB3JlY2VpcHQYASABKAkSDQoFcHJvb2YYAiABKAkSEQoJc2lnbmF0dXJlGAMgASgJItcBCgVBc3NldBIQCgh0b2tlbl9pZBgBIAEoCRI0Cgp0b2tlbl90eXBlGAIgASgOMiAuY2FjdGkuc2F0cC52MDIuY29tbW9uLlRva2VuVHlwZRINCgVvd25lchgDIAEoCRIOCgZhbW91bnQYBCABKAQSEAoIb250b2xvZ3kYBSABKAkSFQoNY29udHJhY3RfbmFtZRgHIAEoCRIYChBjb250cmFjdF9hZGRyZXNzGAYgASgJEg4KBm1zcF9pZBgIIAEoCRIUCgxjaGFubmVsX25hbWUYCSABKAkqQQoGU1RBVFVTEhYKElNUQVRVU19VTlNQRUNJRklFRBAAEg0KCVNUQVRVU19PSxABEhAKDFNUQVRVU19FUlJPUhACKvQGCgtNZXNzYWdlVHlwZRIcChhNRVNTQUdFX1RZUEVfVU5TUEVDSUZJRUQQABIiCh5NRVNTQUdFX1RZUEVfUFJFX0lOSVRfUFJPUE9TQUwQARIhCh1NRVNTQUdFX1RZUEVfUFJFX0lOSVRfUkVDRUlQVBACEiAKHE1FU1NBR0VfVFlQRV9QUkVfSU5JVF9SRUpFQ1QQAxIuCipNRVNTQUdFX1RZUEVfUFJFX1RSQU5TRkVSX0NPTU1FTkNFX1JFUVVFU1QQBBIvCitNRVNTQUdFX1RZUEVfUFJFX1RSQU5TRkVSX0NPTU1FTkNFX1JFU1BPTlNFEAUSHgoaTUVTU0FHRV9UWVBFX0lOSVRfUFJPUE9TQUwQBhIdChlNRVNTQUdFX1RZUEVfSU5JVF9SRUNFSVBUEAcSHAoYTUVTU0FHRV9UWVBFX0lOSVRfUkVKRUNUEAgSKgomTUVTU0FHRV9UWVBFX1RSQU5TRkVSX0NPTU1FTkNFX1JFUVVFU1QQCRIrCidNRVNTQUdFX1RZUEVfVFJBTlNGRVJfQ09NTUVOQ0VfUkVTUE9OU0UQChIcChhNRVNTQUdFX1RZUEVfTE9DS19BU1NFUlQQCxIiCh5NRVNTQUdFX1RZUEVfQVNTRVJUSU9OX1JFQ0VJUFQQDBIfChtNRVNTQUdFX1RZUEVfQ09NTUlUX1BSRVBBUkUQDRIdChlNRVNTQUdFX1RZUEVfQ09NTUlUX1JFQURZEA4SHQoZTUVTU0FHRV9UWVBFX0NPTU1JVF9GSU5BTBAPEiEKHU1FU1NBR0VfVFlQRV9BQ0tfQ09NTUlUX0ZJTkFMEBASKQolTUVTU0FHRV9UWVBFX0NPTU1JVF9UUkFOU0ZFUl9DT01QTEVURRAREiQKIE1FU1NBR0VfVFlQRV9ORVdfU0VTU0lPTl9SRVFVRVNUEBISJQohTUVTU0FHRV9UWVBFX05FV19TRVNTSU9OX1JFU1BPTlNFEBMSKgomTUVTU0FHRV9UWVBFX1BSRV9TQVRQX1RSQU5TRkVSX1JFUVVFU1QQFBIrCidNRVNTQUdFX1RZUEVfUFJFX1NBVFBfVFJBTlNGRVJfUkVTUE9OU0UQFRIyCi5NRVNTQUdFX1RZUEVfQ09NTUlUX1RSQU5TRkVSX0NPTVBMRVRFX1JFU1BPTlNFEBYqjwEKEUNyZWRlbnRpYWxQcm9maWxlEiIKHkNSRURFTlRJQUxfUFJPRklMRV9VTlNQRUNJRklFRBAAEhsKF0NSRURFTlRJQUxfUFJPRklMRV9TQU1MEAESHAoYQ1JFREVOVElBTF9QUk9GSUxFX09BVVRIEAISGwoXQ1JFREVOVElBTF9QUk9GSUxFX1g1MDkQAyrzAQoSU2lnbmF0dXJlQWxnb3JpdGhtEiMKH1NJR05BVFVSRV9BTEdPUklUSE1fVU5TUEVDSUZJRUQQABIbChdTSUdOQVRVUkVfQUxHT1JJVEhNX1JTQRABEh0KGVNJR05BVFVSRV9BTEdPUklUSE1fRUNEU0EQAhIbChdTSUdOQVRVUkVfQUxHT1JJVEhNX0RTQRADEhwKGFNJR05BVFVSRV9BTEdPUklUSE1fSE1BQxAEEiIKHlNJR05BVFVSRV9BTEdPUklUSE1fUlNBU1NBX1BTUxAFEh0KGVNJR05BVFVSRV9BTEdPUklUSE1fRUREU0EQBiq8AQoITG9ja1R5cGUSGQoVTE9DS19UWVBFX1VOU1BFQ0lGSUVEEAASFAoQTE9DS19UWVBFX0ZBVUNFVBABEhYKEkxPQ0tfVFlQRV9USU1FTE9DSxACEhYKEkxPQ0tfVFlQRV9IQVNITE9DSxADEhoKFkxPQ0tfVFlQRV9IQVNITE9DS1RJTUUQBBIYChRMT0NLX1RZUEVfTVVMVElDTEFJTRAFEhkKFUxPQ0tfVFlQRV9ERVNUUk9ZQlVSThAGKo0KCgVFcnJvchIVChFFUlJPUl9VTlNQRUNJRklFRBAAEiAKHEVSUk9SX0JBRExZX0ZPUk1BVEVEX01FU1NBR0UQARIdChlFUlJPUl9JTkNPUlJFQ1RfUEFSQU1FVEVSEAISFgoSRVJST1JfQUNLX01JU01BVENIEAMSJgoiRVJST1JfQkFETFlfRk9STUFURURfTUVTU0FHRV9DTEFJTRAEEi4KKkVSUk9SX0JBRExZX0ZPUk1BVEVEX01FU1NBR0VfQkFEX1NJR05BVFVSRRAFEjUKMUVSUk9SX0JBRExZX0ZPUk1BVEVEX01FU1NBR0VfV1JPTkdfVFJBTlNBQ1RJT05fSUQQBhI1CjFFUlJPUl9CQURMWV9GT1JNQVRFRF9NRVNTQUdFX01JU01BVENIX0hBU0hfVkFMVUVTEAcSKQolRVJST1JfRVhQSVJFRF9TSUdOSU5HX0tFWV9DRVJUSUZJQ0FURRAIEhcKE0VSUk9SX0VYUElSRURfQ0xBSU0QCRIhCh1FUlJPUl9NRVNTQUdFX09VVF9PRl9TRVFVRU5DRRAKEhsKF0VSUk9SX1NFU1NJT05fTk9UX0ZPVU5EEAsSHgoaRVJST1JfU0VTU0lPTl9JRF9OT1RfRk9VTkQQDBIeChpFUlJPUl9QVUJMSUNfS0VZX05PVF9GT1VORBANEi0KKUVSUk9SX1NFTkRFUl9HQVRFV0FZX05FVFdPUktfSURfTk9UX0ZPVU5EEA4SJAogRVJST1JfQ09NTU9OX0JPRFlfQkFETFlfRk9STUFURUQQDxIcChhFUlJPUl9TRVNTSU9OX01JU1NfTUFUQ0gQEBIpCiVFUlJPUl9TRVNTSU9OX0RBVEFfTE9BREVEX0lOQ09SUkVDVExZEBESIAocRVJST1JfU0VTU0lPTl9EQVRBX05PVF9GT1VORBASEhsKF0VSUk9SX1NFU1NJT05fQ09NUExFVEVEEBMSGwoXRVJST1JfTUlTU0lOR19QQVJBTUVURVIQFBIkCiBFUlJPUl9TQVRQX1ZFUlNJT05fTk9UX1NVUFBPUlRFRBAVEicKI0VSUk9SX1NJR05BVFVSRV9WRVJJRklDQVRJT05fRkFJTEVEEBYSGwoXRVJST1JfRExUX05PVF9TVVBQT1JURUQQFxIZChVFUlJPUl9IQVNIX01JU1NfTUFUQ0gQGBIfChtFUlJPUl9DT05URVhUX0lEX01JU1NfTUFUQ0gQGRIYChRFUlJPUl9CUklER0VfUFJPQkxFTRAaEicKI0VSUk9SX0xPQ0tfQVNTRVJUSU9OX0JBRExZX0ZPUk1BVEVEEBsSLQopRVJST1JfTE9DS19BU1NFUlRJT05fQ0xBSU1fRk9STUFUX01JU1NJTkcQHBIpCiVFUlJPUl9MT0NLX0FTU0VSVElPTl9FWFBJUkFUSU9OX0VSUk9SEB0SJwojRVJST1JfQlVSTl9BU1NFUlRJT05fQkFETFlfRk9STUFURUQQHhInCiNFUlJPUl9NSU5UX0FTU0VSVElPTl9CQURMWV9GT1JNQVRFRBAfEi0KKUVSUk9SX0FTU0lHTk1FTlRfQVNTRVJUSU9OX0JBRExZX0ZPUk1BVEVEECASIQodRVJST1JfT05UT0xPR1lfQkFETFlfRk9STUFURUQQIRInCiNFUlJPUl9XUkFQX0FTU0VSVElPTl9CQURMWV9GT1JNQVRFRBAiKiYKC0NsYWltRm9ybWF0EgsKB0RFRkFVTFQQABIKCgZCVU5HRUUQASpsCglUb2tlblR5cGUSFAoQVE9LRU5fVFlQRV9FUkMyMBAAEhUKEVRPS0VOX1RZUEVfRVJDNzIxEAESFgoSVE9LRU5fVFlQRV9FUkMxMTU1EAISGgoWVE9LRU5fVFlQRV9OT05TVEFOREFSRBADYgZwcm90bzM");

/**
 * TODO: define the common parameters to every protocol message
 *
 * @generated from message cacti.satp.v02.common.MessageCore
 */
export type MessageCore = Message<"cacti.satp.v02.common.MessageCore"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message cacti.satp.v02.common.MessageCore.
 * Use `create(MessageCoreSchema)` to create a new message.
 */
export const MessageCoreSchema: GenMessage<MessageCore> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 0);

/**
 * TODO: define the common parameters to every rollback message
 *
 * @generated from message cacti.satp.v02.common.RollbackMessageCore
 */
export type RollbackMessageCore = Message<"cacti.satp.v02.common.RollbackMessageCore"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message cacti.satp.v02.common.RollbackMessageCore.
 * Use `create(RollbackMessageCoreSchema)` to create a new message.
 */
export const RollbackMessageCoreSchema: GenMessage<RollbackMessageCore> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 1);

/**
 * @generated from message cacti.satp.v02.common.Ack
 */
export type Ack = Message<"cacti.satp.v02.common.Ack"> & {
  /**
   * @generated from field: cacti.satp.v02.common.STATUS status = 1;
   */
  status: STATUS;
};

/**
 * Describes the message cacti.satp.v02.common.Ack.
 * Use `create(AckSchema)` to create a new message.
 */
export const AckSchema: GenMessage<Ack> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 2);

/**
 * @generated from message cacti.satp.v02.common.TransferClaims
 */
export type TransferClaims = Message<"cacti.satp.v02.common.TransferClaims"> & {
  /**
   * @generated from field: string digital_asset_id = 1;
   */
  digitalAssetId: string;

  /**
   * @generated from field: string asset_profile_id = 2;
   */
  assetProfileId: string;

  /**
   * @generated from field: string verified_originator_entity_id = 3;
   */
  verifiedOriginatorEntityId: string;

  /**
   * @generated from field: string verified_beneficiary_entity_id = 4;
   */
  verifiedBeneficiaryEntityId: string;

  /**
   * @generated from field: string originator_pubkey = 5;
   */
  originatorPubkey: string;

  /**
   * @generated from field: string beneficiary_pubkey = 6;
   */
  beneficiaryPubkey: string;

  /**
   * @generated from field: string sender_gateway_network_id = 7;
   */
  senderGatewayNetworkId: string;

  /**
   * @generated from field: string recipient_gateway_network_id = 8;
   */
  recipientGatewayNetworkId: string;

  /**
   * @generated from field: string client_gateway_pubkey = 9;
   */
  clientGatewayPubkey: string;

  /**
   * @generated from field: string server_gateway_pubkey = 10;
   */
  serverGatewayPubkey: string;

  /**
   * @generated from field: string sender_gateway_owner_id = 11;
   */
  senderGatewayOwnerId: string;

  /**
   * @generated from field: string receiver_gateway_owner_id = 12;
   */
  receiverGatewayOwnerId: string;

  /**
   * @generated from field: uint32 max_retries = 13;
   */
  maxRetries: number;

  /**
   * @generated from field: uint64 max_timeout = 14;
   */
  maxTimeout: bigint;

  /**
   * @generated from field: string amount_from_originator = 15;
   */
  amountFromOriginator: string;

  /**
   * @generated from field: string amount_to_beneficiary = 16;
   */
  amountToBeneficiary: string;

  /**
   * @generated from field: repeated cacti.satp.v02.common.PrivacyPolicy processPolicies = 17;
   */
  processPolicies: PrivacyPolicy[];

  /**
   * @generated from field: repeated cacti.satp.v02.common.PrivacyPolicy mergePolicies = 18;
   */
  mergePolicies: PrivacyPolicy[];
};

/**
 * Describes the message cacti.satp.v02.common.TransferClaims.
 * Use `create(TransferClaimsSchema)` to create a new message.
 */
export const TransferClaimsSchema: GenMessage<TransferClaims> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 3);

/**
 * @generated from message cacti.satp.v02.common.TransferClaimsFormat
 */
export type TransferClaimsFormat = Message<"cacti.satp.v02.common.TransferClaimsFormat"> & {
};

/**
 * Describes the message cacti.satp.v02.common.TransferClaimsFormat.
 * Use `create(TransferClaimsFormatSchema)` to create a new message.
 */
export const TransferClaimsFormatSchema: GenMessage<TransferClaimsFormat> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 4);

/**
 * @generated from message cacti.satp.v02.common.PrivacyPolicy
 */
export type PrivacyPolicy = Message<"cacti.satp.v02.common.PrivacyPolicy"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated string arguments = 2;
   */
  arguments: string[];
};

/**
 * Describes the message cacti.satp.v02.common.PrivacyPolicy.
 * Use `create(PrivacyPolicySchema)` to create a new message.
 */
export const PrivacyPolicySchema: GenMessage<PrivacyPolicy> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 5);

/**
 * @generated from message cacti.satp.v02.common.Permissions
 */
export type Permissions = Message<"cacti.satp.v02.common.Permissions"> & {
};

/**
 * Describes the message cacti.satp.v02.common.Permissions.
 * Use `create(PermissionsSchema)` to create a new message.
 */
export const PermissionsSchema: GenMessage<Permissions> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 6);

/**
 * @generated from message cacti.satp.v02.common.SubsequentCalls
 */
export type SubsequentCalls = Message<"cacti.satp.v02.common.SubsequentCalls"> & {
};

/**
 * Describes the message cacti.satp.v02.common.SubsequentCalls.
 * Use `create(SubsequentCallsSchema)` to create a new message.
 */
export const SubsequentCallsSchema: GenMessage<SubsequentCalls> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 7);

/**
 * @generated from message cacti.satp.v02.common.History
 */
export type History = Message<"cacti.satp.v02.common.History"> & {
  /**
   * @generated from field: repeated cacti.satp.v02.common.Transaction transactions = 1;
   */
  transactions: Transaction[];

  /**
   * @generated from field: repeated cacti.satp.v02.common.ActionCategory action_categories = 2;
   */
  actionCategories: ActionCategory[];

  /**
   * @generated from field: string origin = 3;
   */
  origin: string;

  /**
   * @generated from field: string destination = 4;
   */
  destination: string;

  /**
   * @generated from field: string balance = 5;
   */
  balance: string;

  /**
   * @generated from field: cacti.satp.v02.common.STATUS status = 6;
   */
  status: STATUS;

  /**
   * @generated from field: cacti.satp.v02.common.ApplicationParameters application_parameters = 7;
   */
  applicationParameters?: ApplicationParameters;
};

/**
 * Describes the message cacti.satp.v02.common.History.
 * Use `create(HistorySchema)` to create a new message.
 */
export const HistorySchema: GenMessage<History> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 8);

/**
 * @generated from message cacti.satp.v02.common.ActionCategory
 */
export type ActionCategory = Message<"cacti.satp.v02.common.ActionCategory"> & {
};

/**
 * Describes the message cacti.satp.v02.common.ActionCategory.
 * Use `create(ActionCategorySchema)` to create a new message.
 */
export const ActionCategorySchema: GenMessage<ActionCategory> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 9);

/**
 * @generated from message cacti.satp.v02.common.Transaction
 */
export type Transaction = Message<"cacti.satp.v02.common.Transaction"> & {
};

/**
 * Describes the message cacti.satp.v02.common.Transaction.
 * Use `create(TransactionSchema)` to create a new message.
 */
export const TransactionSchema: GenMessage<Transaction> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 10);

/**
 * @generated from message cacti.satp.v02.common.ApplicationParameters
 */
export type ApplicationParameters = Message<"cacti.satp.v02.common.ApplicationParameters"> & {
};

/**
 * Describes the message cacti.satp.v02.common.ApplicationParameters.
 * Use `create(ApplicationParametersSchema)` to create a new message.
 */
export const ApplicationParametersSchema: GenMessage<ApplicationParameters> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 11);

/**
 * @generated from message cacti.satp.v02.common.NetworkCapabilities
 */
export type NetworkCapabilities = Message<"cacti.satp.v02.common.NetworkCapabilities"> & {
  /**
   * @generated from field: string sender_gateway_network_id = 1;
   */
  senderGatewayNetworkId: string;

  /**
   * @generated from field: cacti.satp.v02.common.SignatureAlgorithm signature_algorithm = 2;
   */
  signatureAlgorithm: SignatureAlgorithm;

  /**
   * @generated from field: repeated cacti.satp.v02.common.SignatureAlgorithm supported_signature_algorithms = 3;
   */
  supportedSignatureAlgorithms: SignatureAlgorithm[];

  /**
   * @generated from field: cacti.satp.v02.common.LockType lock_type = 4;
   */
  lockType: LockType;

  /**
   * @generated from field: uint64 lock_expiration_time = 5;
   */
  lockExpirationTime: bigint;

  /**
   * @generated from field: cacti.satp.v02.common.Permissions permissions = 6;
   */
  permissions?: Permissions;

  /**
   * @generated from field: string developer_urn = 7;
   */
  developerUrn: string;

  /**
   * @generated from field: cacti.satp.v02.common.CredentialProfile credential_profile = 8;
   */
  credentialProfile: CredentialProfile;

  /**
   * @generated from field: string application_profile = 9;
   */
  applicationProfile: string;

  /**
   * @generated from field: string logging_profile = 10;
   */
  loggingProfile: string;

  /**
   * @generated from field: string access_control_profile = 11;
   */
  accessControlProfile: string;

  /**
   * @generated from field: cacti.satp.v02.common.SubsequentCalls subsequent_calls = 12;
   */
  subsequentCalls?: SubsequentCalls;

  /**
   * @generated from field: repeated cacti.satp.v02.common.History history = 13;
   */
  history: History[];
};

/**
 * Describes the message cacti.satp.v02.common.NetworkCapabilities.
 * Use `create(NetworkCapabilitiesSchema)` to create a new message.
 */
export const NetworkCapabilitiesSchema: GenMessage<NetworkCapabilities> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 12);

/**
 * @generated from message cacti.satp.v02.common.CommonSatp
 */
export type CommonSatp = Message<"cacti.satp.v02.common.CommonSatp"> & {
  /**
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * @generated from field: cacti.satp.v02.common.MessageType message_type = 2;
   */
  messageType: MessageType;

  /**
   * @generated from field: string session_id = 3;
   */
  sessionId: string;

  /**
   * @generated from field: string transfer_context_id = 4;
   */
  transferContextId: string;

  /**
   * @generated from field: uint64 sequence_number = 5;
   */
  sequenceNumber: bigint;

  /**
   * @generated from field: string resource_url = 6;
   */
  resourceUrl: string;

  /**
   * @generated from field: cacti.satp.v02.common.ActionResponse action_response = 8;
   */
  actionResponse?: ActionResponse;

  /**
   * @generated from field: string credential_block = 10;
   */
  credentialBlock: string;

  /**
   * @generated from field: cacti.satp.v02.common.PayloadProfile payload_profile = 11;
   */
  payloadProfile?: PayloadProfile;

  /**
   * @generated from field: cacti.satp.v02.common.Payload payload = 13;
   */
  payload?: Payload;

  /**
   * @generated from field: string payload_hash = 14;
   */
  payloadHash: string;

  /**
   * @generated from field: string client_gateway_pubkey = 15;
   */
  clientGatewayPubkey: string;

  /**
   * @generated from field: string server_gateway_pubkey = 16;
   */
  serverGatewayPubkey: string;

  /**
   * @generated from field: string hash_previous_message = 17;
   */
  hashPreviousMessage: string;

  /**
   * @generated from field: bool error = 18;
   */
  error: boolean;

  /**
   * @generated from field: cacti.satp.v02.common.Error error_code = 19;
   */
  errorCode: Error;
};

/**
 * Describes the message cacti.satp.v02.common.CommonSatp.
 * Use `create(CommonSatpSchema)` to create a new message.
 */
export const CommonSatpSchema: GenMessage<CommonSatp> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 13);

/**
 * @generated from message cacti.satp.v02.common.ActionResponse
 */
export type ActionResponse = Message<"cacti.satp.v02.common.ActionResponse"> & {
};

/**
 * Describes the message cacti.satp.v02.common.ActionResponse.
 * Use `create(ActionResponseSchema)` to create a new message.
 */
export const ActionResponseSchema: GenMessage<ActionResponse> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 14);

/**
 * @generated from message cacti.satp.v02.common.PayloadProfile
 */
export type PayloadProfile = Message<"cacti.satp.v02.common.PayloadProfile"> & {
  /**
   * @generated from field: cacti.satp.v02.common.AssetProfile asset_profile = 1;
   */
  assetProfile?: AssetProfile;

  /**
   * @generated from field: string capabilities = 2;
   */
  capabilities: string;
};

/**
 * Describes the message cacti.satp.v02.common.PayloadProfile.
 * Use `create(PayloadProfileSchema)` to create a new message.
 */
export const PayloadProfileSchema: GenMessage<PayloadProfile> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 15);

/**
 * @generated from message cacti.satp.v02.common.AssetProfile
 */
export type AssetProfile = Message<"cacti.satp.v02.common.AssetProfile"> & {
  /**
   * @generated from field: string issuer = 1;
   */
  issuer: string;

  /**
   * @generated from field: string asset_code = 2;
   */
  assetCode: string;

  /**
   * @generated from field: string asset_code_type = 3;
   */
  assetCodeType: string;

  /**
   * @generated from field: string issuance_date = 4;
   */
  issuanceDate: string;

  /**
   * @generated from field: string expiration_date = 5;
   */
  expirationDate: string;

  /**
   * @generated from field: string verification_end_point = 6;
   */
  verificationEndPoint: string;

  /**
   * @generated from field: string digital_signature = 7;
   */
  digitalSignature: string;

  /**
   * @generated from field: string prospectus_link = 8;
   */
  prospectusLink: string;

  /**
   * @generated from field: repeated string key_information_link = 9;
   */
  keyInformationLink: string[];

  /**
   * @generated from field: repeated string keywords = 10;
   */
  keywords: string[];

  /**
   * @generated from field: repeated string transfer_restrictions = 11;
   */
  transferRestrictions: string[];

  /**
   * @generated from field: repeated string ledger_requirements = 12;
   */
  ledgerRequirements: string[];
};

/**
 * Describes the message cacti.satp.v02.common.AssetProfile.
 * Use `create(AssetProfileSchema)` to create a new message.
 */
export const AssetProfileSchema: GenMessage<AssetProfile> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 16);

/**
 * @generated from message cacti.satp.v02.common.Payload
 */
export type Payload = Message<"cacti.satp.v02.common.Payload"> & {
};

/**
 * Describes the message cacti.satp.v02.common.Payload.
 * Use `create(PayloadSchema)` to create a new message.
 */
export const PayloadSchema: GenMessage<Payload> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 17);

/**
 * @generated from message cacti.satp.v02.common.WrapAssertionClaimFormat
 */
export type WrapAssertionClaimFormat = Message<"cacti.satp.v02.common.WrapAssertionClaimFormat"> & {
  /**
   * @generated from field: cacti.satp.v02.common.ClaimFormat format = 1;
   */
  format: ClaimFormat;
};

/**
 * Describes the message cacti.satp.v02.common.WrapAssertionClaimFormat.
 * Use `create(WrapAssertionClaimFormatSchema)` to create a new message.
 */
export const WrapAssertionClaimFormatSchema: GenMessage<WrapAssertionClaimFormat> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 18);

/**
 * @generated from message cacti.satp.v02.common.LockAssertionClaimFormat
 */
export type LockAssertionClaimFormat = Message<"cacti.satp.v02.common.LockAssertionClaimFormat"> & {
  /**
   * @generated from field: cacti.satp.v02.common.ClaimFormat format = 1;
   */
  format: ClaimFormat;
};

/**
 * Describes the message cacti.satp.v02.common.LockAssertionClaimFormat.
 * Use `create(LockAssertionClaimFormatSchema)` to create a new message.
 */
export const LockAssertionClaimFormatSchema: GenMessage<LockAssertionClaimFormat> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 19);

/**
 * @generated from message cacti.satp.v02.common.MintAssertionClaimFormat
 */
export type MintAssertionClaimFormat = Message<"cacti.satp.v02.common.MintAssertionClaimFormat"> & {
  /**
   * @generated from field: cacti.satp.v02.common.ClaimFormat format = 1;
   */
  format: ClaimFormat;
};

/**
 * Describes the message cacti.satp.v02.common.MintAssertionClaimFormat.
 * Use `create(MintAssertionClaimFormatSchema)` to create a new message.
 */
export const MintAssertionClaimFormatSchema: GenMessage<MintAssertionClaimFormat> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 20);

/**
 * @generated from message cacti.satp.v02.common.BurnAssertionClaimFormat
 */
export type BurnAssertionClaimFormat = Message<"cacti.satp.v02.common.BurnAssertionClaimFormat"> & {
  /**
   * @generated from field: cacti.satp.v02.common.ClaimFormat format = 1;
   */
  format: ClaimFormat;
};

/**
 * Describes the message cacti.satp.v02.common.BurnAssertionClaimFormat.
 * Use `create(BurnAssertionClaimFormatSchema)` to create a new message.
 */
export const BurnAssertionClaimFormatSchema: GenMessage<BurnAssertionClaimFormat> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 21);

/**
 * @generated from message cacti.satp.v02.common.AssignmentAssertionClaimFormat
 */
export type AssignmentAssertionClaimFormat = Message<"cacti.satp.v02.common.AssignmentAssertionClaimFormat"> & {
  /**
   * @generated from field: cacti.satp.v02.common.ClaimFormat format = 1;
   */
  format: ClaimFormat;
};

/**
 * Describes the message cacti.satp.v02.common.AssignmentAssertionClaimFormat.
 * Use `create(AssignmentAssertionClaimFormatSchema)` to create a new message.
 */
export const AssignmentAssertionClaimFormatSchema: GenMessage<AssignmentAssertionClaimFormat> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 22);

/**
 * @generated from message cacti.satp.v02.common.LockAssertionClaim
 */
export type LockAssertionClaim = Message<"cacti.satp.v02.common.LockAssertionClaim"> & {
  /**
   * @generated from field: string receipt = 1;
   */
  receipt: string;

  /**
   * @generated from field: string proof = 2;
   */
  proof: string;

  /**
   * @generated from field: string signature = 3;
   */
  signature: string;
};

/**
 * Describes the message cacti.satp.v02.common.LockAssertionClaim.
 * Use `create(LockAssertionClaimSchema)` to create a new message.
 */
export const LockAssertionClaimSchema: GenMessage<LockAssertionClaim> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 23);

/**
 * @generated from message cacti.satp.v02.common.MintAssertionClaim
 */
export type MintAssertionClaim = Message<"cacti.satp.v02.common.MintAssertionClaim"> & {
  /**
   * @generated from field: string receipt = 1;
   */
  receipt: string;

  /**
   * @generated from field: string proof = 2;
   */
  proof: string;

  /**
   * @generated from field: string signature = 3;
   */
  signature: string;
};

/**
 * Describes the message cacti.satp.v02.common.MintAssertionClaim.
 * Use `create(MintAssertionClaimSchema)` to create a new message.
 */
export const MintAssertionClaimSchema: GenMessage<MintAssertionClaim> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 24);

/**
 * @generated from message cacti.satp.v02.common.BurnAssertionClaim
 */
export type BurnAssertionClaim = Message<"cacti.satp.v02.common.BurnAssertionClaim"> & {
  /**
   * @generated from field: string receipt = 1;
   */
  receipt: string;

  /**
   * @generated from field: string proof = 2;
   */
  proof: string;

  /**
   * @generated from field: string signature = 3;
   */
  signature: string;
};

/**
 * Describes the message cacti.satp.v02.common.BurnAssertionClaim.
 * Use `create(BurnAssertionClaimSchema)` to create a new message.
 */
export const BurnAssertionClaimSchema: GenMessage<BurnAssertionClaim> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 25);

/**
 * @generated from message cacti.satp.v02.common.AssignmentAssertionClaim
 */
export type AssignmentAssertionClaim = Message<"cacti.satp.v02.common.AssignmentAssertionClaim"> & {
  /**
   * @generated from field: string receipt = 1;
   */
  receipt: string;

  /**
   * @generated from field: string proof = 2;
   */
  proof: string;

  /**
   * @generated from field: string signature = 3;
   */
  signature: string;
};

/**
 * Describes the message cacti.satp.v02.common.AssignmentAssertionClaim.
 * Use `create(AssignmentAssertionClaimSchema)` to create a new message.
 */
export const AssignmentAssertionClaimSchema: GenMessage<AssignmentAssertionClaim> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 26);

/**
 * @generated from message cacti.satp.v02.common.WrapAssertionClaim
 */
export type WrapAssertionClaim = Message<"cacti.satp.v02.common.WrapAssertionClaim"> & {
  /**
   * @generated from field: string receipt = 1;
   */
  receipt: string;

  /**
   * @generated from field: string proof = 2;
   */
  proof: string;

  /**
   * @generated from field: string signature = 3;
   */
  signature: string;
};

/**
 * Describes the message cacti.satp.v02.common.WrapAssertionClaim.
 * Use `create(WrapAssertionClaimSchema)` to create a new message.
 */
export const WrapAssertionClaimSchema: GenMessage<WrapAssertionClaim> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 27);

/**
 * @generated from message cacti.satp.v02.common.Asset
 */
export type Asset = Message<"cacti.satp.v02.common.Asset"> & {
  /**
   * @generated from field: string token_id = 1;
   */
  tokenId: string;

  /**
   * @generated from field: cacti.satp.v02.common.TokenType token_type = 2;
   */
  tokenType: TokenType;

  /**
   * @generated from field: string owner = 3;
   */
  owner: string;

  /**
   * @generated from field: uint64 amount = 4;
   */
  amount: bigint;

  /**
   * @generated from field: string ontology = 5;
   */
  ontology: string;

  /**
   * @generated from field: string contract_name = 7;
   */
  contractName: string;

  /**
   * besu
   *
   * @generated from field: string contract_address = 6;
   */
  contractAddress: string;

  /**
   * fabric
   *
   * @generated from field: string msp_id = 8;
   */
  mspId: string;

  /**
   * @generated from field: string channel_name = 9;
   */
  channelName: string;
};

/**
 * Describes the message cacti.satp.v02.common.Asset.
 * Use `create(AssetSchema)` to create a new message.
 */
export const AssetSchema: GenMessage<Asset> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_message, 28);

/**
 * @generated from enum cacti.satp.v02.common.STATUS
 */
export enum STATUS {
  /**
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  STATUS_UNSPECIFIED = 0,

  /**
   * @generated from enum value: STATUS_OK = 1;
   */
  STATUS_OK = 1,

  /**
   * @generated from enum value: STATUS_ERROR = 2;
   */
  STATUS_ERROR = 2,
}

/**
 * Describes the enum cacti.satp.v02.common.STATUS.
 */
export const STATUSSchema: GenEnum<STATUS> = /*@__PURE__*/
  enumDesc(file_cacti_satp_v02_common_message, 0);

/**
 * @generated from enum cacti.satp.v02.common.MessageType
 */
export enum MessageType {
  /**
   * @generated from enum value: MESSAGE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: MESSAGE_TYPE_PRE_INIT_PROPOSAL = 1;
   */
  PRE_INIT_PROPOSAL = 1,

  /**
   * @generated from enum value: MESSAGE_TYPE_PRE_INIT_RECEIPT = 2;
   */
  PRE_INIT_RECEIPT = 2,

  /**
   * @generated from enum value: MESSAGE_TYPE_PRE_INIT_REJECT = 3;
   */
  PRE_INIT_REJECT = 3,

  /**
   * @generated from enum value: MESSAGE_TYPE_PRE_TRANSFER_COMMENCE_REQUEST = 4;
   */
  PRE_TRANSFER_COMMENCE_REQUEST = 4,

  /**
   * @generated from enum value: MESSAGE_TYPE_PRE_TRANSFER_COMMENCE_RESPONSE = 5;
   */
  PRE_TRANSFER_COMMENCE_RESPONSE = 5,

  /**
   * @generated from enum value: MESSAGE_TYPE_INIT_PROPOSAL = 6;
   */
  INIT_PROPOSAL = 6,

  /**
   * @generated from enum value: MESSAGE_TYPE_INIT_RECEIPT = 7;
   */
  INIT_RECEIPT = 7,

  /**
   * @generated from enum value: MESSAGE_TYPE_INIT_REJECT = 8;
   */
  INIT_REJECT = 8,

  /**
   * @generated from enum value: MESSAGE_TYPE_TRANSFER_COMMENCE_REQUEST = 9;
   */
  TRANSFER_COMMENCE_REQUEST = 9,

  /**
   * @generated from enum value: MESSAGE_TYPE_TRANSFER_COMMENCE_RESPONSE = 10;
   */
  TRANSFER_COMMENCE_RESPONSE = 10,

  /**
   * @generated from enum value: MESSAGE_TYPE_LOCK_ASSERT = 11;
   */
  LOCK_ASSERT = 11,

  /**
   * @generated from enum value: MESSAGE_TYPE_ASSERTION_RECEIPT = 12;
   */
  ASSERTION_RECEIPT = 12,

  /**
   * @generated from enum value: MESSAGE_TYPE_COMMIT_PREPARE = 13;
   */
  COMMIT_PREPARE = 13,

  /**
   * @generated from enum value: MESSAGE_TYPE_COMMIT_READY = 14;
   */
  COMMIT_READY = 14,

  /**
   * @generated from enum value: MESSAGE_TYPE_COMMIT_FINAL = 15;
   */
  COMMIT_FINAL = 15,

  /**
   * @generated from enum value: MESSAGE_TYPE_ACK_COMMIT_FINAL = 16;
   */
  ACK_COMMIT_FINAL = 16,

  /**
   * @generated from enum value: MESSAGE_TYPE_COMMIT_TRANSFER_COMPLETE = 17;
   */
  COMMIT_TRANSFER_COMPLETE = 17,

  /**
   * @generated from enum value: MESSAGE_TYPE_NEW_SESSION_REQUEST = 18;
   */
  NEW_SESSION_REQUEST = 18,

  /**
   * @generated from enum value: MESSAGE_TYPE_NEW_SESSION_RESPONSE = 19;
   */
  NEW_SESSION_RESPONSE = 19,

  /**
   * @generated from enum value: MESSAGE_TYPE_PRE_SATP_TRANSFER_REQUEST = 20;
   */
  PRE_SATP_TRANSFER_REQUEST = 20,

  /**
   * @generated from enum value: MESSAGE_TYPE_PRE_SATP_TRANSFER_RESPONSE = 21;
   */
  PRE_SATP_TRANSFER_RESPONSE = 21,

  /**
   * @generated from enum value: MESSAGE_TYPE_COMMIT_TRANSFER_COMPLETE_RESPONSE = 22;
   */
  COMMIT_TRANSFER_COMPLETE_RESPONSE = 22,
}

/**
 * Describes the enum cacti.satp.v02.common.MessageType.
 */
export const MessageTypeSchema: GenEnum<MessageType> = /*@__PURE__*/
  enumDesc(file_cacti_satp_v02_common_message, 1);

/**
 * @generated from enum cacti.satp.v02.common.CredentialProfile
 */
export enum CredentialProfile {
  /**
   * @generated from enum value: CREDENTIAL_PROFILE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CREDENTIAL_PROFILE_SAML = 1;
   */
  SAML = 1,

  /**
   * @generated from enum value: CREDENTIAL_PROFILE_OAUTH = 2;
   */
  OAUTH = 2,

  /**
   * @generated from enum value: CREDENTIAL_PROFILE_X509 = 3;
   */
  X509 = 3,
}

/**
 * Describes the enum cacti.satp.v02.common.CredentialProfile.
 */
export const CredentialProfileSchema: GenEnum<CredentialProfile> = /*@__PURE__*/
  enumDesc(file_cacti_satp_v02_common_message, 2);

/**
 * @generated from enum cacti.satp.v02.common.SignatureAlgorithm
 */
export enum SignatureAlgorithm {
  /**
   * @generated from enum value: SIGNATURE_ALGORITHM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SIGNATURE_ALGORITHM_RSA = 1;
   */
  RSA = 1,

  /**
   * @generated from enum value: SIGNATURE_ALGORITHM_ECDSA = 2;
   */
  ECDSA = 2,

  /**
   * @generated from enum value: SIGNATURE_ALGORITHM_DSA = 3;
   */
  DSA = 3,

  /**
   * @generated from enum value: SIGNATURE_ALGORITHM_HMAC = 4;
   */
  HMAC = 4,

  /**
   * @generated from enum value: SIGNATURE_ALGORITHM_RSASSA_PSS = 5;
   */
  RSASSA_PSS = 5,

  /**
   * @generated from enum value: SIGNATURE_ALGORITHM_EDDSA = 6;
   */
  EDDSA = 6,
}

/**
 * Describes the enum cacti.satp.v02.common.SignatureAlgorithm.
 */
export const SignatureAlgorithmSchema: GenEnum<SignatureAlgorithm> = /*@__PURE__*/
  enumDesc(file_cacti_satp_v02_common_message, 3);

/**
 * @generated from enum cacti.satp.v02.common.LockType
 */
export enum LockType {
  /**
   * @generated from enum value: LOCK_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: LOCK_TYPE_FAUCET = 1;
   */
  FAUCET = 1,

  /**
   * @generated from enum value: LOCK_TYPE_TIMELOCK = 2;
   */
  TIMELOCK = 2,

  /**
   * @generated from enum value: LOCK_TYPE_HASHLOCK = 3;
   */
  HASHLOCK = 3,

  /**
   * @generated from enum value: LOCK_TYPE_HASHLOCKTIME = 4;
   */
  HASHLOCKTIME = 4,

  /**
   * @generated from enum value: LOCK_TYPE_MULTICLAIM = 5;
   */
  MULTICLAIM = 5,

  /**
   * @generated from enum value: LOCK_TYPE_DESTROYBURN = 6;
   */
  DESTROYBURN = 6,
}

/**
 * Describes the enum cacti.satp.v02.common.LockType.
 */
export const LockTypeSchema: GenEnum<LockType> = /*@__PURE__*/
  enumDesc(file_cacti_satp_v02_common_message, 4);

/**
 * @generated from enum cacti.satp.v02.common.Error
 */
export enum Error {
  /**
   * @generated from enum value: ERROR_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ERROR_BADLY_FORMATED_MESSAGE = 1;
   */
  BADLY_FORMATED_MESSAGE = 1,

  /**
   * @generated from enum value: ERROR_INCORRECT_PARAMETER = 2;
   */
  INCORRECT_PARAMETER = 2,

  /**
   * @generated from enum value: ERROR_ACK_MISMATCH = 3;
   */
  ACK_MISMATCH = 3,

  /**
   * @generated from enum value: ERROR_BADLY_FORMATED_MESSAGE_CLAIM = 4;
   */
  BADLY_FORMATED_MESSAGE_CLAIM = 4,

  /**
   * @generated from enum value: ERROR_BADLY_FORMATED_MESSAGE_BAD_SIGNATURE = 5;
   */
  BADLY_FORMATED_MESSAGE_BAD_SIGNATURE = 5,

  /**
   * @generated from enum value: ERROR_BADLY_FORMATED_MESSAGE_WRONG_TRANSACTION_ID = 6;
   */
  BADLY_FORMATED_MESSAGE_WRONG_TRANSACTION_ID = 6,

  /**
   * @generated from enum value: ERROR_BADLY_FORMATED_MESSAGE_MISMATCH_HASH_VALUES = 7;
   */
  BADLY_FORMATED_MESSAGE_MISMATCH_HASH_VALUES = 7,

  /**
   * @generated from enum value: ERROR_EXPIRED_SIGNING_KEY_CERTIFICATE = 8;
   */
  EXPIRED_SIGNING_KEY_CERTIFICATE = 8,

  /**
   * @generated from enum value: ERROR_EXPIRED_CLAIM = 9;
   */
  EXPIRED_CLAIM = 9,

  /**
   * @generated from enum value: ERROR_MESSAGE_OUT_OF_SEQUENCE = 10;
   */
  MESSAGE_OUT_OF_SEQUENCE = 10,

  /**
   * @generated from enum value: ERROR_SESSION_NOT_FOUND = 11;
   */
  SESSION_NOT_FOUND = 11,

  /**
   * @generated from enum value: ERROR_SESSION_ID_NOT_FOUND = 12;
   */
  SESSION_ID_NOT_FOUND = 12,

  /**
   * @generated from enum value: ERROR_PUBLIC_KEY_NOT_FOUND = 13;
   */
  PUBLIC_KEY_NOT_FOUND = 13,

  /**
   * @generated from enum value: ERROR_SENDER_GATEWAY_NETWORK_ID_NOT_FOUND = 14;
   */
  SENDER_GATEWAY_NETWORK_ID_NOT_FOUND = 14,

  /**
   * @generated from enum value: ERROR_COMMON_BODY_BADLY_FORMATED = 15;
   */
  COMMON_BODY_BADLY_FORMATED = 15,

  /**
   * @generated from enum value: ERROR_SESSION_MISS_MATCH = 16;
   */
  SESSION_MISS_MATCH = 16,

  /**
   * @generated from enum value: ERROR_SESSION_DATA_LOADED_INCORRECTLY = 17;
   */
  SESSION_DATA_LOADED_INCORRECTLY = 17,

  /**
   * @generated from enum value: ERROR_SESSION_DATA_NOT_FOUND = 18;
   */
  SESSION_DATA_NOT_FOUND = 18,

  /**
   * @generated from enum value: ERROR_SESSION_COMPLETED = 19;
   */
  SESSION_COMPLETED = 19,

  /**
   * @generated from enum value: ERROR_MISSING_PARAMETER = 20;
   */
  MISSING_PARAMETER = 20,

  /**
   * @generated from enum value: ERROR_SATP_VERSION_NOT_SUPPORTED = 21;
   */
  SATP_VERSION_NOT_SUPPORTED = 21,

  /**
   * @generated from enum value: ERROR_SIGNATURE_VERIFICATION_FAILED = 22;
   */
  SIGNATURE_VERIFICATION_FAILED = 22,

  /**
   * @generated from enum value: ERROR_DLT_NOT_SUPPORTED = 23;
   */
  DLT_NOT_SUPPORTED = 23,

  /**
   * @generated from enum value: ERROR_HASH_MISS_MATCH = 24;
   */
  HASH_MISS_MATCH = 24,

  /**
   * @generated from enum value: ERROR_CONTEXT_ID_MISS_MATCH = 25;
   */
  CONTEXT_ID_MISS_MATCH = 25,

  /**
   * @generated from enum value: ERROR_BRIDGE_PROBLEM = 26;
   */
  BRIDGE_PROBLEM = 26,

  /**
   * @generated from enum value: ERROR_LOCK_ASSERTION_BADLY_FORMATED = 27;
   */
  LOCK_ASSERTION_BADLY_FORMATED = 27,

  /**
   * @generated from enum value: ERROR_LOCK_ASSERTION_CLAIM_FORMAT_MISSING = 28;
   */
  LOCK_ASSERTION_CLAIM_FORMAT_MISSING = 28,

  /**
   * @generated from enum value: ERROR_LOCK_ASSERTION_EXPIRATION_ERROR = 29;
   */
  LOCK_ASSERTION_EXPIRATION_ERROR = 29,

  /**
   * @generated from enum value: ERROR_BURN_ASSERTION_BADLY_FORMATED = 30;
   */
  BURN_ASSERTION_BADLY_FORMATED = 30,

  /**
   * @generated from enum value: ERROR_MINT_ASSERTION_BADLY_FORMATED = 31;
   */
  MINT_ASSERTION_BADLY_FORMATED = 31,

  /**
   * @generated from enum value: ERROR_ASSIGNMENT_ASSERTION_BADLY_FORMATED = 32;
   */
  ASSIGNMENT_ASSERTION_BADLY_FORMATED = 32,

  /**
   * @generated from enum value: ERROR_ONTOLOGY_BADLY_FORMATED = 33;
   */
  ONTOLOGY_BADLY_FORMATED = 33,

  /**
   * @generated from enum value: ERROR_WRAP_ASSERTION_BADLY_FORMATED = 34;
   */
  WRAP_ASSERTION_BADLY_FORMATED = 34,
}

/**
 * Describes the enum cacti.satp.v02.common.Error.
 */
export const ErrorSchema: GenEnum<Error> = /*@__PURE__*/
  enumDesc(file_cacti_satp_v02_common_message, 5);

/**
 * @generated from enum cacti.satp.v02.common.ClaimFormat
 */
export enum ClaimFormat {
  /**
   * @generated from enum value: DEFAULT = 0;
   */
  DEFAULT = 0,

  /**
   * @generated from enum value: BUNGEE = 1;
   */
  BUNGEE = 1,
}

/**
 * Describes the enum cacti.satp.v02.common.ClaimFormat.
 */
export const ClaimFormatSchema: GenEnum<ClaimFormat> = /*@__PURE__*/
  enumDesc(file_cacti_satp_v02_common_message, 6);

/**
 * @generated from enum cacti.satp.v02.common.TokenType
 */
export enum TokenType {
  /**
   * @generated from enum value: TOKEN_TYPE_ERC20 = 0;
   */
  ERC20 = 0,

  /**
   * @generated from enum value: TOKEN_TYPE_ERC721 = 1;
   */
  ERC721 = 1,

  /**
   * @generated from enum value: TOKEN_TYPE_ERC1155 = 2;
   */
  ERC1155 = 2,

  /**
   * @generated from enum value: TOKEN_TYPE_NONSTANDARD = 3;
   */
  NONSTANDARD = 3,
}

/**
 * Describes the enum cacti.satp.v02.common.TokenType.
 */
export const TokenTypeSchema: GenEnum<TokenType> = /*@__PURE__*/
  enumDesc(file_cacti_satp_v02_common_message, 7);

