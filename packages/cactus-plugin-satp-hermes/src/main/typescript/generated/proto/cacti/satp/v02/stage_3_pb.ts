// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file cacti/satp/v02/stage_3.proto (package cacti.satp.v02, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { AssignmentAssertionClaim, AssignmentAssertionClaimFormat, BurnAssertionClaim, BurnAssertionClaimFormat, CommonSatp, MintAssertionClaim, MintAssertionClaimFormat } from "./common/message_pb";
import { file_cacti_satp_v02_common_message } from "./common/message_pb";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cacti/satp/v02/stage_3.proto.
 */
export const file_cacti_satp_v02_stage_3: GenFile = /*@__PURE__*/
  fileDesc("ChxjYWN0aS9zYXRwL3YwMi9zdGFnZV8zLnByb3RvEg5jYWN0aS5zYXRwLnYwMiKOAQofQ29tbWl0UHJlcGFyYXRpb25SZXF1ZXN0TWVzc2FnZRIxCgZjb21tb24YASABKAsyIS5jYWN0aS5zYXRwLnYwMi5jb21tb24uQ29tbW9uU2F0cBIeChZjbGllbnRfdHJhbnNmZXJfbnVtYmVyGAIgASgJEhgKEGNsaWVudF9zaWduYXR1cmUYAyABKAkiqAIKGkNvbW1pdFJlYWR5UmVzcG9uc2VNZXNzYWdlEjEKBmNvbW1vbhgBIAEoCzIhLmNhY3RpLnNhdHAudjAyLmNvbW1vbi5Db21tb25TYXRwEkcKFG1pbnRfYXNzZXJ0aW9uX2NsYWltGAIgASgLMikuY2FjdGkuc2F0cC52MDIuY29tbW9uLk1pbnRBc3NlcnRpb25DbGFpbRJUChttaW50X2Fzc2VydGlvbl9jbGFpbV9mb3JtYXQYAyABKAsyLy5jYWN0aS5zYXRwLnYwMi5jb21tb24uTWludEFzc2VydGlvbkNsYWltRm9ybWF0Eh4KFnNlcnZlcl90cmFuc2Zlcl9udW1iZXIYBCABKAkSGAoQc2VydmVyX3NpZ25hdHVyZRgFIAEoCSKwAgoiQ29tbWl0RmluYWxBc3NlcnRpb25SZXF1ZXN0TWVzc2FnZRIxCgZjb21tb24YASABKAsyIS5jYWN0aS5zYXRwLnYwMi5jb21tb24uQ29tbW9uU2F0cBJHChRidXJuX2Fzc2VydGlvbl9jbGFpbRgCIAEoCzIpLmNhY3RpLnNhdHAudjAyLmNvbW1vbi5CdXJuQXNzZXJ0aW9uQ2xhaW0SVAobYnVybl9hc3NlcnRpb25fY2xhaW1fZm9ybWF0GAMgASgLMi8uY2FjdGkuc2F0cC52MDIuY29tbW9uLkJ1cm5Bc3NlcnRpb25DbGFpbUZvcm1hdBIeChZjbGllbnRfdHJhbnNmZXJfbnVtYmVyGAQgASgJEhgKEGNsaWVudF9zaWduYXR1cmUYBSABKAki1gIKMENvbW1pdEZpbmFsQWNrbm93bGVkZ2VtZW50UmVjZWlwdFJlc3BvbnNlTWVzc2FnZRIxCgZjb21tb24YASABKAsyIS5jYWN0aS5zYXRwLnYwMi5jb21tb24uQ29tbW9uU2F0cBJTChphc3NpZ25tZW50X2Fzc2VydGlvbl9jbGFpbRgCIAEoCzIvLmNhY3RpLnNhdHAudjAyLmNvbW1vbi5Bc3NpZ25tZW50QXNzZXJ0aW9uQ2xhaW0SYAohYXNzaWdubWVudF9hc3NlcnRpb25fY2xhaW1fZm9ybWF0GAMgASgLMjUuY2FjdGkuc2F0cC52MDIuY29tbW9uLkFzc2lnbm1lbnRBc3NlcnRpb25DbGFpbUZvcm1hdBIeChZzZXJ2ZXJfdHJhbnNmZXJfbnVtYmVyGAQgASgJEhgKEHNlcnZlcl9zaWduYXR1cmUYBSABKAkirQEKHlRyYW5zZmVyQ29tcGxldGVSZXF1ZXN0TWVzc2FnZRIxCgZjb21tb24YASABKAsyIS5jYWN0aS5zYXRwLnYwMi5jb21tb24uQ29tbW9uU2F0cBIeChZoYXNoX3RyYW5zZmVyX2NvbW1lbmNlGAIgASgJEh4KFmNsaWVudF90cmFuc2Zlcl9udW1iZXIYAyABKAkSGAoQY2xpZW50X3NpZ25hdHVyZRgEIAEoCSKOAQofVHJhbnNmZXJDb21wbGV0ZVJlc3BvbnNlTWVzc2FnZRIxCgZjb21tb24YASABKAsyIS5jYWN0aS5zYXRwLnYwMi5jb21tb24uQ29tbW9uU2F0cBIeChZzZXJ2ZXJfdHJhbnNmZXJfbnVtYmVyGAIgASgJEhgKEHNlcnZlcl9zaWduYXR1cmUYAyABKAkyjwMKEVNhdHBTdGFnZTNTZXJ2aWNlEnIKEUNvbW1pdFByZXBhcmF0aW9uEi8uY2FjdGkuc2F0cC52MDIuQ29tbWl0UHJlcGFyYXRpb25SZXF1ZXN0TWVzc2FnZRoqLmNhY3RpLnNhdHAudjAyLkNvbW1pdFJlYWR5UmVzcG9uc2VNZXNzYWdlIgASjgEKFENvbW1pdEZpbmFsQXNzZXJ0aW9uEjIuY2FjdGkuc2F0cC52MDIuQ29tbWl0RmluYWxBc3NlcnRpb25SZXF1ZXN0TWVzc2FnZRpALmNhY3RpLnNhdHAudjAyLkNvbW1pdEZpbmFsQWNrbm93bGVkZ2VtZW50UmVjZWlwdFJlc3BvbnNlTWVzc2FnZSIAEnUKEFRyYW5zZmVyQ29tcGxldGUSLi5jYWN0aS5zYXRwLnYwMi5UcmFuc2ZlckNvbXBsZXRlUmVxdWVzdE1lc3NhZ2UaLy5jYWN0aS5zYXRwLnYwMi5UcmFuc2ZlckNvbXBsZXRlUmVzcG9uc2VNZXNzYWdlIgBiBnByb3RvMw", [file_cacti_satp_v02_common_message, file_google_protobuf_empty]);

/**
 * @generated from message cacti.satp.v02.CommitPreparationRequestMessage
 */
export type CommitPreparationRequestMessage = Message<"cacti.satp.v02.CommitPreparationRequestMessage"> & {
  /**
   * @generated from field: cacti.satp.v02.common.CommonSatp common = 1;
   */
  common?: CommonSatp;

  /**
   * @generated from field: string client_transfer_number = 2;
   */
  clientTransferNumber: string;

  /**
   * @generated from field: string client_signature = 3;
   */
  clientSignature: string;
};

/**
 * Describes the message cacti.satp.v02.CommitPreparationRequestMessage.
 * Use `create(CommitPreparationRequestMessageSchema)` to create a new message.
 */
export const CommitPreparationRequestMessageSchema: GenMessage<CommitPreparationRequestMessage> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_stage_3, 0);

/**
 * @generated from message cacti.satp.v02.CommitReadyResponseMessage
 */
export type CommitReadyResponseMessage = Message<"cacti.satp.v02.CommitReadyResponseMessage"> & {
  /**
   * @generated from field: cacti.satp.v02.common.CommonSatp common = 1;
   */
  common?: CommonSatp;

  /**
   * @generated from field: cacti.satp.v02.common.MintAssertionClaim mint_assertion_claim = 2;
   */
  mintAssertionClaim?: MintAssertionClaim;

  /**
   * @generated from field: cacti.satp.v02.common.MintAssertionClaimFormat mint_assertion_claim_format = 3;
   */
  mintAssertionClaimFormat?: MintAssertionClaimFormat;

  /**
   * @generated from field: string server_transfer_number = 4;
   */
  serverTransferNumber: string;

  /**
   * @generated from field: string server_signature = 5;
   */
  serverSignature: string;
};

/**
 * Describes the message cacti.satp.v02.CommitReadyResponseMessage.
 * Use `create(CommitReadyResponseMessageSchema)` to create a new message.
 */
export const CommitReadyResponseMessageSchema: GenMessage<CommitReadyResponseMessage> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_stage_3, 1);

/**
 * @generated from message cacti.satp.v02.CommitFinalAssertionRequestMessage
 */
export type CommitFinalAssertionRequestMessage = Message<"cacti.satp.v02.CommitFinalAssertionRequestMessage"> & {
  /**
   * @generated from field: cacti.satp.v02.common.CommonSatp common = 1;
   */
  common?: CommonSatp;

  /**
   * @generated from field: cacti.satp.v02.common.BurnAssertionClaim burn_assertion_claim = 2;
   */
  burnAssertionClaim?: BurnAssertionClaim;

  /**
   * @generated from field: cacti.satp.v02.common.BurnAssertionClaimFormat burn_assertion_claim_format = 3;
   */
  burnAssertionClaimFormat?: BurnAssertionClaimFormat;

  /**
   * @generated from field: string client_transfer_number = 4;
   */
  clientTransferNumber: string;

  /**
   * @generated from field: string client_signature = 5;
   */
  clientSignature: string;
};

/**
 * Describes the message cacti.satp.v02.CommitFinalAssertionRequestMessage.
 * Use `create(CommitFinalAssertionRequestMessageSchema)` to create a new message.
 */
export const CommitFinalAssertionRequestMessageSchema: GenMessage<CommitFinalAssertionRequestMessage> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_stage_3, 2);

/**
 * @generated from message cacti.satp.v02.CommitFinalAcknowledgementReceiptResponseMessage
 */
export type CommitFinalAcknowledgementReceiptResponseMessage = Message<"cacti.satp.v02.CommitFinalAcknowledgementReceiptResponseMessage"> & {
  /**
   * @generated from field: cacti.satp.v02.common.CommonSatp common = 1;
   */
  common?: CommonSatp;

  /**
   * @generated from field: cacti.satp.v02.common.AssignmentAssertionClaim assignment_assertion_claim = 2;
   */
  assignmentAssertionClaim?: AssignmentAssertionClaim;

  /**
   * @generated from field: cacti.satp.v02.common.AssignmentAssertionClaimFormat assignment_assertion_claim_format = 3;
   */
  assignmentAssertionClaimFormat?: AssignmentAssertionClaimFormat;

  /**
   * @generated from field: string server_transfer_number = 4;
   */
  serverTransferNumber: string;

  /**
   * @generated from field: string server_signature = 5;
   */
  serverSignature: string;
};

/**
 * Describes the message cacti.satp.v02.CommitFinalAcknowledgementReceiptResponseMessage.
 * Use `create(CommitFinalAcknowledgementReceiptResponseMessageSchema)` to create a new message.
 */
export const CommitFinalAcknowledgementReceiptResponseMessageSchema: GenMessage<CommitFinalAcknowledgementReceiptResponseMessage> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_stage_3, 3);

/**
 * @generated from message cacti.satp.v02.TransferCompleteRequestMessage
 */
export type TransferCompleteRequestMessage = Message<"cacti.satp.v02.TransferCompleteRequestMessage"> & {
  /**
   * @generated from field: cacti.satp.v02.common.CommonSatp common = 1;
   */
  common?: CommonSatp;

  /**
   * @generated from field: string hash_transfer_commence = 2;
   */
  hashTransferCommence: string;

  /**
   * @generated from field: string client_transfer_number = 3;
   */
  clientTransferNumber: string;

  /**
   * @generated from field: string client_signature = 4;
   */
  clientSignature: string;
};

/**
 * Describes the message cacti.satp.v02.TransferCompleteRequestMessage.
 * Use `create(TransferCompleteRequestMessageSchema)` to create a new message.
 */
export const TransferCompleteRequestMessageSchema: GenMessage<TransferCompleteRequestMessage> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_stage_3, 4);

/**
 * @generated from message cacti.satp.v02.TransferCompleteResponseMessage
 */
export type TransferCompleteResponseMessage = Message<"cacti.satp.v02.TransferCompleteResponseMessage"> & {
  /**
   * @generated from field: cacti.satp.v02.common.CommonSatp common = 1;
   */
  common?: CommonSatp;

  /**
   * @generated from field: string server_transfer_number = 2;
   */
  serverTransferNumber: string;

  /**
   * @generated from field: string server_signature = 3;
   */
  serverSignature: string;
};

/**
 * Describes the message cacti.satp.v02.TransferCompleteResponseMessage.
 * Use `create(TransferCompleteResponseMessageSchema)` to create a new message.
 */
export const TransferCompleteResponseMessageSchema: GenMessage<TransferCompleteResponseMessage> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_stage_3, 5);

/**
 * @generated from service cacti.satp.v02.SatpStage3Service
 */
export const SatpStage3Service: GenService<{
  /**
   * @generated from rpc cacti.satp.v02.SatpStage3Service.CommitPreparation
   */
  commitPreparation: {
    methodKind: "unary";
    input: typeof CommitPreparationRequestMessageSchema;
    output: typeof CommitReadyResponseMessageSchema;
  },
  /**
   * @generated from rpc cacti.satp.v02.SatpStage3Service.CommitFinalAssertion
   */
  commitFinalAssertion: {
    methodKind: "unary";
    input: typeof CommitFinalAssertionRequestMessageSchema;
    output: typeof CommitFinalAcknowledgementReceiptResponseMessageSchema;
  },
  /**
   * @generated from rpc cacti.satp.v02.SatpStage3Service.TransferComplete
   */
  transferComplete: {
    methodKind: "unary";
    input: typeof TransferCompleteRequestMessageSchema;
    output: typeof TransferCompleteResponseMessageSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cacti_satp_v02_stage_3, 0);

