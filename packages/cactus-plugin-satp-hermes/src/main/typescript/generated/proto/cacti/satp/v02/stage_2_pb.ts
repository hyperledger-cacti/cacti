// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file cacti/satp/v02/stage_2.proto (package cacti.satp.v02, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { CommonSatp, LockAssertionClaim, LockAssertionFormat } from "./common/message_pb.js";

/**
 * @generated from message cacti.satp.v02.LockAssertionRequestMessage
 */
export class LockAssertionRequestMessage extends Message<LockAssertionRequestMessage> {
  /**
   * @generated from field: cacti.satp.v02.common.CommonSatp common = 1;
   */
  common?: CommonSatp;

  /**
   * @generated from field: cacti.satp.v02.common.LockAssertionClaim lock_assertion_claim = 2;
   */
  lockAssertionClaim?: LockAssertionClaim;

  /**
   * @generated from field: cacti.satp.v02.common.LockAssertionFormat lock_assertion_format = 3;
   */
  lockAssertionFormat?: LockAssertionFormat;

  /**
   * @generated from field: string lock_assertion_expiration = 4;
   */
  lockAssertionExpiration = "";

  /**
   * @generated from field: string client_transfer_number = 5;
   */
  clientTransferNumber = "";

  /**
   * @generated from field: string client_signature = 6;
   */
  clientSignature = "";

  constructor(data?: PartialMessage<LockAssertionRequestMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.LockAssertionRequestMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "common", kind: "message", T: CommonSatp },
    { no: 2, name: "lock_assertion_claim", kind: "message", T: LockAssertionClaim },
    { no: 3, name: "lock_assertion_format", kind: "message", T: LockAssertionFormat },
    { no: 4, name: "lock_assertion_expiration", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "client_transfer_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "client_signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LockAssertionRequestMessage {
    return new LockAssertionRequestMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LockAssertionRequestMessage {
    return new LockAssertionRequestMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LockAssertionRequestMessage {
    return new LockAssertionRequestMessage().fromJsonString(jsonString, options);
  }

  static equals(a: LockAssertionRequestMessage | PlainMessage<LockAssertionRequestMessage> | undefined, b: LockAssertionRequestMessage | PlainMessage<LockAssertionRequestMessage> | undefined): boolean {
    return proto3.util.equals(LockAssertionRequestMessage, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.LockAssertionReceiptMessage
 */
export class LockAssertionReceiptMessage extends Message<LockAssertionReceiptMessage> {
  /**
   * @generated from field: cacti.satp.v02.common.CommonSatp common = 1;
   */
  common?: CommonSatp;

  /**
   * @generated from field: string server_transfer_number = 2;
   */
  serverTransferNumber = "";

  /**
   * @generated from field: string server_signature = 3;
   */
  serverSignature = "";

  constructor(data?: PartialMessage<LockAssertionReceiptMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.LockAssertionReceiptMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "common", kind: "message", T: CommonSatp },
    { no: 2, name: "server_transfer_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "server_signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LockAssertionReceiptMessage {
    return new LockAssertionReceiptMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LockAssertionReceiptMessage {
    return new LockAssertionReceiptMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LockAssertionReceiptMessage {
    return new LockAssertionReceiptMessage().fromJsonString(jsonString, options);
  }

  static equals(a: LockAssertionReceiptMessage | PlainMessage<LockAssertionReceiptMessage> | undefined, b: LockAssertionReceiptMessage | PlainMessage<LockAssertionReceiptMessage> | undefined): boolean {
    return proto3.util.equals(LockAssertionReceiptMessage, a, b);
  }
}

