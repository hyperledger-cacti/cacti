// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file cacti/satp/v02/common/session.proto (package cacti.satp.v02.common, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message cacti.satp.v02.common.SendStatusRequest
 */
export class SendStatusRequest extends Message<SendStatusRequest> {
  /**
   * @generated from field: string status = 1;
   */
  status = "";

  /**
   * @generated from field: bool hasBackup = 2;
   */
  hasBackup = false;

  constructor(data?: PartialMessage<SendStatusRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.common.SendStatusRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "hasBackup", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendStatusRequest {
    return new SendStatusRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendStatusRequest {
    return new SendStatusRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendStatusRequest {
    return new SendStatusRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendStatusRequest | PlainMessage<SendStatusRequest> | undefined, b: SendStatusRequest | PlainMessage<SendStatusRequest> | undefined): boolean {
    return proto3.util.equals(SendStatusRequest, a, b);
  }
}

/**
 * @generated from message cacti.satp.v02.common.SendStatusResponse
 */
export class SendStatusResponse extends Message<SendStatusResponse> {
  /**
   * @generated from field: string status = 1;
   */
  status = "";

  /**
   * @generated from field: bool hasBackup = 2;
   */
  hasBackup = false;

  constructor(data?: PartialMessage<SendStatusResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cacti.satp.v02.common.SendStatusResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "hasBackup", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendStatusResponse {
    return new SendStatusResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendStatusResponse {
    return new SendStatusResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendStatusResponse {
    return new SendStatusResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendStatusResponse | PlainMessage<SendStatusResponse> | undefined, b: SendStatusResponse | PlainMessage<SendStatusResponse> | undefined): boolean {
    return proto3.util.equals(SendStatusResponse, a, b);
  }
}

