// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file cacti/satp/v02/common/session.proto (package cacti.satp.v02.common, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { EmptySchema } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty } from "@bufbuild/protobuf/wkt";
import type { AckSchema, Asset, AssetProfile, AssignmentAssertionClaim, AssignmentAssertionClaimFormat, BurnAssertionClaim, BurnAssertionClaimFormat, CredentialProfile, Error, History, LockAssertionClaim, LockAssertionClaimFormat, LockType, MessageCoreSchema, MessageType, MintAssertionClaim, MintAssertionClaimFormat, PayloadProfile, Permissions, RollbackMessageCoreSchema, SignatureAlgorithm, SubsequentCalls, TransferClaims, TransferClaimsFormat, WrapAssertionClaim } from "./message_pb";
import { file_cacti_satp_v02_common_message } from "./message_pb";
import type { NewSessionRequestMessage, NewSessionResponseMessage, PreSATPTransferRequestMessage, PreSATPTransferResponseMessage } from "../stage_0_pb";
import { file_cacti_satp_v02_stage_0 } from "../stage_0_pb";
import type { TransferCommenceRequestMessage, TransferCommenceResponseMessage, TransferProposalReceiptMessage, TransferProposalRequestMessage } from "../stage_1_pb";
import { file_cacti_satp_v02_stage_1 } from "../stage_1_pb";
import type { LockAssertionReceiptMessage, LockAssertionRequestMessage } from "../stage_2_pb";
import { file_cacti_satp_v02_stage_2 } from "../stage_2_pb";
import type { CommitFinalAcknowledgementReceiptResponseMessage, CommitFinalAssertionRequestMessage, CommitPreparationRequestMessage, CommitReadyResponseMessage, TransferCompleteRequestMessage, TransferCompleteResponseMessage } from "../stage_3_pb";
import { file_cacti_satp_v02_stage_3 } from "../stage_3_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cacti/satp/v02/common/session.proto.
 */
export const file_cacti_satp_v02_common_session: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_empty, file_cacti_satp_v02_common_message, file_cacti_satp_v02_stage_0, file_cacti_satp_v02_stage_1, file_cacti_satp_v02_stage_2, file_cacti_satp_v02_stage_3]);

/**
 * @generated from message cacti.satp.v02.common.SessionData
 */
export type SessionData = Message<"cacti.satp.v02.common.SessionData"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: string transfer_context_id = 3;
   */
  transferContextId: string;

  /**
   * @generated from field: cacti.satp.v02.common.MessageStagesHashes hashes = 4;
   */
  hashes?: MessageStagesHashes;

  /**
   * @generated from field: cacti.satp.v02.common.PayloadProfile payload_profile = 5;
   */
  payloadProfile?: PayloadProfile;

  /**
   * @generated from field: cacti.satp.v02.common.MessageStagesSignatures signatures = 6;
   */
  signatures?: MessageStagesSignatures;

  /**
   * @generated from field: string max_retries = 7;
   */
  maxRetries: string;

  /**
   * @generated from field: string max_timeout = 8;
   */
  maxTimeout: string;

  /**
   * @generated from field: string logging_profile = 9;
   */
  loggingProfile: string;

  /**
   * @generated from field: string recipient_base_path = 10;
   */
  recipientBasePath: string;

  /**
   * @generated from field: string source_base_path = 11;
   */
  sourceBasePath: string;

  /**
   * @generated from field: string access_control_profile = 12;
   */
  accessControlProfile: string;

  /**
   * @generated from field: string application_profile = 13;
   */
  applicationProfile: string;

  /**
   * @generated from field: int64 last_sequence_number = 14;
   */
  lastSequenceNumber: bigint;

  /**
   * @generated from field: string sender_gateway_network_id = 15;
   */
  senderGatewayNetworkId: string;

  /**
   * @generated from field: string recipient_gateway_network_id = 16;
   */
  recipientGatewayNetworkId: string;

  /**
   * @generated from field: string source_ledger_asset_id = 17;
   */
  sourceLedgerAssetId: string;

  /**
   * @generated from field: string recipient_ledger_asset_id = 18;
   */
  recipientLedgerAssetId: string;

  /**
   * @generated from field: string server_gateway_pubkey = 19;
   */
  serverGatewayPubkey: string;

  /**
   * @generated from field: string client_gateway_pubkey = 20;
   */
  clientGatewayPubkey: string;

  /**
   * @generated from field: string verified_originator_entity_id = 21;
   */
  verifiedOriginatorEntityId: string;

  /**
   * @generated from field: string verified_beneficiary_entity_id = 22;
   */
  verifiedBeneficiaryEntityId: string;

  /**
   * @generated from field: string asset_profile_id = 23;
   */
  assetProfileId: string;

  /**
   * @generated from field: string digital_asset_id = 24;
   */
  digitalAssetId: string;

  /**
   * @generated from field: string originator_pubkey = 25;
   */
  originatorPubkey: string;

  /**
   * @generated from field: string beneficiary_pubkey = 26;
   */
  beneficiaryPubkey: string;

  /**
   * @generated from field: string sender_gateway_owner_id = 27;
   */
  senderGatewayOwnerId: string;

  /**
   * @generated from field: string receiver_gateway_owner_id = 28;
   */
  receiverGatewayOwnerId: string;

  /**
   * @generated from field: string hash_transfer_init_claims = 29;
   */
  hashTransferInitClaims: string;

  /**
   * @generated from field: cacti.satp.v02.common.TransferClaims transfer_init_claims = 30;
   */
  transferInitClaims?: TransferClaims;

  /**
   * @generated from field: string proposed_transfer_init_claims = 31;
   */
  proposedTransferInitClaims: string;

  /**
   * @generated from field: cacti.satp.v02.common.SignatureAlgorithm signature_algorithm = 32;
   */
  signatureAlgorithm: SignatureAlgorithm;

  /**
   * @generated from field: cacti.satp.v02.common.LockType lock_type = 33;
   */
  lockType: LockType;

  /**
   * @generated from field: uint64 lock_expiration_time = 34;
   */
  lockExpirationTime: bigint;

  /**
   * @generated from field: cacti.satp.v02.common.Permissions permissions = 35;
   */
  permissions?: Permissions;

  /**
   * @generated from field: string developer_urn = 36;
   */
  developerUrn: string;

  /**
   * @generated from field: cacti.satp.v02.common.CredentialProfile credential_profile = 37;
   */
  credentialProfile: CredentialProfile;

  /**
   * @generated from field: cacti.satp.v02.common.SubsequentCalls subsequent_calls = 38;
   */
  subsequentCalls?: SubsequentCalls;

  /**
   * @generated from field: repeated cacti.satp.v02.common.History history = 39;
   */
  history: History[];

  /**
   * @generated from field: bool multiple_claims_allowed = 40;
   */
  multipleClaimsAllowed: boolean;

  /**
   * @generated from field: bool multiple_cancels_allowed = 41;
   */
  multipleCancelsAllowed: boolean;

  /**
   * @generated from field: string last_message_received_timestamp = 42;
   */
  lastMessageReceivedTimestamp: string;

  /**
   * @generated from field: cacti.satp.v02.common.MessageStagesTimestamps processed_timestamps = 43;
   */
  processedTimestamps?: MessageStagesTimestamps;

  /**
   * @generated from field: cacti.satp.v02.common.MessageStagesTimestamps received_timestamps = 44;
   */
  receivedTimestamps?: MessageStagesTimestamps;

  /**
   * @generated from field: cacti.satp.v02.common.LockAssertionClaim lock_assertion_claim = 45;
   */
  lockAssertionClaim?: LockAssertionClaim;

  /**
   * @generated from field: cacti.satp.v02.common.LockAssertionClaimFormat lock_assertion_claim_format = 46;
   */
  lockAssertionClaimFormat?: LockAssertionClaimFormat;

  /**
   * @generated from field: cacti.satp.v02.common.MintAssertionClaim mint_assertion_claim = 47;
   */
  mintAssertionClaim?: MintAssertionClaim;

  /**
   * @generated from field: cacti.satp.v02.common.MintAssertionClaimFormat mint_assertion_claim_format = 48;
   */
  mintAssertionClaimFormat?: MintAssertionClaimFormat;

  /**
   * @generated from field: cacti.satp.v02.common.BurnAssertionClaim burn_assertion_claim = 49;
   */
  burnAssertionClaim?: BurnAssertionClaim;

  /**
   * @generated from field: cacti.satp.v02.common.BurnAssertionClaimFormat burn_assertion_claim_format = 50;
   */
  burnAssertionClaimFormat?: BurnAssertionClaimFormat;

  /**
   * @generated from field: cacti.satp.v02.common.AssignmentAssertionClaim assignment_assertion_claim = 51;
   */
  assignmentAssertionClaim?: AssignmentAssertionClaim;

  /**
   * @generated from field: cacti.satp.v02.common.AssignmentAssertionClaimFormat assignment_assertion_claim_format = 52;
   */
  assignmentAssertionClaimFormat?: AssignmentAssertionClaimFormat;

  /**
   * @generated from field: string last_message_hash = 53;
   */
  lastMessageHash: string;

  /**
   * @generated from field: cacti.satp.v02.common.TransferClaimsFormat transfer_claims_format = 54;
   */
  transferClaimsFormat?: TransferClaimsFormat;

  /**
   * @generated from field: string client_transfer_number = 55;
   */
  clientTransferNumber: string;

  /**
   * @generated from field: string server_transfer_number = 56;
   */
  serverTransferNumber: string;

  /**
   * @generated from field: uint64 lock_assertion_expiration = 57;
   */
  lockAssertionExpiration: bigint;

  /**
   * @generated from field: cacti.satp.v02.common.AssetProfile asset_profile = 58;
   */
  assetProfile?: AssetProfile;

  /**
   * @generated from field: string sender_contract_ontology = 59;
   */
  senderContractOntology: string;

  /**
   * @generated from field: string receiver_contract_ontology = 60;
   */
  receiverContractOntology: string;

  /**
   * @generated from field: string resource_url = 61;
   */
  resourceUrl: string;

  /**
   * @generated from field: cacti.satp.v02.common.WrapAssertionClaim sender_wrap_assertion_claim = 62;
   */
  senderWrapAssertionClaim?: WrapAssertionClaim;

  /**
   * @generated from field: cacti.satp.v02.common.WrapAssertionClaim receiver_wrap_assertion_claim = 63;
   */
  receiverWrapAssertionClaim?: WrapAssertionClaim;

  /**
   * @generated from field: cacti.satp.v02.common.Asset sender_asset = 64;
   */
  senderAsset?: Asset;

  /**
   * @generated from field: cacti.satp.v02.common.Asset receiver_asset = 65;
   */
  receiverAsset?: Asset;

  /**
   * @generated from field: cacti.satp.v02.common.State state = 66;
   */
  state: State;

  /**
   * @generated from field: cacti.satp.v02.common.Error error_code = 67;
   */
  errorCode: Error;

  /**
   * @generated from field: cacti.satp.v02.common.MessageType phase_error = 68;
   */
  phaseError: MessageType;

  /**
   * @generated from field: bool recovered_tried = 69;
   */
  recoveredTried: boolean;

  /**
   * @generated from field: cacti.satp.v02.common.SATPMessages satp_Messages = 70;
   */
  satpMessages?: SATPMessages;
};

/**
 * Describes the message cacti.satp.v02.common.SessionData.
 * Use `create(SessionDataSchema)` to create a new message.
 */
export const SessionDataSchema: GenMessage<SessionData> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 0);

/**
 * @generated from message cacti.satp.v02.common.SATPMessages
 */
export type SATPMessages = Message<"cacti.satp.v02.common.SATPMessages"> & {
  /**
   * @generated from field: cacti.satp.v02.common.Stage0Messages stage0 = 1;
   */
  stage0?: Stage0Messages;

  /**
   * @generated from field: cacti.satp.v02.common.Stage1Messages stage1 = 2;
   */
  stage1?: Stage1Messages;

  /**
   * @generated from field: cacti.satp.v02.common.Stage2Messages stage2 = 3;
   */
  stage2?: Stage2Messages;

  /**
   * @generated from field: cacti.satp.v02.common.Stage3Messages stage3 = 4;
   */
  stage3?: Stage3Messages;
};

/**
 * Describes the message cacti.satp.v02.common.SATPMessages.
 * Use `create(SATPMessagesSchema)` to create a new message.
 */
export const SATPMessagesSchema: GenMessage<SATPMessages> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 1);

/**
 * @generated from message cacti.satp.v02.common.Stage0Messages
 */
export type Stage0Messages = Message<"cacti.satp.v02.common.Stage0Messages"> & {
  /**
   * @generated from field: cacti.satp.v02.NewSessionRequestMessage new_session_request_message = 1;
   */
  newSessionRequestMessage?: NewSessionRequestMessage;

  /**
   * @generated from field: cacti.satp.v02.NewSessionResponseMessage new_session_response_message = 2;
   */
  newSessionResponseMessage?: NewSessionResponseMessage;

  /**
   * @generated from field: cacti.satp.v02.PreSATPTransferRequestMessage pre_satp_transfer_request_message = 3;
   */
  preSatpTransferRequestMessage?: PreSATPTransferRequestMessage;

  /**
   * @generated from field: cacti.satp.v02.PreSATPTransferResponseMessage pre_satp_transfer_response_message = 4;
   */
  preSatpTransferResponseMessage?: PreSATPTransferResponseMessage;
};

/**
 * Describes the message cacti.satp.v02.common.Stage0Messages.
 * Use `create(Stage0MessagesSchema)` to create a new message.
 */
export const Stage0MessagesSchema: GenMessage<Stage0Messages> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 2);

/**
 * @generated from message cacti.satp.v02.common.Stage1Messages
 */
export type Stage1Messages = Message<"cacti.satp.v02.common.Stage1Messages"> & {
  /**
   * @generated from field: cacti.satp.v02.TransferProposalRequestMessage transfer_proposal_request_message = 1;
   */
  transferProposalRequestMessage?: TransferProposalRequestMessage;

  /**
   * @generated from field: cacti.satp.v02.TransferProposalReceiptMessage transfer_proposal_receipt_message = 2;
   */
  transferProposalReceiptMessage?: TransferProposalReceiptMessage;

  /**
   * @generated from field: cacti.satp.v02.TransferCommenceRequestMessage transfer_commence_request_message = 4;
   */
  transferCommenceRequestMessage?: TransferCommenceRequestMessage;

  /**
   * @generated from field: cacti.satp.v02.TransferCommenceResponseMessage transfer_commence_response_message = 5;
   */
  transferCommenceResponseMessage?: TransferCommenceResponseMessage;
};

/**
 * Describes the message cacti.satp.v02.common.Stage1Messages.
 * Use `create(Stage1MessagesSchema)` to create a new message.
 */
export const Stage1MessagesSchema: GenMessage<Stage1Messages> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 3);

/**
 * @generated from message cacti.satp.v02.common.Stage2Messages
 */
export type Stage2Messages = Message<"cacti.satp.v02.common.Stage2Messages"> & {
  /**
   * @generated from field: cacti.satp.v02.LockAssertionRequestMessage lock_assertion_request_message = 1;
   */
  lockAssertionRequestMessage?: LockAssertionRequestMessage;

  /**
   * @generated from field: cacti.satp.v02.LockAssertionReceiptMessage lock_assertion_receipt_message = 2;
   */
  lockAssertionReceiptMessage?: LockAssertionReceiptMessage;
};

/**
 * Describes the message cacti.satp.v02.common.Stage2Messages.
 * Use `create(Stage2MessagesSchema)` to create a new message.
 */
export const Stage2MessagesSchema: GenMessage<Stage2Messages> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 4);

/**
 * @generated from message cacti.satp.v02.common.Stage3Messages
 */
export type Stage3Messages = Message<"cacti.satp.v02.common.Stage3Messages"> & {
  /**
   * @generated from field: cacti.satp.v02.CommitPreparationRequestMessage commit_preparation_request_message = 1;
   */
  commitPreparationRequestMessage?: CommitPreparationRequestMessage;

  /**
   * @generated from field: cacti.satp.v02.CommitReadyResponseMessage commit_ready_response_message = 2;
   */
  commitReadyResponseMessage?: CommitReadyResponseMessage;

  /**
   * @generated from field: cacti.satp.v02.CommitFinalAssertionRequestMessage commit_final_assertion_request_message = 3;
   */
  commitFinalAssertionRequestMessage?: CommitFinalAssertionRequestMessage;

  /**
   * @generated from field: cacti.satp.v02.CommitFinalAcknowledgementReceiptResponseMessage commit_final_acknowledgement_receipt_response_message = 4;
   */
  commitFinalAcknowledgementReceiptResponseMessage?: CommitFinalAcknowledgementReceiptResponseMessage;

  /**
   * @generated from field: cacti.satp.v02.TransferCompleteRequestMessage transfer_complete_message = 5;
   */
  transferCompleteMessage?: TransferCompleteRequestMessage;

  /**
   * @generated from field: cacti.satp.v02.TransferCompleteResponseMessage transfer_complete_response_message = 6;
   */
  transferCompleteResponseMessage?: TransferCompleteResponseMessage;
};

/**
 * Describes the message cacti.satp.v02.common.Stage3Messages.
 * Use `create(Stage3MessagesSchema)` to create a new message.
 */
export const Stage3MessagesSchema: GenMessage<Stage3Messages> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 5);

/**
 * @generated from message cacti.satp.v02.common.MessageStagesHashes
 */
export type MessageStagesHashes = Message<"cacti.satp.v02.common.MessageStagesHashes"> & {
  /**
   * @generated from field: cacti.satp.v02.common.Stage0Hashes stage0 = 1;
   */
  stage0?: Stage0Hashes;

  /**
   * @generated from field: cacti.satp.v02.common.Stage1Hashes stage1 = 2;
   */
  stage1?: Stage1Hashes;

  /**
   * @generated from field: cacti.satp.v02.common.Stage2Hashes stage2 = 3;
   */
  stage2?: Stage2Hashes;

  /**
   * @generated from field: cacti.satp.v02.common.Stage3Hashes stage3 = 4;
   */
  stage3?: Stage3Hashes;
};

/**
 * Describes the message cacti.satp.v02.common.MessageStagesHashes.
 * Use `create(MessageStagesHashesSchema)` to create a new message.
 */
export const MessageStagesHashesSchema: GenMessage<MessageStagesHashes> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 6);

/**
 * @generated from message cacti.satp.v02.common.Stage0Hashes
 */
export type Stage0Hashes = Message<"cacti.satp.v02.common.Stage0Hashes"> & {
  /**
   * @generated from field: string new_session_request_message_hash = 1;
   */
  newSessionRequestMessageHash: string;

  /**
   * @generated from field: string new_session_response_message_hash = 2;
   */
  newSessionResponseMessageHash: string;

  /**
   * @generated from field: string pre_satp_transfer_request_message_hash = 3;
   */
  preSatpTransferRequestMessageHash: string;

  /**
   * @generated from field: string pre_satp_transfer_response_message_hash = 4;
   */
  preSatpTransferResponseMessageHash: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage0Hashes.
 * Use `create(Stage0HashesSchema)` to create a new message.
 */
export const Stage0HashesSchema: GenMessage<Stage0Hashes> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 7);

/**
 * @generated from message cacti.satp.v02.common.Stage1Hashes
 */
export type Stage1Hashes = Message<"cacti.satp.v02.common.Stage1Hashes"> & {
  /**
   * @generated from field: string transfer_proposal_request_message_hash = 1;
   */
  transferProposalRequestMessageHash: string;

  /**
   * @generated from field: string transfer_proposal_receipt_message_hash = 2;
   */
  transferProposalReceiptMessageHash: string;

  /**
   * @generated from field: string transfer_proposal_reject_message_hash = 3;
   */
  transferProposalRejectMessageHash: string;

  /**
   * @generated from field: string transfer_commence_request_message_hash = 4;
   */
  transferCommenceRequestMessageHash: string;

  /**
   * @generated from field: string transfer_commence_response_message_hash = 5;
   */
  transferCommenceResponseMessageHash: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage1Hashes.
 * Use `create(Stage1HashesSchema)` to create a new message.
 */
export const Stage1HashesSchema: GenMessage<Stage1Hashes> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 8);

/**
 * @generated from message cacti.satp.v02.common.Stage2Hashes
 */
export type Stage2Hashes = Message<"cacti.satp.v02.common.Stage2Hashes"> & {
  /**
   * @generated from field: string lock_assertion_request_message_hash = 1;
   */
  lockAssertionRequestMessageHash: string;

  /**
   * @generated from field: string lock_assertion_receipt_message_hash = 2;
   */
  lockAssertionReceiptMessageHash: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage2Hashes.
 * Use `create(Stage2HashesSchema)` to create a new message.
 */
export const Stage2HashesSchema: GenMessage<Stage2Hashes> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 9);

/**
 * @generated from message cacti.satp.v02.common.Stage3Hashes
 */
export type Stage3Hashes = Message<"cacti.satp.v02.common.Stage3Hashes"> & {
  /**
   * @generated from field: string commit_preparation_request_message_hash = 1;
   */
  commitPreparationRequestMessageHash: string;

  /**
   * @generated from field: string commit_ready_response_message_hash = 2;
   */
  commitReadyResponseMessageHash: string;

  /**
   * @generated from field: string commit_final_assertion_request_message_hash = 3;
   */
  commitFinalAssertionRequestMessageHash: string;

  /**
   * @generated from field: string commit_final_acknowledgement_receipt_response_message_hash = 4;
   */
  commitFinalAcknowledgementReceiptResponseMessageHash: string;

  /**
   * @generated from field: string transfer_complete_message_hash = 5;
   */
  transferCompleteMessageHash: string;

  /**
   * @generated from field: string transfer_complete_response_message_hash = 6;
   */
  transferCompleteResponseMessageHash: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage3Hashes.
 * Use `create(Stage3HashesSchema)` to create a new message.
 */
export const Stage3HashesSchema: GenMessage<Stage3Hashes> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 10);

/**
 * @generated from message cacti.satp.v02.common.MessageStagesSignatures
 */
export type MessageStagesSignatures = Message<"cacti.satp.v02.common.MessageStagesSignatures"> & {
  /**
   * @generated from field: cacti.satp.v02.common.Stage0Signatures stage0 = 1;
   */
  stage0?: Stage0Signatures;

  /**
   * @generated from field: cacti.satp.v02.common.Stage1Signatures stage1 = 2;
   */
  stage1?: Stage1Signatures;

  /**
   * @generated from field: cacti.satp.v02.common.Stage2Signatures stage2 = 3;
   */
  stage2?: Stage2Signatures;

  /**
   * @generated from field: cacti.satp.v02.common.Stage3Signatures stage3 = 4;
   */
  stage3?: Stage3Signatures;
};

/**
 * Describes the message cacti.satp.v02.common.MessageStagesSignatures.
 * Use `create(MessageStagesSignaturesSchema)` to create a new message.
 */
export const MessageStagesSignaturesSchema: GenMessage<MessageStagesSignatures> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 11);

/**
 * @generated from message cacti.satp.v02.common.Stage0Signatures
 */
export type Stage0Signatures = Message<"cacti.satp.v02.common.Stage0Signatures"> & {
  /**
   * @generated from field: string new_session_request_message_signature = 1;
   */
  newSessionRequestMessageSignature: string;

  /**
   * @generated from field: string new_session_response_message_signature = 2;
   */
  newSessionResponseMessageSignature: string;

  /**
   * @generated from field: string pre_satp_transfer_request_message_signature = 3;
   */
  preSatpTransferRequestMessageSignature: string;

  /**
   * @generated from field: string pre_satp_transfer_response_message_signature = 4;
   */
  preSatpTransferResponseMessageSignature: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage0Signatures.
 * Use `create(Stage0SignaturesSchema)` to create a new message.
 */
export const Stage0SignaturesSchema: GenMessage<Stage0Signatures> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 12);

/**
 * @generated from message cacti.satp.v02.common.Stage1Signatures
 */
export type Stage1Signatures = Message<"cacti.satp.v02.common.Stage1Signatures"> & {
  /**
   * @generated from field: string transfer_proposal_request_message_signature = 1;
   */
  transferProposalRequestMessageSignature: string;

  /**
   * @generated from field: string transfer_proposal_receipt_message_signature = 2;
   */
  transferProposalReceiptMessageSignature: string;

  /**
   * @generated from field: string transfer_proposal_reject_message_signature = 3;
   */
  transferProposalRejectMessageSignature: string;

  /**
   * @generated from field: string transfer_commence_request_message_signature = 4;
   */
  transferCommenceRequestMessageSignature: string;

  /**
   * @generated from field: string transfer_commence_response_message_signature = 5;
   */
  transferCommenceResponseMessageSignature: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage1Signatures.
 * Use `create(Stage1SignaturesSchema)` to create a new message.
 */
export const Stage1SignaturesSchema: GenMessage<Stage1Signatures> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 13);

/**
 * @generated from message cacti.satp.v02.common.Stage2Signatures
 */
export type Stage2Signatures = Message<"cacti.satp.v02.common.Stage2Signatures"> & {
  /**
   * @generated from field: string lock_assertion_request_message_signature = 1;
   */
  lockAssertionRequestMessageSignature: string;

  /**
   * @generated from field: string lock_assertion_receipt_message_signature = 2;
   */
  lockAssertionReceiptMessageSignature: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage2Signatures.
 * Use `create(Stage2SignaturesSchema)` to create a new message.
 */
export const Stage2SignaturesSchema: GenMessage<Stage2Signatures> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 14);

/**
 * @generated from message cacti.satp.v02.common.Stage3Signatures
 */
export type Stage3Signatures = Message<"cacti.satp.v02.common.Stage3Signatures"> & {
  /**
   * @generated from field: string commit_preparation_request_message_signature = 1;
   */
  commitPreparationRequestMessageSignature: string;

  /**
   * @generated from field: string commit_ready_response_message_signature = 2;
   */
  commitReadyResponseMessageSignature: string;

  /**
   * @generated from field: string commit_final_assertion_request_message_signature = 3;
   */
  commitFinalAssertionRequestMessageSignature: string;

  /**
   * @generated from field: string commit_final_acknowledgement_receipt_response_message_signature = 4;
   */
  commitFinalAcknowledgementReceiptResponseMessageSignature: string;

  /**
   * @generated from field: string transfer_complete_message_signature = 5;
   */
  transferCompleteMessageSignature: string;

  /**
   * @generated from field: string transfer_complete_response_message_signature = 6;
   */
  transferCompleteResponseMessageSignature: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage3Signatures.
 * Use `create(Stage3SignaturesSchema)` to create a new message.
 */
export const Stage3SignaturesSchema: GenMessage<Stage3Signatures> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 15);

/**
 * @generated from message cacti.satp.v02.common.MessageStagesTimestamps
 */
export type MessageStagesTimestamps = Message<"cacti.satp.v02.common.MessageStagesTimestamps"> & {
  /**
   * @generated from field: cacti.satp.v02.common.Stage0Timestamps stage0 = 1;
   */
  stage0?: Stage0Timestamps;

  /**
   * @generated from field: cacti.satp.v02.common.Stage1Timestamps stage1 = 2;
   */
  stage1?: Stage1Timestamps;

  /**
   * @generated from field: cacti.satp.v02.common.Stage2Timestamps stage2 = 3;
   */
  stage2?: Stage2Timestamps;

  /**
   * @generated from field: cacti.satp.v02.common.Stage3Timestamps stage3 = 4;
   */
  stage3?: Stage3Timestamps;
};

/**
 * Describes the message cacti.satp.v02.common.MessageStagesTimestamps.
 * Use `create(MessageStagesTimestampsSchema)` to create a new message.
 */
export const MessageStagesTimestampsSchema: GenMessage<MessageStagesTimestamps> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 16);

/**
 * @generated from message cacti.satp.v02.common.Stage0Timestamps
 */
export type Stage0Timestamps = Message<"cacti.satp.v02.common.Stage0Timestamps"> & {
  /**
   * @generated from field: string new_session_request_message_timestamp = 1;
   */
  newSessionRequestMessageTimestamp: string;

  /**
   * @generated from field: string new_session_response_message_timestamp = 2;
   */
  newSessionResponseMessageTimestamp: string;

  /**
   * @generated from field: string pre_satp_transfer_request_message_timestamp = 3;
   */
  preSatpTransferRequestMessageTimestamp: string;

  /**
   * @generated from field: string pre_satp_transfer_response_message_timestamp = 4;
   */
  preSatpTransferResponseMessageTimestamp: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage0Timestamps.
 * Use `create(Stage0TimestampsSchema)` to create a new message.
 */
export const Stage0TimestampsSchema: GenMessage<Stage0Timestamps> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 17);

/**
 * @generated from message cacti.satp.v02.common.Stage1Timestamps
 */
export type Stage1Timestamps = Message<"cacti.satp.v02.common.Stage1Timestamps"> & {
  /**
   * @generated from field: string transfer_proposal_request_message_timestamp = 1;
   */
  transferProposalRequestMessageTimestamp: string;

  /**
   * @generated from field: string transfer_proposal_receipt_message_timestamp = 2;
   */
  transferProposalReceiptMessageTimestamp: string;

  /**
   * @generated from field: string transfer_proposal_reject_message_timestamp = 3;
   */
  transferProposalRejectMessageTimestamp: string;

  /**
   * @generated from field: string transfer_commence_request_message_timestamp = 4;
   */
  transferCommenceRequestMessageTimestamp: string;

  /**
   * @generated from field: string transfer_commence_response_message_timestamp = 5;
   */
  transferCommenceResponseMessageTimestamp: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage1Timestamps.
 * Use `create(Stage1TimestampsSchema)` to create a new message.
 */
export const Stage1TimestampsSchema: GenMessage<Stage1Timestamps> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 18);

/**
 * @generated from message cacti.satp.v02.common.Stage2Timestamps
 */
export type Stage2Timestamps = Message<"cacti.satp.v02.common.Stage2Timestamps"> & {
  /**
   * @generated from field: string lock_assertion_request_message_timestamp = 1;
   */
  lockAssertionRequestMessageTimestamp: string;

  /**
   * @generated from field: string lock_assertion_receipt_message_timestamp = 2;
   */
  lockAssertionReceiptMessageTimestamp: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage2Timestamps.
 * Use `create(Stage2TimestampsSchema)` to create a new message.
 */
export const Stage2TimestampsSchema: GenMessage<Stage2Timestamps> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 19);

/**
 * @generated from message cacti.satp.v02.common.Stage3Timestamps
 */
export type Stage3Timestamps = Message<"cacti.satp.v02.common.Stage3Timestamps"> & {
  /**
   * @generated from field: string commit_preparation_request_message_timestamp = 1;
   */
  commitPreparationRequestMessageTimestamp: string;

  /**
   * @generated from field: string commit_ready_response_message_timestamp = 2;
   */
  commitReadyResponseMessageTimestamp: string;

  /**
   * @generated from field: string commit_final_assertion_request_message_timestamp = 3;
   */
  commitFinalAssertionRequestMessageTimestamp: string;

  /**
   * @generated from field: string commit_final_acknowledgement_receipt_response_message_timestamp = 4;
   */
  commitFinalAcknowledgementReceiptResponseMessageTimestamp: string;

  /**
   * @generated from field: string transfer_complete_message_timestamp = 5;
   */
  transferCompleteMessageTimestamp: string;

  /**
   * @generated from field: string transfer_complete_response_message_timestamp = 6;
   */
  transferCompleteResponseMessageTimestamp: string;
};

/**
 * Describes the message cacti.satp.v02.common.Stage3Timestamps.
 * Use `create(Stage3TimestampsSchema)` to create a new message.
 */
export const Stage3TimestampsSchema: GenMessage<Stage3Timestamps> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 20);

/**
 * @generated from message cacti.satp.v02.common.SendStatusRequest
 */
export type SendStatusRequest = Message<"cacti.satp.v02.common.SendStatusRequest"> & {
  /**
   * @generated from field: string status = 1;
   */
  status: string;

  /**
   * @generated from field: bool has_backup = 2;
   */
  hasBackup: boolean;
};

/**
 * Describes the message cacti.satp.v02.common.SendStatusRequest.
 * Use `create(SendStatusRequestSchema)` to create a new message.
 */
export const SendStatusRequestSchema: GenMessage<SendStatusRequest> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 21);

/**
 * @generated from message cacti.satp.v02.common.SendStatusResponse
 */
export type SendStatusResponse = Message<"cacti.satp.v02.common.SendStatusResponse"> & {
  /**
   * @generated from field: string status = 1;
   */
  status: string;

  /**
   * @generated from field: bool has_backup = 2;
   */
  hasBackup: boolean;
};

/**
 * Describes the message cacti.satp.v02.common.SendStatusResponse.
 * Use `create(SendStatusResponseSchema)` to create a new message.
 */
export const SendStatusResponseSchema: GenMessage<SendStatusResponse> = /*@__PURE__*/
  messageDesc(file_cacti_satp_v02_common_session, 22);

/**
 * @generated from enum cacti.satp.v02.common.State
 */
export enum State {
  /**
   * @generated from enum value: STATE_UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: STATE_ONGOING = 1;
   */
  ONGOING = 1,

  /**
   * @generated from enum value: STATE_COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * @generated from enum value: STATE_REJECTED = 3;
   */
  REJECTED = 3,

  /**
   * @generated from enum value: STATE_CONDITIONAL_REJECTED = 4;
   */
  CONDITIONAL_REJECTED = 4,

  /**
   * @generated from enum value: STATE_ERROR = 5;
   */
  ERROR = 5,

  /**
   * @generated from enum value: STATE_RECOVERED = 6;
   */
  RECOVERED = 6,

  /**
   * @generated from enum value: STATE_RECOVERING = 7;
   */
  RECOVERING = 7,
}

/**
 * Describes the enum cacti.satp.v02.common.State.
 */
export const StateSchema: GenEnum<State> = /*@__PURE__*/
  enumDesc(file_cacti_satp_v02_common_session, 0);

/**
 * @generated from enum cacti.satp.v02.common.SATPStage
 */
export enum SATPStage {
  /**
   * @generated from enum value: STAGE_UNKNOWN = 0;
   */
  STAGE_UNKNOWN = 0,

  /**
   * @generated from enum value: STAGE_0 = 1;
   */
  STAGE_0 = 1,

  /**
   * @generated from enum value: STAGE_1 = 2;
   */
  STAGE_1 = 2,

  /**
   * @generated from enum value: STAGE_2 = 3;
   */
  STAGE_2 = 3,

  /**
   * @generated from enum value: STAGE_3 = 4;
   */
  STAGE_3 = 4,
}

/**
 * Describes the enum cacti.satp.v02.common.SATPStage.
 */
export const SATPStageSchema: GenEnum<SATPStage> = /*@__PURE__*/
  enumDesc(file_cacti_satp_v02_common_session, 1);

/**
 * @generated from service cacti.satp.v02.common.SessionStatusService
 */
export const SessionStatusService: GenService<{
  /**
   * @generated from rpc cacti.satp.v02.common.SessionStatusService.GetStatus
   */
  getStatus: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof SendStatusResponseSchema;
  },
  /**
   * @generated from rpc cacti.satp.v02.common.SessionStatusService.SendStatus
   */
  sendStatus: {
    methodKind: "unary";
    input: typeof SendStatusRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cacti_satp_v02_common_session, 0);

/**
 * TODO: define common RPC methods for each step. This is a draft
 *
 * @generated from service cacti.satp.v02.common.CommonService
 */
export const CommonService: GenService<{
  /**
   * @generated from rpc cacti.satp.v02.common.CommonService.Ping
   */
  ping: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof MessageCoreSchema;
  },
  /**
   * @generated from rpc cacti.satp.v02.common.CommonService.Rollback
   */
  rollback: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof RollbackMessageCoreSchema;
  },
  /**
   * @generated from rpc cacti.satp.v02.common.CommonService.GetStageVersion
   */
  getStageVersion: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof AckSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cacti_satp_v02_common_session, 1);

