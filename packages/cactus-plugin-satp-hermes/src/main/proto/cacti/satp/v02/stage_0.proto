
syntax = "proto3";
package cacti.satp.v02;

import "cacti/satp/v02/common/message.proto";

message PrivacyPolicy {
  string name = 1;
  repeated string arguments = 2;
}
message PreTransferVerificationAndContextEstablishmentRequest {
  cacti.satp.v02.common.CommonSatp context = 1;
  cacti.satp.v02.common.TransferClaims transfer_claims = 2; // needed ?
  repeated PrivacyPolicy processPolicies = 3;
  repeated PrivacyPolicy mergePolicies = 4;
}

// TODO
message PreTransferVerificationAndContextEstablishmentResponse {
  cacti.satp.v02.common.CommonSatp context = 1;
  repeated PrivacyPolicy processPolicies_counter_proposal = 2;
  repeated PrivacyPolicy mergePolicies_counter_proposal = 3;
  string hash_pre_transfer_verification_and_context = 4;
  string timestamp = 5;
}
message PreTransferCommenceRequestMessage {
  cacti.satp.v02.common.CommonSatp common = 1;
  string hash_pre_transfer_verification_and_context = 2;
  string client_transfer_number = 3;
}
message PreTransferCommenceResponseMessage {
  cacti.satp.v02.common.CommonSatp common = 1;
}
service SatpStage0Service {
  // util RPCs

  // step RPCs
  rpc PreTransferProposalClaims(PreTransferVerificationAndContextEstablishmentRequest) returns (PreTransferVerificationAndContextEstablishmentResponse) {};
  rpc PreTransferCommence(PreTransferCommenceRequestMessage) returns (PreTransferCommenceResponseMessage) {}
  // todo other rpcs
}