
syntax = "proto3";
package cacti.satp.v02.service;

import "cacti/satp/v02/common/message.proto";

message CommitPreparationRequest {
  cacti.satp.v02.common.CommonSatp common = 1;
  string client_transfer_number = 2;
  string client_signature = 3;
}

message CommitPreparationResponse {
  cacti.satp.v02.common.CommonSatp common = 1;
  cacti.satp.v02.common.MintAssertionClaim mint_assertion_claim = 2;
  cacti.satp.v02.common.MintAssertionClaimFormat mint_assertion_claim_format = 3;
  string server_transfer_number = 4;
  string server_signature = 5;
}

message CommitFinalAssertionRequest {
  cacti.satp.v02.common.CommonSatp common = 1;
  cacti.satp.v02.common.BurnAssertionClaim burn_assertion_claim = 2;
  cacti.satp.v02.common.BurnAssertionClaimFormat burn_assertion_claim_format = 3;
  string client_transfer_number = 4;
  string client_signature = 5;

}

message CommitFinalAssertionResponse {
  cacti.satp.v02.common.CommonSatp common = 1;
  cacti.satp.v02.common.AssignmentAssertionClaim assignment_assertion_claim = 2;
  cacti.satp.v02.common.AssignmentAssertionClaimFormat assignment_assertion_claim_format = 3;
  string server_transfer_number = 4;
  string server_signature = 5;
}

message TransferCompleteRequest {
  cacti.satp.v02.common.CommonSatp common = 1;
  string hash_transfer_commence = 2;
  string client_transfer_number = 3;
  string client_signature = 4;
}

message TransferCompleteResponse {
  cacti.satp.v02.common.CommonSatp common = 1;
  string server_transfer_number = 2;
  string server_signature = 3;
}
  
service SatpStage3Service {
  rpc CommitPreparation(CommitPreparationRequest) returns (CommitPreparationResponse) {}
  rpc CommitFinalAssertion(CommitFinalAssertionRequest) returns (CommitFinalAssertionResponse) {}
  rpc TransferComplete(TransferCompleteRequest) returns (TransferCompleteResponse) {}
}