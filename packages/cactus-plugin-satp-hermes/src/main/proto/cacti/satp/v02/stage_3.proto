
syntax = "proto3";
package cacti.satp.v02;

import "cacti/satp/v02/common/message.proto";
import "google/protobuf/empty.proto";

message CommitPreparationRequestMessage {
  cacti.satp.v02.common.CommonSatp common = 1;
  string client_transfer_number = 2;
  string client_signature = 3;
}

message CommitReadyResponseMessage {
  cacti.satp.v02.common.CommonSatp common = 1;
  cacti.satp.v02.common.MintAssertionClaims mint_assertion_claims = 2;
  cacti.satp.v02.common.MintAssertionClaimsFormat mint_assertion_claims_format = 3;
  string server_transfer_number = 4;
  string server_signature = 5;
}

message CommitFinalAssertionRequestMessage {
  cacti.satp.v02.common.CommonSatp common = 1;
  cacti.satp.v02.common.BurnAssertionClaim burn_assertion_claim = 2;
  cacti.satp.v02.common.BurnAssertionClaimFormat burn_assertion_claim_format = 3;
  string client_transfer_number = 4;
  string client_signature = 5;

}

message CommitFinalAcknowledgementReceiptResponseMessage {
  cacti.satp.v02.common.CommonSatp common = 1;
  cacti.satp.v02.common.AssignmentAssertionClaim assignment_assertion_claim = 2;
  cacti.satp.v02.common.AssignmentAssertionClaimFormat assignment_assertion_claim_format = 3;
  string server_transfer_number = 4;
  string server_signature = 5;
}

message TransferCompleteRequestMessage {
  cacti.satp.v02.common.CommonSatp common = 1;
  string hash_transfer_commence = 2;
  string client_transfer_number = 3;
  string client_signature = 4;
}
  
service SatpStage3Service {
  rpc CommitPreparation(CommitPreparationRequestMessage) returns (CommitReadyResponseMessage) {}
  rpc CommitFinalAssertion(CommitFinalAssertionRequestMessage) returns (CommitFinalAcknowledgementReceiptResponseMessage) {}
  rpc TransferComplete(TransferCompleteRequestMessage) returns (google.protobuf.Empty) {}
}
