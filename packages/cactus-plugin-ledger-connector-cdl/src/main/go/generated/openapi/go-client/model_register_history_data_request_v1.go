/*
Hyperledger Cacti Plugin - Connector CDL

Can perform basic tasks on Fujitsu CDL service.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-cdl

import (
	"encoding/json"
)

// checks if the RegisterHistoryDataRequestV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterHistoryDataRequestV1{}

// RegisterHistoryDataRequestV1 struct for RegisterHistoryDataRequestV1
type RegisterHistoryDataRequestV1 struct {
	AuthInfo AuthInfoV1 `json:"authInfo"`
	EventId *string `json:"eventId,omitempty"`
	LineageId *string `json:"lineageId,omitempty"`
	Tags interface{} `json:"tags,omitempty"`
	Properties interface{} `json:"properties,omitempty"`
}

// NewRegisterHistoryDataRequestV1 instantiates a new RegisterHistoryDataRequestV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterHistoryDataRequestV1(authInfo AuthInfoV1) *RegisterHistoryDataRequestV1 {
	this := RegisterHistoryDataRequestV1{}
	this.AuthInfo = authInfo
	return &this
}

// NewRegisterHistoryDataRequestV1WithDefaults instantiates a new RegisterHistoryDataRequestV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterHistoryDataRequestV1WithDefaults() *RegisterHistoryDataRequestV1 {
	this := RegisterHistoryDataRequestV1{}
	return &this
}

// GetAuthInfo returns the AuthInfo field value
func (o *RegisterHistoryDataRequestV1) GetAuthInfo() AuthInfoV1 {
	if o == nil {
		var ret AuthInfoV1
		return ret
	}

	return o.AuthInfo
}

// GetAuthInfoOk returns a tuple with the AuthInfo field value
// and a boolean to check if the value has been set.
func (o *RegisterHistoryDataRequestV1) GetAuthInfoOk() (*AuthInfoV1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthInfo, true
}

// SetAuthInfo sets field value
func (o *RegisterHistoryDataRequestV1) SetAuthInfo(v AuthInfoV1) {
	o.AuthInfo = v
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *RegisterHistoryDataRequestV1) GetEventId() string {
	if o == nil || IsNil(o.EventId) {
		var ret string
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterHistoryDataRequestV1) GetEventIdOk() (*string, bool) {
	if o == nil || IsNil(o.EventId) {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *RegisterHistoryDataRequestV1) HasEventId() bool {
	if o != nil && !IsNil(o.EventId) {
		return true
	}

	return false
}

// SetEventId gets a reference to the given string and assigns it to the EventId field.
func (o *RegisterHistoryDataRequestV1) SetEventId(v string) {
	o.EventId = &v
}

// GetLineageId returns the LineageId field value if set, zero value otherwise.
func (o *RegisterHistoryDataRequestV1) GetLineageId() string {
	if o == nil || IsNil(o.LineageId) {
		var ret string
		return ret
	}
	return *o.LineageId
}

// GetLineageIdOk returns a tuple with the LineageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegisterHistoryDataRequestV1) GetLineageIdOk() (*string, bool) {
	if o == nil || IsNil(o.LineageId) {
		return nil, false
	}
	return o.LineageId, true
}

// HasLineageId returns a boolean if a field has been set.
func (o *RegisterHistoryDataRequestV1) HasLineageId() bool {
	if o != nil && !IsNil(o.LineageId) {
		return true
	}

	return false
}

// SetLineageId gets a reference to the given string and assigns it to the LineageId field.
func (o *RegisterHistoryDataRequestV1) SetLineageId(v string) {
	o.LineageId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegisterHistoryDataRequestV1) GetTags() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegisterHistoryDataRequestV1) GetTagsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return &o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *RegisterHistoryDataRequestV1) HasTags() bool {
	if o != nil && IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given interface{} and assigns it to the Tags field.
func (o *RegisterHistoryDataRequestV1) SetTags(v interface{}) {
	o.Tags = v
}

// GetProperties returns the Properties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegisterHistoryDataRequestV1) GetProperties() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegisterHistoryDataRequestV1) GetPropertiesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return &o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *RegisterHistoryDataRequestV1) HasProperties() bool {
	if o != nil && IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given interface{} and assigns it to the Properties field.
func (o *RegisterHistoryDataRequestV1) SetProperties(v interface{}) {
	o.Properties = v
}

func (o RegisterHistoryDataRequestV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterHistoryDataRequestV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authInfo"] = o.AuthInfo
	if !IsNil(o.EventId) {
		toSerialize["eventId"] = o.EventId
	}
	if !IsNil(o.LineageId) {
		toSerialize["lineageId"] = o.LineageId
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	return toSerialize, nil
}

type NullableRegisterHistoryDataRequestV1 struct {
	value *RegisterHistoryDataRequestV1
	isSet bool
}

func (v NullableRegisterHistoryDataRequestV1) Get() *RegisterHistoryDataRequestV1 {
	return v.value
}

func (v *NullableRegisterHistoryDataRequestV1) Set(val *RegisterHistoryDataRequestV1) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterHistoryDataRequestV1) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterHistoryDataRequestV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterHistoryDataRequestV1(val *RegisterHistoryDataRequestV1) *NullableRegisterHistoryDataRequestV1 {
	return &NullableRegisterHistoryDataRequestV1{value: val, isSet: true}
}

func (v NullableRegisterHistoryDataRequestV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterHistoryDataRequestV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


