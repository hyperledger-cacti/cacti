/*
Hyperledger Cacti Plugin - Connector CDL

Can perform basic tasks on Fujitsu CDL service.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-cdl

import (
	"encoding/json"
)

// checks if the SearchLineageRequestV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchLineageRequestV1{}

// SearchLineageRequestV1 struct for SearchLineageRequestV1
type SearchLineageRequestV1 struct {
	AuthInfo AuthInfoV1 `json:"authInfo"`
	SearchType SearchLineageTypeV1 `json:"searchType"`
	Fields interface{} `json:"fields"`
}

// NewSearchLineageRequestV1 instantiates a new SearchLineageRequestV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchLineageRequestV1(authInfo AuthInfoV1, searchType SearchLineageTypeV1, fields interface{}) *SearchLineageRequestV1 {
	this := SearchLineageRequestV1{}
	this.AuthInfo = authInfo
	this.SearchType = searchType
	this.Fields = fields
	return &this
}

// NewSearchLineageRequestV1WithDefaults instantiates a new SearchLineageRequestV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchLineageRequestV1WithDefaults() *SearchLineageRequestV1 {
	this := SearchLineageRequestV1{}
	return &this
}

// GetAuthInfo returns the AuthInfo field value
func (o *SearchLineageRequestV1) GetAuthInfo() AuthInfoV1 {
	if o == nil {
		var ret AuthInfoV1
		return ret
	}

	return o.AuthInfo
}

// GetAuthInfoOk returns a tuple with the AuthInfo field value
// and a boolean to check if the value has been set.
func (o *SearchLineageRequestV1) GetAuthInfoOk() (*AuthInfoV1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthInfo, true
}

// SetAuthInfo sets field value
func (o *SearchLineageRequestV1) SetAuthInfo(v AuthInfoV1) {
	o.AuthInfo = v
}

// GetSearchType returns the SearchType field value
func (o *SearchLineageRequestV1) GetSearchType() SearchLineageTypeV1 {
	if o == nil {
		var ret SearchLineageTypeV1
		return ret
	}

	return o.SearchType
}

// GetSearchTypeOk returns a tuple with the SearchType field value
// and a boolean to check if the value has been set.
func (o *SearchLineageRequestV1) GetSearchTypeOk() (*SearchLineageTypeV1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SearchType, true
}

// SetSearchType sets field value
func (o *SearchLineageRequestV1) SetSearchType(v SearchLineageTypeV1) {
	o.SearchType = v
}

// GetFields returns the Fields field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *SearchLineageRequestV1) GetFields() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchLineageRequestV1) GetFieldsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return &o.Fields, true
}

// SetFields sets field value
func (o *SearchLineageRequestV1) SetFields(v interface{}) {
	o.Fields = v
}

func (o SearchLineageRequestV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchLineageRequestV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authInfo"] = o.AuthInfo
	toSerialize["searchType"] = o.SearchType
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	return toSerialize, nil
}

type NullableSearchLineageRequestV1 struct {
	value *SearchLineageRequestV1
	isSet bool
}

func (v NullableSearchLineageRequestV1) Get() *SearchLineageRequestV1 {
	return v.value
}

func (v *NullableSearchLineageRequestV1) Set(val *SearchLineageRequestV1) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchLineageRequestV1) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchLineageRequestV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchLineageRequestV1(val *SearchLineageRequestV1) *NullableSearchLineageRequestV1 {
	return &NullableSearchLineageRequestV1{value: val, isSet: true}
}

func (v NullableSearchLineageRequestV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchLineageRequestV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


