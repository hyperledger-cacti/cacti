{
  "openapi": "3.0.3",
  "info": {
    "title": "Hyperledger Cactus Plugin - Consortium Web Service",
    "description": "Manage a Cactus consortium through the APIs. Needs administrative privileges.",
    "version": "2.0.0-rc.2",
    "license": {
      "name": "Apache-2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "components": {
    "schemas": {
      "Identity": {
        "type": "object",
        "description": "Identity object of a Cacti Node",
        "required": ["pubKey", "memberId", "proof"],
        "properties": {
          "pubKey": {
            "description": "Public key of the Node",
            "type": "string",
            "nullable": false
          },
          "memberId": {
            "description": "memberId of the organization the node belongs to",
            "type": "string",
            "nullable": false
          },
          "proof": {
            "description": "JWT generated by the organization the node belongs to",
            "type": "string",
            "nullable": false
          }
        }
      },
      "NewNodeRequestV1": {
        "type": "object",
        "required": [
          "identity",
          "treeHash",
          "node",
          "ledger",
          "pluginInstance",
          "signature"
        ],
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/Identity",
            "nullable": false
          },
          "treeHash": {
            "description": "proof of common configs and policies defined by the consortium",
            "type": "string",
            "nullable": false
          },
          "node": {
            "description": "A Cacti Node",
            "$ref": "#/components/schemas/CactusNode",
            "nullable": false
          },
          "ledger": {
            "description": "Ledger metadata",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ledger",
              "nullable": false
            },
            "default": []
          },
          "pluginInstance": {
            "description": "Plugin Instance metadata",
            "items": {
              "$ref": "#/components/schemas/PluginInstance",
              "nullable": false
            },
            "default": []
          },
          "signature": {
            "description": "signature of the message",
            "type": "string",
            "nullable": false
          }
        }
      },
      "PrimaryKey": {
        "type": "string",
        "minLength": 1,
        "maxLength": 128,
        "nullable": false
      },
      "ConsortiumMemberId": {
        "$ref": "#/components/schemas/PrimaryKey",
        "description": "ID of Consortium member who operates the ledger (if any). Defined as an optional property in case the ledger is a permissionless and/or public one such as the Bitcoin or Ethereum mainnets."
      },
      "CactusNodeId": {
        "$ref": "#/components/schemas/PrimaryKey",
        "description": "ID of a Cactus node that must uniquely distinguish it from all other Cactus nodes within a Consortium. Note that API server instances do not have their own identity the way a node does."
      },
      "ConsortiumId": {
        "$ref": "#/components/schemas/PrimaryKey"
      },
      "LedgerId": {
        "description": "String that uniquely identifies a ledger within a Cactus consortium so that transactions can be routed to the correct ledger.",
        "$ref": "#/components/schemas/PrimaryKey"
      },
      "PluginInstanceId": {
        "description": "String that uniquely identifies a plugin instance within a Cactus consortium so that requests can be addressed/routed  directly to individual plugins when necessary.",
        "$ref": "#/components/schemas/PrimaryKey"
      },
      "Ledger": {
        "type": "object",
        "required": ["id", "ledgerType"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/LedgerId"
          },
          "ledgerType": {
            "$ref": "#/components/schemas/LedgerType",
            "nullable": false
          },
          "consortiumMemberId": {
            "$ref": "#/components/schemas/ConsortiumMemberId"
          }
        }
      },
      "LedgerType": {
        "description": "Enumerates the different ledger vendors and their major versions encoded within the name of the LedgerType. For example \"BESU_1X\" involves all of the [1.0.0;2.0.0) where 1.0.0 is included and anything up until, but not 2.0.0. See: https://stackoverflow.com/a/4396303/698470 for further explanation.",
        "type": "string",
        "enum": [
          "BESU_1X",
          "BESU_2X",
          "BURROW_0X",
          "CORDA_4X",
          "FABRIC_2",
          "SAWTOOTH_1X"
        ]
      },
      "CactusNodeMeta": {
        "description": "A Cactus node meta information",
        "type": "object",
        "required": ["nodeApiHost", "publicKeyPem"],
        "properties": {
          "nodeApiHost": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "nullable": false
          },
          "publicKeyPem": {
            "description": "The PEM encoded public key that was used to generate the JWS included in the response (the jws property)",
            "type": "string",
            "minLength": 1,
            "maxLength": 65535,
            "nullable": false,
            "format": "Must only contain the public key, never include here  the PEM that also contains a private key. See PEM format: https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail"
          }
        }
      },
      "CactusNode": {
        "description": "A Cactus node can be a single server, or a set of servers behind a load balancer acting as one.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CactusNodeMeta"
          },
          {
            "type": "object",
            "required": [
              "id",
              "consortiumId",
              "nodeApiHost",
              "memberId",
              "publicKeyPem",
              "pluginInstanceIds",
              "ledgerIds"
            ],
            "properties": {
              "id": {
                "$ref": "#/components/schemas/CactusNodeId",
                "example": "809a76ba-cfb8-4045-a5c6-ed70a7314c25"
              },
              "consortiumId": {
                "$ref": "#/components/schemas/ConsortiumId",
                "description": "ID of the Cactus Consortium this node is in.",
                "example": "3e2670d9-2d14-45bd-96f5-33e2c4b4e3fb"
              },
              "memberId": {
                "$ref": "#/components/schemas/ConsortiumMemberId",
                "example": "b3674a28-e442-4feb-b1f3-8cbe46c20e5e"
              },
              "ledgerIds": {
                "description": "Stores an array of Ledger entity IDs that are reachable (routable) via this Cactus Node. This information is used by the client side SDK API client to figure out at runtime where to send API requests that are specific to a certain ledger such as requests to execute transactions.",
                "type": "array",
                "nullable": false,
                "minItems": 0,
                "maxItems": 2048,
                "default": [],
                "items": {
                  "$ref": "#/components/schemas/LedgerId"
                }
              },
              "pluginInstanceIds": {
                "type": "array",
                "nullable": false,
                "minItems": 0,
                "maxItems": 2048,
                "default": [],
                "items": {
                  "$ref": "#/components/schemas/PluginInstanceId"
                }
              }
            }
          }
        ]
      },
      "PluginInstance": {
        "type": "object",
        "required": ["id", "packageName"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/PluginInstanceId"
          },
          "packageName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 4096,
            "nullable": false
          }
        }
      },
      "BroadcastRequestV1": {
        "type": "object",
        "required": ["message", "signature"],
        "properties": {
          "message": {
            "type": "object",
            "nullable": false,
            "required": ["message", "pubKey"],
            "properties": {
              "message": {
                "$ref": "#/components/schemas/NewNodeRequestV1"
              },
              "pubKey": {
                "type": "string",
                "nullable": false
              }
            }
          },
          "signature": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "BroadcastResponseV1": {
        "type": "object",
        "nullable": false,
        "required": ["result"],
        "properties": {
          "result": {
            "type": "boolean",
            "nullable": false
          }
        }
      },
      "GetNodeJwsResponse": {
        "type": "object",
        "required": ["jws"],
        "properties": {
          "jws": {
            "description": "The JSON Web Signature of the Cactus node.",
            "$ref": "#/components/schemas/JWSGeneral",
            "nullable": false
          }
        }
      },
      "GetConsortiumJwsResponse": {
        "type": "object",
        "required": ["jws"],
        "properties": {
          "jws": {
            "description": "The JSON Web Signature of the Cactus consortium.",
            "$ref": "#/components/schemas/JWSGeneral",
            "nullable": false,
            "format": "The general format which is a JSON object, not a string."
          }
        }
      },
      "PrometheusExporterMetricsResponse": {
        "type": "string",
        "nullable": false
      },
      "GetNodeJwsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "GetConsortiumJwsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "JWSRecipient": {
        "description": "A JSON Web Signature. See: https://tools.ietf.org/html/rfc7515 for info about standard.",
        "type": "object",
        "required": ["signature"],
        "properties": {
          "signature": {
            "type": "string"
          },
          "protected": {
            "type": "string"
          },
          "header": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "JWSGeneral": {
        "type": "object",
        "required": ["payload", "signatures"],
        "properties": {
          "payload": {
            "type": "string",
            "minLength": 1,
            "maxLength": 65535
          },
          "signatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JWSRecipient"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/plugins/@hyperledger/cacti-plugin-consortium-static/consortium/jws": {
      "post": {
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cacti-plugin-consortium-static/consortium/jws"
          }
        },
        "operationId": "getConsortiumJwsV1",
        "summary": "Retrieves a consortium JWS",
        "description": "The JWS asserting the consortium metadata (pub keys and hosts of nodes)",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetConsortiumJwsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsortiumJwsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cacti-plugin-consortium-static/node/jws": {
      "post": {
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cacti-plugin-consortium-static/node/jws"
          }
        },
        "operationId": "getNodeJwsV1",
        "summary": "Retrieves the JWT of a Cactus Node",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetNodeJwsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNodeJwsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cacti-plugin-consortium-static/get-prometheus-exporter-metrics": {
      "get": {
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "get",
            "path": "/api/v1/plugins/@hyperledger/cacti-plugin-consortium-static/get-prometheus-exporter-metrics"
          }
        },
        "operationId": "getPrometheusMetricsV1",
        "summary": "Get the Prometheus Metrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PrometheusExporterMetricsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cacti-plugin-consortium-static/add-node": {
      "post": {
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cacti-plugin-consortium-static/add-node"
          }
        },
        "operationId": "addNodeToConsortiumV1",
        "summary": "Adds a node to consortium JWS",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewNodeRequestV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConsortiumJwsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/plugins/@hyperledger/cacti-plugin-consortium-static/receive-broadcast": {
      "post": {
        "x-hyperledger-cacti": {
          "http": {
            "verbLowerCase": "post",
            "path": "/api/v1/plugins/@hyperledger/cacti-plugin-consortium-static/receive-broadcast"
          }
        },
        "operationId": "receiveBroadcastV1",
        "summary": "Adds a node to consortium JWS",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BroadcastRequestV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastResponseV1"
                }
              }
            }
          }
        }
      }
    }
  }
}
