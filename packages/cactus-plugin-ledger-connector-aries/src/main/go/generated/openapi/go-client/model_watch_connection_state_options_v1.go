/*
Hyperledger Cacti Plugin - Connector Aries

Can communicate with other Aries agents and Cacti Aries connectors

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-aries

import (
	"encoding/json"
)

// checks if the WatchConnectionStateOptionsV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchConnectionStateOptionsV1{}

// WatchConnectionStateOptionsV1 Options passed when monitoring connection change events.
type WatchConnectionStateOptionsV1 struct {
	// Aries agent label that will also be used as wallet id.
	AgentName string `json:"agentName"`
}

// NewWatchConnectionStateOptionsV1 instantiates a new WatchConnectionStateOptionsV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchConnectionStateOptionsV1(agentName string) *WatchConnectionStateOptionsV1 {
	this := WatchConnectionStateOptionsV1{}
	this.AgentName = agentName
	return &this
}

// NewWatchConnectionStateOptionsV1WithDefaults instantiates a new WatchConnectionStateOptionsV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchConnectionStateOptionsV1WithDefaults() *WatchConnectionStateOptionsV1 {
	this := WatchConnectionStateOptionsV1{}
	return &this
}

// GetAgentName returns the AgentName field value
func (o *WatchConnectionStateOptionsV1) GetAgentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AgentName
}

// GetAgentNameOk returns a tuple with the AgentName field value
// and a boolean to check if the value has been set.
func (o *WatchConnectionStateOptionsV1) GetAgentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentName, true
}

// SetAgentName sets field value
func (o *WatchConnectionStateOptionsV1) SetAgentName(v string) {
	o.AgentName = v
}

func (o WatchConnectionStateOptionsV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchConnectionStateOptionsV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["agentName"] = o.AgentName
	return toSerialize, nil
}

type NullableWatchConnectionStateOptionsV1 struct {
	value *WatchConnectionStateOptionsV1
	isSet bool
}

func (v NullableWatchConnectionStateOptionsV1) Get() *WatchConnectionStateOptionsV1 {
	return v.value
}

func (v *NullableWatchConnectionStateOptionsV1) Set(val *WatchConnectionStateOptionsV1) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchConnectionStateOptionsV1) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchConnectionStateOptionsV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchConnectionStateOptionsV1(val *WatchConnectionStateOptionsV1) *NullableWatchConnectionStateOptionsV1 {
	return &NullableWatchConnectionStateOptionsV1{value: val, isSet: true}
}

func (v NullableWatchConnectionStateOptionsV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchConnectionStateOptionsV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


