/*
Hyperledger Cacti Plugin - Connector Aries

Can communicate with other Aries agents and Cacti Aries connectors

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-aries

import (
	"encoding/json"
)

// checks if the WatchConnectionStateProgressV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchConnectionStateProgressV1{}

// WatchConnectionStateProgressV1 Values pushed on each connection state change.
type WatchConnectionStateProgressV1 struct {
	ConnectionRecord AgentConnectionRecordV1 `json:"connectionRecord"`
	PreviousState NullableString `json:"previousState"`
}

// NewWatchConnectionStateProgressV1 instantiates a new WatchConnectionStateProgressV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchConnectionStateProgressV1(connectionRecord AgentConnectionRecordV1, previousState NullableString) *WatchConnectionStateProgressV1 {
	this := WatchConnectionStateProgressV1{}
	this.ConnectionRecord = connectionRecord
	this.PreviousState = previousState
	return &this
}

// NewWatchConnectionStateProgressV1WithDefaults instantiates a new WatchConnectionStateProgressV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchConnectionStateProgressV1WithDefaults() *WatchConnectionStateProgressV1 {
	this := WatchConnectionStateProgressV1{}
	return &this
}

// GetConnectionRecord returns the ConnectionRecord field value
func (o *WatchConnectionStateProgressV1) GetConnectionRecord() AgentConnectionRecordV1 {
	if o == nil {
		var ret AgentConnectionRecordV1
		return ret
	}

	return o.ConnectionRecord
}

// GetConnectionRecordOk returns a tuple with the ConnectionRecord field value
// and a boolean to check if the value has been set.
func (o *WatchConnectionStateProgressV1) GetConnectionRecordOk() (*AgentConnectionRecordV1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionRecord, true
}

// SetConnectionRecord sets field value
func (o *WatchConnectionStateProgressV1) SetConnectionRecord(v AgentConnectionRecordV1) {
	o.ConnectionRecord = v
}

// GetPreviousState returns the PreviousState field value
// If the value is explicit nil, the zero value for string will be returned
func (o *WatchConnectionStateProgressV1) GetPreviousState() string {
	if o == nil || o.PreviousState.Get() == nil {
		var ret string
		return ret
	}

	return *o.PreviousState.Get()
}

// GetPreviousStateOk returns a tuple with the PreviousState field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WatchConnectionStateProgressV1) GetPreviousStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreviousState.Get(), o.PreviousState.IsSet()
}

// SetPreviousState sets field value
func (o *WatchConnectionStateProgressV1) SetPreviousState(v string) {
	o.PreviousState.Set(&v)
}

func (o WatchConnectionStateProgressV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchConnectionStateProgressV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connectionRecord"] = o.ConnectionRecord
	toSerialize["previousState"] = o.PreviousState.Get()
	return toSerialize, nil
}

type NullableWatchConnectionStateProgressV1 struct {
	value *WatchConnectionStateProgressV1
	isSet bool
}

func (v NullableWatchConnectionStateProgressV1) Get() *WatchConnectionStateProgressV1 {
	return v.value
}

func (v *NullableWatchConnectionStateProgressV1) Set(val *WatchConnectionStateProgressV1) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchConnectionStateProgressV1) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchConnectionStateProgressV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchConnectionStateProgressV1(val *WatchConnectionStateProgressV1) *NullableWatchConnectionStateProgressV1 {
	return &NullableWatchConnectionStateProgressV1{value: val, isSet: true}
}

func (v NullableWatchConnectionStateProgressV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchConnectionStateProgressV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


