/*
Hyperledger Cacti Plugin - Connector Aries

Can communicate with other Aries agents and Cacti Aries connectors

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-aries

import (
	"encoding/json"
)

// checks if the AgentConnectionsFilterV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentConnectionsFilterV1{}

// AgentConnectionsFilterV1 Fields that can be used to filter agent connection list.
type AgentConnectionsFilterV1 struct {
	Did *string `json:"did,omitempty"`
	InvitationDid *string `json:"invitationDid,omitempty"`
	OutOfBandId *string `json:"outOfBandId,omitempty"`
	Role *string `json:"role,omitempty"`
	State *string `json:"state,omitempty"`
	TheirDid *string `json:"theirDid,omitempty"`
	ThreadId *string `json:"threadId,omitempty"`
}

// NewAgentConnectionsFilterV1 instantiates a new AgentConnectionsFilterV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentConnectionsFilterV1() *AgentConnectionsFilterV1 {
	this := AgentConnectionsFilterV1{}
	return &this
}

// NewAgentConnectionsFilterV1WithDefaults instantiates a new AgentConnectionsFilterV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentConnectionsFilterV1WithDefaults() *AgentConnectionsFilterV1 {
	this := AgentConnectionsFilterV1{}
	return &this
}

// GetDid returns the Did field value if set, zero value otherwise.
func (o *AgentConnectionsFilterV1) GetDid() string {
	if o == nil || IsNil(o.Did) {
		var ret string
		return ret
	}
	return *o.Did
}

// GetDidOk returns a tuple with the Did field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionsFilterV1) GetDidOk() (*string, bool) {
	if o == nil || IsNil(o.Did) {
		return nil, false
	}
	return o.Did, true
}

// HasDid returns a boolean if a field has been set.
func (o *AgentConnectionsFilterV1) HasDid() bool {
	if o != nil && !IsNil(o.Did) {
		return true
	}

	return false
}

// SetDid gets a reference to the given string and assigns it to the Did field.
func (o *AgentConnectionsFilterV1) SetDid(v string) {
	o.Did = &v
}

// GetInvitationDid returns the InvitationDid field value if set, zero value otherwise.
func (o *AgentConnectionsFilterV1) GetInvitationDid() string {
	if o == nil || IsNil(o.InvitationDid) {
		var ret string
		return ret
	}
	return *o.InvitationDid
}

// GetInvitationDidOk returns a tuple with the InvitationDid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionsFilterV1) GetInvitationDidOk() (*string, bool) {
	if o == nil || IsNil(o.InvitationDid) {
		return nil, false
	}
	return o.InvitationDid, true
}

// HasInvitationDid returns a boolean if a field has been set.
func (o *AgentConnectionsFilterV1) HasInvitationDid() bool {
	if o != nil && !IsNil(o.InvitationDid) {
		return true
	}

	return false
}

// SetInvitationDid gets a reference to the given string and assigns it to the InvitationDid field.
func (o *AgentConnectionsFilterV1) SetInvitationDid(v string) {
	o.InvitationDid = &v
}

// GetOutOfBandId returns the OutOfBandId field value if set, zero value otherwise.
func (o *AgentConnectionsFilterV1) GetOutOfBandId() string {
	if o == nil || IsNil(o.OutOfBandId) {
		var ret string
		return ret
	}
	return *o.OutOfBandId
}

// GetOutOfBandIdOk returns a tuple with the OutOfBandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionsFilterV1) GetOutOfBandIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutOfBandId) {
		return nil, false
	}
	return o.OutOfBandId, true
}

// HasOutOfBandId returns a boolean if a field has been set.
func (o *AgentConnectionsFilterV1) HasOutOfBandId() bool {
	if o != nil && !IsNil(o.OutOfBandId) {
		return true
	}

	return false
}

// SetOutOfBandId gets a reference to the given string and assigns it to the OutOfBandId field.
func (o *AgentConnectionsFilterV1) SetOutOfBandId(v string) {
	o.OutOfBandId = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AgentConnectionsFilterV1) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionsFilterV1) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AgentConnectionsFilterV1) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AgentConnectionsFilterV1) SetRole(v string) {
	o.Role = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *AgentConnectionsFilterV1) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionsFilterV1) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *AgentConnectionsFilterV1) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *AgentConnectionsFilterV1) SetState(v string) {
	o.State = &v
}

// GetTheirDid returns the TheirDid field value if set, zero value otherwise.
func (o *AgentConnectionsFilterV1) GetTheirDid() string {
	if o == nil || IsNil(o.TheirDid) {
		var ret string
		return ret
	}
	return *o.TheirDid
}

// GetTheirDidOk returns a tuple with the TheirDid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionsFilterV1) GetTheirDidOk() (*string, bool) {
	if o == nil || IsNil(o.TheirDid) {
		return nil, false
	}
	return o.TheirDid, true
}

// HasTheirDid returns a boolean if a field has been set.
func (o *AgentConnectionsFilterV1) HasTheirDid() bool {
	if o != nil && !IsNil(o.TheirDid) {
		return true
	}

	return false
}

// SetTheirDid gets a reference to the given string and assigns it to the TheirDid field.
func (o *AgentConnectionsFilterV1) SetTheirDid(v string) {
	o.TheirDid = &v
}

// GetThreadId returns the ThreadId field value if set, zero value otherwise.
func (o *AgentConnectionsFilterV1) GetThreadId() string {
	if o == nil || IsNil(o.ThreadId) {
		var ret string
		return ret
	}
	return *o.ThreadId
}

// GetThreadIdOk returns a tuple with the ThreadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionsFilterV1) GetThreadIdOk() (*string, bool) {
	if o == nil || IsNil(o.ThreadId) {
		return nil, false
	}
	return o.ThreadId, true
}

// HasThreadId returns a boolean if a field has been set.
func (o *AgentConnectionsFilterV1) HasThreadId() bool {
	if o != nil && !IsNil(o.ThreadId) {
		return true
	}

	return false
}

// SetThreadId gets a reference to the given string and assigns it to the ThreadId field.
func (o *AgentConnectionsFilterV1) SetThreadId(v string) {
	o.ThreadId = &v
}

func (o AgentConnectionsFilterV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentConnectionsFilterV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Did) {
		toSerialize["did"] = o.Did
	}
	if !IsNil(o.InvitationDid) {
		toSerialize["invitationDid"] = o.InvitationDid
	}
	if !IsNil(o.OutOfBandId) {
		toSerialize["outOfBandId"] = o.OutOfBandId
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.TheirDid) {
		toSerialize["theirDid"] = o.TheirDid
	}
	if !IsNil(o.ThreadId) {
		toSerialize["threadId"] = o.ThreadId
	}
	return toSerialize, nil
}

type NullableAgentConnectionsFilterV1 struct {
	value *AgentConnectionsFilterV1
	isSet bool
}

func (v NullableAgentConnectionsFilterV1) Get() *AgentConnectionsFilterV1 {
	return v.value
}

func (v *NullableAgentConnectionsFilterV1) Set(val *AgentConnectionsFilterV1) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentConnectionsFilterV1) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentConnectionsFilterV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentConnectionsFilterV1(val *AgentConnectionsFilterV1) *NullableAgentConnectionsFilterV1 {
	return &NullableAgentConnectionsFilterV1{value: val, isSet: true}
}

func (v NullableAgentConnectionsFilterV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentConnectionsFilterV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


