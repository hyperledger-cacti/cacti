/*
Hyperledger Cacti Plugin - Connector Aries

Can communicate with other Aries agents and Cacti Aries connectors

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-aries

import (
	"encoding/json"
)

// checks if the AgentConnectionRecordV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentConnectionRecordV1{}

// AgentConnectionRecordV1 Aries agent connection information.
type AgentConnectionRecordV1 struct {
	State string `json:"state"`
	Role string `json:"role"`
	IsReady bool `json:"isReady"`
	Did *string `json:"did,omitempty"`
	TheirDid *string `json:"theirDid,omitempty"`
	TheirLabel *string `json:"theirLabel,omitempty"`
	Alias *string `json:"alias,omitempty"`
	ThreadId *string `json:"threadId,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	OutOfBandId *string `json:"outOfBandId,omitempty"`
	InvitationDid *string `json:"invitationDid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AgentConnectionRecordV1 AgentConnectionRecordV1

// NewAgentConnectionRecordV1 instantiates a new AgentConnectionRecordV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentConnectionRecordV1(state string, role string, isReady bool) *AgentConnectionRecordV1 {
	this := AgentConnectionRecordV1{}
	this.State = state
	this.Role = role
	this.IsReady = isReady
	return &this
}

// NewAgentConnectionRecordV1WithDefaults instantiates a new AgentConnectionRecordV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentConnectionRecordV1WithDefaults() *AgentConnectionRecordV1 {
	this := AgentConnectionRecordV1{}
	return &this
}

// GetState returns the State field value
func (o *AgentConnectionRecordV1) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *AgentConnectionRecordV1) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *AgentConnectionRecordV1) SetState(v string) {
	o.State = v
}

// GetRole returns the Role field value
func (o *AgentConnectionRecordV1) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *AgentConnectionRecordV1) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *AgentConnectionRecordV1) SetRole(v string) {
	o.Role = v
}

// GetIsReady returns the IsReady field value
func (o *AgentConnectionRecordV1) GetIsReady() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsReady
}

// GetIsReadyOk returns a tuple with the IsReady field value
// and a boolean to check if the value has been set.
func (o *AgentConnectionRecordV1) GetIsReadyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsReady, true
}

// SetIsReady sets field value
func (o *AgentConnectionRecordV1) SetIsReady(v bool) {
	o.IsReady = v
}

// GetDid returns the Did field value if set, zero value otherwise.
func (o *AgentConnectionRecordV1) GetDid() string {
	if o == nil || IsNil(o.Did) {
		var ret string
		return ret
	}
	return *o.Did
}

// GetDidOk returns a tuple with the Did field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionRecordV1) GetDidOk() (*string, bool) {
	if o == nil || IsNil(o.Did) {
		return nil, false
	}
	return o.Did, true
}

// HasDid returns a boolean if a field has been set.
func (o *AgentConnectionRecordV1) HasDid() bool {
	if o != nil && !IsNil(o.Did) {
		return true
	}

	return false
}

// SetDid gets a reference to the given string and assigns it to the Did field.
func (o *AgentConnectionRecordV1) SetDid(v string) {
	o.Did = &v
}

// GetTheirDid returns the TheirDid field value if set, zero value otherwise.
func (o *AgentConnectionRecordV1) GetTheirDid() string {
	if o == nil || IsNil(o.TheirDid) {
		var ret string
		return ret
	}
	return *o.TheirDid
}

// GetTheirDidOk returns a tuple with the TheirDid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionRecordV1) GetTheirDidOk() (*string, bool) {
	if o == nil || IsNil(o.TheirDid) {
		return nil, false
	}
	return o.TheirDid, true
}

// HasTheirDid returns a boolean if a field has been set.
func (o *AgentConnectionRecordV1) HasTheirDid() bool {
	if o != nil && !IsNil(o.TheirDid) {
		return true
	}

	return false
}

// SetTheirDid gets a reference to the given string and assigns it to the TheirDid field.
func (o *AgentConnectionRecordV1) SetTheirDid(v string) {
	o.TheirDid = &v
}

// GetTheirLabel returns the TheirLabel field value if set, zero value otherwise.
func (o *AgentConnectionRecordV1) GetTheirLabel() string {
	if o == nil || IsNil(o.TheirLabel) {
		var ret string
		return ret
	}
	return *o.TheirLabel
}

// GetTheirLabelOk returns a tuple with the TheirLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionRecordV1) GetTheirLabelOk() (*string, bool) {
	if o == nil || IsNil(o.TheirLabel) {
		return nil, false
	}
	return o.TheirLabel, true
}

// HasTheirLabel returns a boolean if a field has been set.
func (o *AgentConnectionRecordV1) HasTheirLabel() bool {
	if o != nil && !IsNil(o.TheirLabel) {
		return true
	}

	return false
}

// SetTheirLabel gets a reference to the given string and assigns it to the TheirLabel field.
func (o *AgentConnectionRecordV1) SetTheirLabel(v string) {
	o.TheirLabel = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *AgentConnectionRecordV1) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionRecordV1) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *AgentConnectionRecordV1) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *AgentConnectionRecordV1) SetAlias(v string) {
	o.Alias = &v
}

// GetThreadId returns the ThreadId field value if set, zero value otherwise.
func (o *AgentConnectionRecordV1) GetThreadId() string {
	if o == nil || IsNil(o.ThreadId) {
		var ret string
		return ret
	}
	return *o.ThreadId
}

// GetThreadIdOk returns a tuple with the ThreadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionRecordV1) GetThreadIdOk() (*string, bool) {
	if o == nil || IsNil(o.ThreadId) {
		return nil, false
	}
	return o.ThreadId, true
}

// HasThreadId returns a boolean if a field has been set.
func (o *AgentConnectionRecordV1) HasThreadId() bool {
	if o != nil && !IsNil(o.ThreadId) {
		return true
	}

	return false
}

// SetThreadId gets a reference to the given string and assigns it to the ThreadId field.
func (o *AgentConnectionRecordV1) SetThreadId(v string) {
	o.ThreadId = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *AgentConnectionRecordV1) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionRecordV1) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *AgentConnectionRecordV1) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *AgentConnectionRecordV1) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetOutOfBandId returns the OutOfBandId field value if set, zero value otherwise.
func (o *AgentConnectionRecordV1) GetOutOfBandId() string {
	if o == nil || IsNil(o.OutOfBandId) {
		var ret string
		return ret
	}
	return *o.OutOfBandId
}

// GetOutOfBandIdOk returns a tuple with the OutOfBandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionRecordV1) GetOutOfBandIdOk() (*string, bool) {
	if o == nil || IsNil(o.OutOfBandId) {
		return nil, false
	}
	return o.OutOfBandId, true
}

// HasOutOfBandId returns a boolean if a field has been set.
func (o *AgentConnectionRecordV1) HasOutOfBandId() bool {
	if o != nil && !IsNil(o.OutOfBandId) {
		return true
	}

	return false
}

// SetOutOfBandId gets a reference to the given string and assigns it to the OutOfBandId field.
func (o *AgentConnectionRecordV1) SetOutOfBandId(v string) {
	o.OutOfBandId = &v
}

// GetInvitationDid returns the InvitationDid field value if set, zero value otherwise.
func (o *AgentConnectionRecordV1) GetInvitationDid() string {
	if o == nil || IsNil(o.InvitationDid) {
		var ret string
		return ret
	}
	return *o.InvitationDid
}

// GetInvitationDidOk returns a tuple with the InvitationDid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentConnectionRecordV1) GetInvitationDidOk() (*string, bool) {
	if o == nil || IsNil(o.InvitationDid) {
		return nil, false
	}
	return o.InvitationDid, true
}

// HasInvitationDid returns a boolean if a field has been set.
func (o *AgentConnectionRecordV1) HasInvitationDid() bool {
	if o != nil && !IsNil(o.InvitationDid) {
		return true
	}

	return false
}

// SetInvitationDid gets a reference to the given string and assigns it to the InvitationDid field.
func (o *AgentConnectionRecordV1) SetInvitationDid(v string) {
	o.InvitationDid = &v
}

func (o AgentConnectionRecordV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentConnectionRecordV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["state"] = o.State
	toSerialize["role"] = o.Role
	toSerialize["isReady"] = o.IsReady
	if !IsNil(o.Did) {
		toSerialize["did"] = o.Did
	}
	if !IsNil(o.TheirDid) {
		toSerialize["theirDid"] = o.TheirDid
	}
	if !IsNil(o.TheirLabel) {
		toSerialize["theirLabel"] = o.TheirLabel
	}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.ThreadId) {
		toSerialize["threadId"] = o.ThreadId
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.OutOfBandId) {
		toSerialize["outOfBandId"] = o.OutOfBandId
	}
	if !IsNil(o.InvitationDid) {
		toSerialize["invitationDid"] = o.InvitationDid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AgentConnectionRecordV1) UnmarshalJSON(bytes []byte) (err error) {
	varAgentConnectionRecordV1 := _AgentConnectionRecordV1{}

	if err = json.Unmarshal(bytes, &varAgentConnectionRecordV1); err == nil {
		*o = AgentConnectionRecordV1(varAgentConnectionRecordV1)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "state")
		delete(additionalProperties, "role")
		delete(additionalProperties, "isReady")
		delete(additionalProperties, "did")
		delete(additionalProperties, "theirDid")
		delete(additionalProperties, "theirLabel")
		delete(additionalProperties, "alias")
		delete(additionalProperties, "threadId")
		delete(additionalProperties, "errorMessage")
		delete(additionalProperties, "outOfBandId")
		delete(additionalProperties, "invitationDid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAgentConnectionRecordV1 struct {
	value *AgentConnectionRecordV1
	isSet bool
}

func (v NullableAgentConnectionRecordV1) Get() *AgentConnectionRecordV1 {
	return v.value
}

func (v *NullableAgentConnectionRecordV1) Set(val *AgentConnectionRecordV1) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentConnectionRecordV1) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentConnectionRecordV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentConnectionRecordV1(val *AgentConnectionRecordV1) *NullableAgentConnectionRecordV1 {
	return &NullableAgentConnectionRecordV1{value: val, isSet: true}
}

func (v NullableAgentConnectionRecordV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentConnectionRecordV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


