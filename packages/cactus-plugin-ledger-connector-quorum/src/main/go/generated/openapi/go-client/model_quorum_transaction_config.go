/*
Hyperledger Cactus Plugin - Connector Quorum

Can perform basic tasks on a Quorum ledger

API version: v2.0.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-quorum

import (
	"encoding/json"
)

// checks if the QuorumTransactionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuorumTransactionConfig{}

// QuorumTransactionConfig struct for QuorumTransactionConfig
type QuorumTransactionConfig struct {
	RawTransaction *string `json:"rawTransaction,omitempty"`
	From *QuorumTransactionConfigFrom `json:"from,omitempty"`
	To *QuorumTransactionConfigTo `json:"to,omitempty"`
	Value *QuorumTransactionConfigFrom `json:"value,omitempty"`
	Gas *QuorumTransactionConfigFrom `json:"gas,omitempty"`
	GasPrice *QuorumTransactionConfigFrom `json:"gasPrice,omitempty"`
	Nonce *float32 `json:"nonce,omitempty"`
	Data *QuorumTransactionConfigTo `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuorumTransactionConfig QuorumTransactionConfig

// NewQuorumTransactionConfig instantiates a new QuorumTransactionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuorumTransactionConfig() *QuorumTransactionConfig {
	this := QuorumTransactionConfig{}
	return &this
}

// NewQuorumTransactionConfigWithDefaults instantiates a new QuorumTransactionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuorumTransactionConfigWithDefaults() *QuorumTransactionConfig {
	this := QuorumTransactionConfig{}
	return &this
}

// GetRawTransaction returns the RawTransaction field value if set, zero value otherwise.
func (o *QuorumTransactionConfig) GetRawTransaction() string {
	if o == nil || IsNil(o.RawTransaction) {
		var ret string
		return ret
	}
	return *o.RawTransaction
}

// GetRawTransactionOk returns a tuple with the RawTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuorumTransactionConfig) GetRawTransactionOk() (*string, bool) {
	if o == nil || IsNil(o.RawTransaction) {
		return nil, false
	}
	return o.RawTransaction, true
}

// HasRawTransaction returns a boolean if a field has been set.
func (o *QuorumTransactionConfig) HasRawTransaction() bool {
	if o != nil && !IsNil(o.RawTransaction) {
		return true
	}

	return false
}

// SetRawTransaction gets a reference to the given string and assigns it to the RawTransaction field.
func (o *QuorumTransactionConfig) SetRawTransaction(v string) {
	o.RawTransaction = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *QuorumTransactionConfig) GetFrom() QuorumTransactionConfigFrom {
	if o == nil || IsNil(o.From) {
		var ret QuorumTransactionConfigFrom
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuorumTransactionConfig) GetFromOk() (*QuorumTransactionConfigFrom, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *QuorumTransactionConfig) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given QuorumTransactionConfigFrom and assigns it to the From field.
func (o *QuorumTransactionConfig) SetFrom(v QuorumTransactionConfigFrom) {
	o.From = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *QuorumTransactionConfig) GetTo() QuorumTransactionConfigTo {
	if o == nil || IsNil(o.To) {
		var ret QuorumTransactionConfigTo
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuorumTransactionConfig) GetToOk() (*QuorumTransactionConfigTo, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *QuorumTransactionConfig) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given QuorumTransactionConfigTo and assigns it to the To field.
func (o *QuorumTransactionConfig) SetTo(v QuorumTransactionConfigTo) {
	o.To = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *QuorumTransactionConfig) GetValue() QuorumTransactionConfigFrom {
	if o == nil || IsNil(o.Value) {
		var ret QuorumTransactionConfigFrom
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuorumTransactionConfig) GetValueOk() (*QuorumTransactionConfigFrom, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *QuorumTransactionConfig) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given QuorumTransactionConfigFrom and assigns it to the Value field.
func (o *QuorumTransactionConfig) SetValue(v QuorumTransactionConfigFrom) {
	o.Value = &v
}

// GetGas returns the Gas field value if set, zero value otherwise.
func (o *QuorumTransactionConfig) GetGas() QuorumTransactionConfigFrom {
	if o == nil || IsNil(o.Gas) {
		var ret QuorumTransactionConfigFrom
		return ret
	}
	return *o.Gas
}

// GetGasOk returns a tuple with the Gas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuorumTransactionConfig) GetGasOk() (*QuorumTransactionConfigFrom, bool) {
	if o == nil || IsNil(o.Gas) {
		return nil, false
	}
	return o.Gas, true
}

// HasGas returns a boolean if a field has been set.
func (o *QuorumTransactionConfig) HasGas() bool {
	if o != nil && !IsNil(o.Gas) {
		return true
	}

	return false
}

// SetGas gets a reference to the given QuorumTransactionConfigFrom and assigns it to the Gas field.
func (o *QuorumTransactionConfig) SetGas(v QuorumTransactionConfigFrom) {
	o.Gas = &v
}

// GetGasPrice returns the GasPrice field value if set, zero value otherwise.
func (o *QuorumTransactionConfig) GetGasPrice() QuorumTransactionConfigFrom {
	if o == nil || IsNil(o.GasPrice) {
		var ret QuorumTransactionConfigFrom
		return ret
	}
	return *o.GasPrice
}

// GetGasPriceOk returns a tuple with the GasPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuorumTransactionConfig) GetGasPriceOk() (*QuorumTransactionConfigFrom, bool) {
	if o == nil || IsNil(o.GasPrice) {
		return nil, false
	}
	return o.GasPrice, true
}

// HasGasPrice returns a boolean if a field has been set.
func (o *QuorumTransactionConfig) HasGasPrice() bool {
	if o != nil && !IsNil(o.GasPrice) {
		return true
	}

	return false
}

// SetGasPrice gets a reference to the given QuorumTransactionConfigFrom and assigns it to the GasPrice field.
func (o *QuorumTransactionConfig) SetGasPrice(v QuorumTransactionConfigFrom) {
	o.GasPrice = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *QuorumTransactionConfig) GetNonce() float32 {
	if o == nil || IsNil(o.Nonce) {
		var ret float32
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuorumTransactionConfig) GetNonceOk() (*float32, bool) {
	if o == nil || IsNil(o.Nonce) {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *QuorumTransactionConfig) HasNonce() bool {
	if o != nil && !IsNil(o.Nonce) {
		return true
	}

	return false
}

// SetNonce gets a reference to the given float32 and assigns it to the Nonce field.
func (o *QuorumTransactionConfig) SetNonce(v float32) {
	o.Nonce = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *QuorumTransactionConfig) GetData() QuorumTransactionConfigTo {
	if o == nil || IsNil(o.Data) {
		var ret QuorumTransactionConfigTo
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuorumTransactionConfig) GetDataOk() (*QuorumTransactionConfigTo, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *QuorumTransactionConfig) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given QuorumTransactionConfigTo and assigns it to the Data field.
func (o *QuorumTransactionConfig) SetData(v QuorumTransactionConfigTo) {
	o.Data = &v
}

func (o QuorumTransactionConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuorumTransactionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RawTransaction) {
		toSerialize["rawTransaction"] = o.RawTransaction
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Gas) {
		toSerialize["gas"] = o.Gas
	}
	if !IsNil(o.GasPrice) {
		toSerialize["gasPrice"] = o.GasPrice
	}
	if !IsNil(o.Nonce) {
		toSerialize["nonce"] = o.Nonce
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuorumTransactionConfig) UnmarshalJSON(bytes []byte) (err error) {
	varQuorumTransactionConfig := _QuorumTransactionConfig{}

	if err = json.Unmarshal(bytes, &varQuorumTransactionConfig); err == nil {
		*o = QuorumTransactionConfig(varQuorumTransactionConfig)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "rawTransaction")
		delete(additionalProperties, "from")
		delete(additionalProperties, "to")
		delete(additionalProperties, "value")
		delete(additionalProperties, "gas")
		delete(additionalProperties, "gasPrice")
		delete(additionalProperties, "nonce")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuorumTransactionConfig struct {
	value *QuorumTransactionConfig
	isSet bool
}

func (v NullableQuorumTransactionConfig) Get() *QuorumTransactionConfig {
	return v.value
}

func (v *NullableQuorumTransactionConfig) Set(val *QuorumTransactionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableQuorumTransactionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableQuorumTransactionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuorumTransactionConfig(val *QuorumTransactionConfig) *NullableQuorumTransactionConfig {
	return &NullableQuorumTransactionConfig{value: val, isSet: true}
}

func (v NullableQuorumTransactionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuorumTransactionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


