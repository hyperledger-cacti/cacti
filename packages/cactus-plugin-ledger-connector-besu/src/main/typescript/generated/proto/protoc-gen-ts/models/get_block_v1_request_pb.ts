/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: models/get_block_v1_request_pb.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../google/protobuf/any";
import * as pb_1 from "google-protobuf";
export namespace org.hyperledger.cacti.plugin.ledger.connector.besu {
    export class GetBlockV1RequestPB extends pb_1.Message {
        #one_of_decls: number[][] = [[273815337]];
        constructor(data?: any[] | ({} & (({
            blockHashOrBlockNumber?: dependency_1.google.protobuf.Any;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("blockHashOrBlockNumber" in data && data.blockHashOrBlockNumber != undefined) {
                    this.blockHashOrBlockNumber = data.blockHashOrBlockNumber;
                }
            }
        }
        get blockHashOrBlockNumber() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Any, 273815337) as dependency_1.google.protobuf.Any;
        }
        set blockHashOrBlockNumber(value: dependency_1.google.protobuf.Any) {
            pb_1.Message.setOneofWrapperField(this, 273815337, this.#one_of_decls[0], value);
        }
        get has_blockHashOrBlockNumber() {
            return pb_1.Message.getField(this, 273815337) != null;
        }
        get _blockHashOrBlockNumber() {
            const cases: {
                [index: number]: "none" | "blockHashOrBlockNumber";
            } = {
                0: "none",
                273815337: "blockHashOrBlockNumber"
            };
            return cases[pb_1.Message.computeOneofCase(this, [273815337])];
        }
        static fromObject(data: {
            blockHashOrBlockNumber?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
        }): GetBlockV1RequestPB {
            const message = new GetBlockV1RequestPB({});
            if (data.blockHashOrBlockNumber != null) {
                message.blockHashOrBlockNumber = dependency_1.google.protobuf.Any.fromObject(data.blockHashOrBlockNumber);
            }
            return message;
        }
        toObject() {
            const data: {
                blockHashOrBlockNumber?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>;
            } = {};
            if (this.blockHashOrBlockNumber != null) {
                data.blockHashOrBlockNumber = this.blockHashOrBlockNumber.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_blockHashOrBlockNumber)
                writer.writeMessage(273815337, this.blockHashOrBlockNumber, () => this.blockHashOrBlockNumber.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GetBlockV1RequestPB {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetBlockV1RequestPB();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 273815337:
                        reader.readMessage(message.blockHashOrBlockNumber, () => message.blockHashOrBlockNumber = dependency_1.google.protobuf.Any.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GetBlockV1RequestPB {
            return GetBlockV1RequestPB.deserialize(bytes);
        }
    }
}
