/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: models/web3_signing_credential_private_key_hex_pb.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../google/protobuf/any";
import * as dependency_2 from "./web3_signing_credential_type_pb";
import * as pb_1 from "google-protobuf";
export namespace org.hyperledger.cacti.plugin.ledger.connector.besu {
    export class Web3SigningCredentialPrivateKeyHexPB extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            type?: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialTypePB;
            ethAccount?: string;
            secret?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("ethAccount" in data && data.ethAccount != undefined) {
                    this.ethAccount = data.ethAccount;
                }
                if ("secret" in data && data.secret != undefined) {
                    this.secret = data.secret;
                }
            }
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 3575610, dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialTypePB.Web3SigningCredentialTypePB_CACTUS_KEYCHAIN_REF) as dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialTypePB;
        }
        set type(value: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialTypePB) {
            pb_1.Message.setField(this, 3575610, value);
        }
        get ethAccount() {
            return pb_1.Message.getFieldWithDefault(this, 528332204, "") as string;
        }
        set ethAccount(value: string) {
            pb_1.Message.setField(this, 528332204, value);
        }
        get secret() {
            return pb_1.Message.getFieldWithDefault(this, 369406289, "") as string;
        }
        set secret(value: string) {
            pb_1.Message.setField(this, 369406289, value);
        }
        static fromObject(data: {
            type?: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialTypePB;
            ethAccount?: string;
            secret?: string;
        }): Web3SigningCredentialPrivateKeyHexPB {
            const message = new Web3SigningCredentialPrivateKeyHexPB({});
            if (data.type != null) {
                message.type = data.type;
            }
            if (data.ethAccount != null) {
                message.ethAccount = data.ethAccount;
            }
            if (data.secret != null) {
                message.secret = data.secret;
            }
            return message;
        }
        toObject() {
            const data: {
                type?: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialTypePB;
                ethAccount?: string;
                secret?: string;
            } = {};
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.ethAccount != null) {
                data.ethAccount = this.ethAccount;
            }
            if (this.secret != null) {
                data.secret = this.secret;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.type != dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialTypePB.Web3SigningCredentialTypePB_CACTUS_KEYCHAIN_REF)
                writer.writeEnum(3575610, this.type);
            if (this.ethAccount.length)
                writer.writeString(528332204, this.ethAccount);
            if (this.secret.length)
                writer.writeString(369406289, this.secret);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Web3SigningCredentialPrivateKeyHexPB {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Web3SigningCredentialPrivateKeyHexPB();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 3575610:
                        message.type = reader.readEnum();
                        break;
                    case 528332204:
                        message.ethAccount = reader.readString();
                        break;
                    case 369406289:
                        message.secret = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Web3SigningCredentialPrivateKeyHexPB {
            return Web3SigningCredentialPrivateKeyHexPB.deserialize(bytes);
        }
    }
}
