/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: models/besu_transaction_config_pb.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../google/protobuf/any";
import * as dependency_2 from "./besu_transaction_config_to_pb";
import * as dependency_3 from "./web3_block_header_timestamp_pb";
import * as pb_1 from "google-protobuf";
export namespace org.hyperledger.cacti.plugin.ledger.connector.besu {
    export class BesuTransactionConfigPB extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            rawTransaction?: string;
            from?: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
            to?: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB;
            value?: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
            gas?: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
            gasPrice?: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
            nonce?: number;
            data?: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("rawTransaction" in data && data.rawTransaction != undefined) {
                    this.rawTransaction = data.rawTransaction;
                }
                if ("from" in data && data.from != undefined) {
                    this.from = data.from;
                }
                if ("to" in data && data.to != undefined) {
                    this.to = data.to;
                }
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
                if ("gas" in data && data.gas != undefined) {
                    this.gas = data.gas;
                }
                if ("gasPrice" in data && data.gasPrice != undefined) {
                    this.gasPrice = data.gasPrice;
                }
                if ("nonce" in data && data.nonce != undefined) {
                    this.nonce = data.nonce;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
            }
        }
        get rawTransaction() {
            return pb_1.Message.getFieldWithDefault(this, 185047449, "") as string;
        }
        set rawTransaction(value: string) {
            pb_1.Message.setField(this, 185047449, value);
        }
        get from() {
            return pb_1.Message.getWrapperField(this, dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB, 3151786) as dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
        }
        set from(value: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB) {
            pb_1.Message.setWrapperField(this, 3151786, value);
        }
        get has_from() {
            return pb_1.Message.getField(this, 3151786) != null;
        }
        get to() {
            return pb_1.Message.getWrapperField(this, dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB, 3707) as dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB;
        }
        set to(value: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB) {
            pb_1.Message.setWrapperField(this, 3707, value);
        }
        get has_to() {
            return pb_1.Message.getField(this, 3707) != null;
        }
        get value() {
            return pb_1.Message.getWrapperField(this, dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB, 111972721) as dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
        }
        set value(value: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB) {
            pb_1.Message.setWrapperField(this, 111972721, value);
        }
        get has_value() {
            return pb_1.Message.getField(this, 111972721) != null;
        }
        get gas() {
            return pb_1.Message.getWrapperField(this, dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB, 102105) as dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
        }
        set gas(value: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB) {
            pb_1.Message.setWrapperField(this, 102105, value);
        }
        get has_gas() {
            return pb_1.Message.getField(this, 102105) != null;
        }
        get gasPrice() {
            return pb_1.Message.getWrapperField(this, dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB, 5271059) as dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
        }
        set gasPrice(value: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB) {
            pb_1.Message.setWrapperField(this, 5271059, value);
        }
        get has_gasPrice() {
            return pb_1.Message.getField(this, 5271059) != null;
        }
        get nonce() {
            return pb_1.Message.getFieldWithDefault(this, 105002991, 0) as number;
        }
        set nonce(value: number) {
            pb_1.Message.setField(this, 105002991, value);
        }
        get data() {
            return pb_1.Message.getWrapperField(this, dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB, 3076010) as dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB;
        }
        set data(value: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB) {
            pb_1.Message.setWrapperField(this, 3076010, value);
        }
        get has_data() {
            return pb_1.Message.getField(this, 3076010) != null;
        }
        static fromObject(data: {
            rawTransaction?: string;
            from?: ReturnType<typeof dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
            to?: ReturnType<typeof dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB.prototype.toObject>;
            value?: ReturnType<typeof dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
            gas?: ReturnType<typeof dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
            gasPrice?: ReturnType<typeof dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
            nonce?: number;
            data?: ReturnType<typeof dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB.prototype.toObject>;
        }): BesuTransactionConfigPB {
            const message = new BesuTransactionConfigPB({});
            if (data.rawTransaction != null) {
                message.rawTransaction = data.rawTransaction;
            }
            if (data.from != null) {
                message.from = dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.fromObject(data.from);
            }
            if (data.to != null) {
                message.to = dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB.fromObject(data.to);
            }
            if (data.value != null) {
                message.value = dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.fromObject(data.value);
            }
            if (data.gas != null) {
                message.gas = dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.fromObject(data.gas);
            }
            if (data.gasPrice != null) {
                message.gasPrice = dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.fromObject(data.gasPrice);
            }
            if (data.nonce != null) {
                message.nonce = data.nonce;
            }
            if (data.data != null) {
                message.data = dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB.fromObject(data.data);
            }
            return message;
        }
        toObject() {
            const data: {
                rawTransaction?: string;
                from?: ReturnType<typeof dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
                to?: ReturnType<typeof dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB.prototype.toObject>;
                value?: ReturnType<typeof dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
                gas?: ReturnType<typeof dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
                gasPrice?: ReturnType<typeof dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
                nonce?: number;
                data?: ReturnType<typeof dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB.prototype.toObject>;
            } = {};
            if (this.rawTransaction != null) {
                data.rawTransaction = this.rawTransaction;
            }
            if (this.from != null) {
                data.from = this.from.toObject();
            }
            if (this.to != null) {
                data.to = this.to.toObject();
            }
            if (this.value != null) {
                data.value = this.value.toObject();
            }
            if (this.gas != null) {
                data.gas = this.gas.toObject();
            }
            if (this.gasPrice != null) {
                data.gasPrice = this.gasPrice.toObject();
            }
            if (this.nonce != null) {
                data.nonce = this.nonce;
            }
            if (this.data != null) {
                data.data = this.data.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.rawTransaction.length)
                writer.writeString(185047449, this.rawTransaction);
            if (this.has_from)
                writer.writeMessage(3151786, this.from, () => this.from.serialize(writer));
            if (this.has_to)
                writer.writeMessage(3707, this.to, () => this.to.serialize(writer));
            if (this.has_value)
                writer.writeMessage(111972721, this.value, () => this.value.serialize(writer));
            if (this.has_gas)
                writer.writeMessage(102105, this.gas, () => this.gas.serialize(writer));
            if (this.has_gasPrice)
                writer.writeMessage(5271059, this.gasPrice, () => this.gasPrice.serialize(writer));
            if (this.nonce != 0)
                writer.writeFloat(105002991, this.nonce);
            if (this.has_data)
                writer.writeMessage(3076010, this.data, () => this.data.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): BesuTransactionConfigPB {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new BesuTransactionConfigPB();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 185047449:
                        message.rawTransaction = reader.readString();
                        break;
                    case 3151786:
                        reader.readMessage(message.from, () => message.from = dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.deserialize(reader));
                        break;
                    case 3707:
                        reader.readMessage(message.to, () => message.to = dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB.deserialize(reader));
                        break;
                    case 111972721:
                        reader.readMessage(message.value, () => message.value = dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.deserialize(reader));
                        break;
                    case 102105:
                        reader.readMessage(message.gas, () => message.gas = dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.deserialize(reader));
                        break;
                    case 5271059:
                        reader.readMessage(message.gasPrice, () => message.gasPrice = dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.deserialize(reader));
                        break;
                    case 105002991:
                        message.nonce = reader.readFloat();
                        break;
                    case 3076010:
                        reader.readMessage(message.data, () => message.data = dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuTransactionConfigToPB.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): BesuTransactionConfigPB {
            return BesuTransactionConfigPB.deserialize(bytes);
        }
    }
}
