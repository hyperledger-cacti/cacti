/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: models/consistency_strategy_pb.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../google/protobuf/any";
import * as dependency_2 from "./receipt_type_pb";
import * as pb_1 from "google-protobuf";
export namespace org.hyperledger.cacti.plugin.ledger.connector.besu {
    export class ConsistencyStrategyPB extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            receiptType?: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.ReceiptTypePB;
            timeoutMs?: number;
            blockConfirmations?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("receiptType" in data && data.receiptType != undefined) {
                    this.receiptType = data.receiptType;
                }
                if ("timeoutMs" in data && data.timeoutMs != undefined) {
                    this.timeoutMs = data.timeoutMs;
                }
                if ("blockConfirmations" in data && data.blockConfirmations != undefined) {
                    this.blockConfirmations = data.blockConfirmations;
                }
            }
        }
        get receiptType() {
            return pb_1.Message.getFieldWithDefault(this, 423008661, dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.ReceiptTypePB.ReceiptTypePB_NODE_TX_POOL_ACK) as dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.ReceiptTypePB;
        }
        set receiptType(value: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.ReceiptTypePB) {
            pb_1.Message.setField(this, 423008661, value);
        }
        get timeoutMs() {
            return pb_1.Message.getFieldWithDefault(this, 51479271, 0) as number;
        }
        set timeoutMs(value: number) {
            pb_1.Message.setField(this, 51479271, value);
        }
        get blockConfirmations() {
            return pb_1.Message.getFieldWithDefault(this, 207555762, 0) as number;
        }
        set blockConfirmations(value: number) {
            pb_1.Message.setField(this, 207555762, value);
        }
        static fromObject(data: {
            receiptType?: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.ReceiptTypePB;
            timeoutMs?: number;
            blockConfirmations?: number;
        }): ConsistencyStrategyPB {
            const message = new ConsistencyStrategyPB({});
            if (data.receiptType != null) {
                message.receiptType = data.receiptType;
            }
            if (data.timeoutMs != null) {
                message.timeoutMs = data.timeoutMs;
            }
            if (data.blockConfirmations != null) {
                message.blockConfirmations = data.blockConfirmations;
            }
            return message;
        }
        toObject() {
            const data: {
                receiptType?: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.ReceiptTypePB;
                timeoutMs?: number;
                blockConfirmations?: number;
            } = {};
            if (this.receiptType != null) {
                data.receiptType = this.receiptType;
            }
            if (this.timeoutMs != null) {
                data.timeoutMs = this.timeoutMs;
            }
            if (this.blockConfirmations != null) {
                data.blockConfirmations = this.blockConfirmations;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.receiptType != dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.ReceiptTypePB.ReceiptTypePB_NODE_TX_POOL_ACK)
                writer.writeEnum(423008661, this.receiptType);
            if (this.timeoutMs != 0)
                writer.writeInt32(51479271, this.timeoutMs);
            if (this.blockConfirmations != 0)
                writer.writeInt32(207555762, this.blockConfirmations);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ConsistencyStrategyPB {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ConsistencyStrategyPB();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 423008661:
                        message.receiptType = reader.readEnum();
                        break;
                    case 51479271:
                        message.timeoutMs = reader.readInt32();
                        break;
                    case 207555762:
                        message.blockConfirmations = reader.readInt32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ConsistencyStrategyPB {
            return ConsistencyStrategyPB.deserialize(bytes);
        }
    }
}
