/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: models/evm_log_pb.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../google/protobuf/any";
import * as pb_1 from "google-protobuf";
export namespace org.hyperledger.cacti.plugin.ledger.connector.besu {
    export class EvmLogPB extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            address?: string;
            data?: string;
            blockHash?: string;
            transactionHash?: string;
            topics?: string[];
            logIndex?: number;
            transactionIndex?: number;
            blockNumber?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [331163357], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("address" in data && data.address != undefined) {
                    this.address = data.address;
                }
                if ("data" in data && data.data != undefined) {
                    this.data = data.data;
                }
                if ("blockHash" in data && data.blockHash != undefined) {
                    this.blockHash = data.blockHash;
                }
                if ("transactionHash" in data && data.transactionHash != undefined) {
                    this.transactionHash = data.transactionHash;
                }
                if ("topics" in data && data.topics != undefined) {
                    this.topics = data.topics;
                }
                if ("logIndex" in data && data.logIndex != undefined) {
                    this.logIndex = data.logIndex;
                }
                if ("transactionIndex" in data && data.transactionIndex != undefined) {
                    this.transactionIndex = data.transactionIndex;
                }
                if ("blockNumber" in data && data.blockNumber != undefined) {
                    this.blockNumber = data.blockNumber;
                }
            }
        }
        get address() {
            return pb_1.Message.getFieldWithDefault(this, 73950222, "") as string;
        }
        set address(value: string) {
            pb_1.Message.setField(this, 73950222, value);
        }
        get data() {
            return pb_1.Message.getFieldWithDefault(this, 3076010, "") as string;
        }
        set data(value: string) {
            pb_1.Message.setField(this, 3076010, value);
        }
        get blockHash() {
            return pb_1.Message.getFieldWithDefault(this, 335211324, "") as string;
        }
        set blockHash(value: string) {
            pb_1.Message.setField(this, 335211324, value);
        }
        get transactionHash() {
            return pb_1.Message.getFieldWithDefault(this, 188901646, "") as string;
        }
        set transactionHash(value: string) {
            pb_1.Message.setField(this, 188901646, value);
        }
        get topics() {
            return pb_1.Message.getFieldWithDefault(this, 331163357, []) as string[];
        }
        set topics(value: string[]) {
            pb_1.Message.setField(this, 331163357, value);
        }
        get logIndex() {
            return pb_1.Message.getFieldWithDefault(this, 382599153, 0) as number;
        }
        set logIndex(value: number) {
            pb_1.Message.setField(this, 382599153, value);
        }
        get transactionIndex() {
            return pb_1.Message.getFieldWithDefault(this, 488538260, 0) as number;
        }
        set transactionIndex(value: number) {
            pb_1.Message.setField(this, 488538260, value);
        }
        get blockNumber() {
            return pb_1.Message.getFieldWithDefault(this, 205598263, 0) as number;
        }
        set blockNumber(value: number) {
            pb_1.Message.setField(this, 205598263, value);
        }
        static fromObject(data: {
            address?: string;
            data?: string;
            blockHash?: string;
            transactionHash?: string;
            topics?: string[];
            logIndex?: number;
            transactionIndex?: number;
            blockNumber?: number;
        }): EvmLogPB {
            const message = new EvmLogPB({});
            if (data.address != null) {
                message.address = data.address;
            }
            if (data.data != null) {
                message.data = data.data;
            }
            if (data.blockHash != null) {
                message.blockHash = data.blockHash;
            }
            if (data.transactionHash != null) {
                message.transactionHash = data.transactionHash;
            }
            if (data.topics != null) {
                message.topics = data.topics;
            }
            if (data.logIndex != null) {
                message.logIndex = data.logIndex;
            }
            if (data.transactionIndex != null) {
                message.transactionIndex = data.transactionIndex;
            }
            if (data.blockNumber != null) {
                message.blockNumber = data.blockNumber;
            }
            return message;
        }
        toObject() {
            const data: {
                address?: string;
                data?: string;
                blockHash?: string;
                transactionHash?: string;
                topics?: string[];
                logIndex?: number;
                transactionIndex?: number;
                blockNumber?: number;
            } = {};
            if (this.address != null) {
                data.address = this.address;
            }
            if (this.data != null) {
                data.data = this.data;
            }
            if (this.blockHash != null) {
                data.blockHash = this.blockHash;
            }
            if (this.transactionHash != null) {
                data.transactionHash = this.transactionHash;
            }
            if (this.topics != null) {
                data.topics = this.topics;
            }
            if (this.logIndex != null) {
                data.logIndex = this.logIndex;
            }
            if (this.transactionIndex != null) {
                data.transactionIndex = this.transactionIndex;
            }
            if (this.blockNumber != null) {
                data.blockNumber = this.blockNumber;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.address.length)
                writer.writeString(73950222, this.address);
            if (this.data.length)
                writer.writeString(3076010, this.data);
            if (this.blockHash.length)
                writer.writeString(335211324, this.blockHash);
            if (this.transactionHash.length)
                writer.writeString(188901646, this.transactionHash);
            if (this.topics.length)
                writer.writeRepeatedString(331163357, this.topics);
            if (this.logIndex != 0)
                writer.writeFloat(382599153, this.logIndex);
            if (this.transactionIndex != 0)
                writer.writeFloat(488538260, this.transactionIndex);
            if (this.blockNumber != 0)
                writer.writeFloat(205598263, this.blockNumber);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EvmLogPB {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EvmLogPB();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 73950222:
                        message.address = reader.readString();
                        break;
                    case 3076010:
                        message.data = reader.readString();
                        break;
                    case 335211324:
                        message.blockHash = reader.readString();
                        break;
                    case 188901646:
                        message.transactionHash = reader.readString();
                        break;
                    case 331163357:
                        pb_1.Message.addToRepeatedField(message, 331163357, reader.readString());
                        break;
                    case 382599153:
                        message.logIndex = reader.readFloat();
                        break;
                    case 488538260:
                        message.transactionIndex = reader.readFloat();
                        break;
                    case 205598263:
                        message.blockNumber = reader.readFloat();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): EvmLogPB {
            return EvmLogPB.deserialize(bytes);
        }
    }
}
