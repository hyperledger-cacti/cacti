/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: models/invoke_contract_v1_request_pb.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../google/protobuf/any";
import * as dependency_2 from "./besu_private_transaction_config_pb";
import * as dependency_3 from "./eth_contract_invocation_type_pb";
import * as dependency_4 from "./web3_block_header_timestamp_pb";
import * as dependency_5 from "./web3_signing_credential_pb";
import * as pb_1 from "google-protobuf";
export namespace org.hyperledger.cacti.plugin.ledger.connector.besu {
    export class InvokeContractV1RequestPB extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            contractName?: string;
            signingCredential?: dependency_5.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB;
            invocationType?: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.EthContractInvocationTypePB;
            methodName?: string;
            params?: dependency_1.google.protobuf.Any[];
            contractAbi?: dependency_1.google.protobuf.Any[];
            contractAddress?: string;
            value?: dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
            gas?: dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
            gasPrice?: dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
            nonce?: number;
            timeoutMs?: number;
            keychainId?: string;
            privateTransactionConfig?: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [458557051, 512852493], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("contractName" in data && data.contractName != undefined) {
                    this.contractName = data.contractName;
                }
                if ("signingCredential" in data && data.signingCredential != undefined) {
                    this.signingCredential = data.signingCredential;
                }
                if ("invocationType" in data && data.invocationType != undefined) {
                    this.invocationType = data.invocationType;
                }
                if ("methodName" in data && data.methodName != undefined) {
                    this.methodName = data.methodName;
                }
                if ("params" in data && data.params != undefined) {
                    this.params = data.params;
                }
                if ("contractAbi" in data && data.contractAbi != undefined) {
                    this.contractAbi = data.contractAbi;
                }
                if ("contractAddress" in data && data.contractAddress != undefined) {
                    this.contractAddress = data.contractAddress;
                }
                if ("value" in data && data.value != undefined) {
                    this.value = data.value;
                }
                if ("gas" in data && data.gas != undefined) {
                    this.gas = data.gas;
                }
                if ("gasPrice" in data && data.gasPrice != undefined) {
                    this.gasPrice = data.gasPrice;
                }
                if ("nonce" in data && data.nonce != undefined) {
                    this.nonce = data.nonce;
                }
                if ("timeoutMs" in data && data.timeoutMs != undefined) {
                    this.timeoutMs = data.timeoutMs;
                }
                if ("keychainId" in data && data.keychainId != undefined) {
                    this.keychainId = data.keychainId;
                }
                if ("privateTransactionConfig" in data && data.privateTransactionConfig != undefined) {
                    this.privateTransactionConfig = data.privateTransactionConfig;
                }
            }
        }
        get contractName() {
            return pb_1.Message.getFieldWithDefault(this, 328784197, "") as string;
        }
        set contractName(value: string) {
            pb_1.Message.setField(this, 328784197, value);
        }
        get signingCredential() {
            return pb_1.Message.getWrapperField(this, dependency_5.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB, 233015102) as dependency_5.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB;
        }
        set signingCredential(value: dependency_5.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB) {
            pb_1.Message.setWrapperField(this, 233015102, value);
        }
        get has_signingCredential() {
            return pb_1.Message.getField(this, 233015102) != null;
        }
        get invocationType() {
            return pb_1.Message.getFieldWithDefault(this, 163296237, dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.EthContractInvocationTypePB.EthContractInvocationTypePB_SEND) as dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.EthContractInvocationTypePB;
        }
        set invocationType(value: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.EthContractInvocationTypePB) {
            pb_1.Message.setField(this, 163296237, value);
        }
        get methodName() {
            return pb_1.Message.getFieldWithDefault(this, 186292469, "") as string;
        }
        set methodName(value: string) {
            pb_1.Message.setField(this, 186292469, value);
        }
        get params() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.google.protobuf.Any, 458557051) as dependency_1.google.protobuf.Any[];
        }
        set params(value: dependency_1.google.protobuf.Any[]) {
            pb_1.Message.setRepeatedWrapperField(this, 458557051, value);
        }
        get contractAbi() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.google.protobuf.Any, 512852493) as dependency_1.google.protobuf.Any[];
        }
        set contractAbi(value: dependency_1.google.protobuf.Any[]) {
            pb_1.Message.setRepeatedWrapperField(this, 512852493, value);
        }
        get contractAddress() {
            return pb_1.Message.getFieldWithDefault(this, 214641282, "") as string;
        }
        set contractAddress(value: string) {
            pb_1.Message.setField(this, 214641282, value);
        }
        get value() {
            return pb_1.Message.getWrapperField(this, dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB, 111972721) as dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
        }
        set value(value: dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB) {
            pb_1.Message.setWrapperField(this, 111972721, value);
        }
        get has_value() {
            return pb_1.Message.getField(this, 111972721) != null;
        }
        get gas() {
            return pb_1.Message.getWrapperField(this, dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB, 102105) as dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
        }
        set gas(value: dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB) {
            pb_1.Message.setWrapperField(this, 102105, value);
        }
        get has_gas() {
            return pb_1.Message.getField(this, 102105) != null;
        }
        get gasPrice() {
            return pb_1.Message.getWrapperField(this, dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB, 5271059) as dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB;
        }
        set gasPrice(value: dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB) {
            pb_1.Message.setWrapperField(this, 5271059, value);
        }
        get has_gasPrice() {
            return pb_1.Message.getField(this, 5271059) != null;
        }
        get nonce() {
            return pb_1.Message.getFieldWithDefault(this, 105002991, 0) as number;
        }
        set nonce(value: number) {
            pb_1.Message.setField(this, 105002991, value);
        }
        get timeoutMs() {
            return pb_1.Message.getFieldWithDefault(this, 51479271, 0) as number;
        }
        set timeoutMs(value: number) {
            pb_1.Message.setField(this, 51479271, value);
        }
        get keychainId() {
            return pb_1.Message.getFieldWithDefault(this, 14058372, "") as string;
        }
        set keychainId(value: string) {
            pb_1.Message.setField(this, 14058372, value);
        }
        get privateTransactionConfig() {
            return pb_1.Message.getWrapperField(this, dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB, 276796542) as dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB;
        }
        set privateTransactionConfig(value: dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB) {
            pb_1.Message.setWrapperField(this, 276796542, value);
        }
        get has_privateTransactionConfig() {
            return pb_1.Message.getField(this, 276796542) != null;
        }
        static fromObject(data: {
            contractName?: string;
            signingCredential?: ReturnType<typeof dependency_5.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB.prototype.toObject>;
            invocationType?: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.EthContractInvocationTypePB;
            methodName?: string;
            params?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>[];
            contractAbi?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>[];
            contractAddress?: string;
            value?: ReturnType<typeof dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
            gas?: ReturnType<typeof dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
            gasPrice?: ReturnType<typeof dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
            nonce?: number;
            timeoutMs?: number;
            keychainId?: string;
            privateTransactionConfig?: ReturnType<typeof dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB.prototype.toObject>;
        }): InvokeContractV1RequestPB {
            const message = new InvokeContractV1RequestPB({});
            if (data.contractName != null) {
                message.contractName = data.contractName;
            }
            if (data.signingCredential != null) {
                message.signingCredential = dependency_5.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB.fromObject(data.signingCredential);
            }
            if (data.invocationType != null) {
                message.invocationType = data.invocationType;
            }
            if (data.methodName != null) {
                message.methodName = data.methodName;
            }
            if (data.params != null) {
                message.params = data.params.map(item => dependency_1.google.protobuf.Any.fromObject(item));
            }
            if (data.contractAbi != null) {
                message.contractAbi = data.contractAbi.map(item => dependency_1.google.protobuf.Any.fromObject(item));
            }
            if (data.contractAddress != null) {
                message.contractAddress = data.contractAddress;
            }
            if (data.value != null) {
                message.value = dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.fromObject(data.value);
            }
            if (data.gas != null) {
                message.gas = dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.fromObject(data.gas);
            }
            if (data.gasPrice != null) {
                message.gasPrice = dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.fromObject(data.gasPrice);
            }
            if (data.nonce != null) {
                message.nonce = data.nonce;
            }
            if (data.timeoutMs != null) {
                message.timeoutMs = data.timeoutMs;
            }
            if (data.keychainId != null) {
                message.keychainId = data.keychainId;
            }
            if (data.privateTransactionConfig != null) {
                message.privateTransactionConfig = dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB.fromObject(data.privateTransactionConfig);
            }
            return message;
        }
        toObject() {
            const data: {
                contractName?: string;
                signingCredential?: ReturnType<typeof dependency_5.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB.prototype.toObject>;
                invocationType?: dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.EthContractInvocationTypePB;
                methodName?: string;
                params?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>[];
                contractAbi?: ReturnType<typeof dependency_1.google.protobuf.Any.prototype.toObject>[];
                contractAddress?: string;
                value?: ReturnType<typeof dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
                gas?: ReturnType<typeof dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
                gasPrice?: ReturnType<typeof dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.prototype.toObject>;
                nonce?: number;
                timeoutMs?: number;
                keychainId?: string;
                privateTransactionConfig?: ReturnType<typeof dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB.prototype.toObject>;
            } = {};
            if (this.contractName != null) {
                data.contractName = this.contractName;
            }
            if (this.signingCredential != null) {
                data.signingCredential = this.signingCredential.toObject();
            }
            if (this.invocationType != null) {
                data.invocationType = this.invocationType;
            }
            if (this.methodName != null) {
                data.methodName = this.methodName;
            }
            if (this.params != null) {
                data.params = this.params.map((item: dependency_1.google.protobuf.Any) => item.toObject());
            }
            if (this.contractAbi != null) {
                data.contractAbi = this.contractAbi.map((item: dependency_1.google.protobuf.Any) => item.toObject());
            }
            if (this.contractAddress != null) {
                data.contractAddress = this.contractAddress;
            }
            if (this.value != null) {
                data.value = this.value.toObject();
            }
            if (this.gas != null) {
                data.gas = this.gas.toObject();
            }
            if (this.gasPrice != null) {
                data.gasPrice = this.gasPrice.toObject();
            }
            if (this.nonce != null) {
                data.nonce = this.nonce;
            }
            if (this.timeoutMs != null) {
                data.timeoutMs = this.timeoutMs;
            }
            if (this.keychainId != null) {
                data.keychainId = this.keychainId;
            }
            if (this.privateTransactionConfig != null) {
                data.privateTransactionConfig = this.privateTransactionConfig.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.contractName.length)
                writer.writeString(328784197, this.contractName);
            if (this.has_signingCredential)
                writer.writeMessage(233015102, this.signingCredential, () => this.signingCredential.serialize(writer));
            if (this.invocationType != dependency_3.org.hyperledger.cacti.plugin.ledger.connector.besu.EthContractInvocationTypePB.EthContractInvocationTypePB_SEND)
                writer.writeEnum(163296237, this.invocationType);
            if (this.methodName.length)
                writer.writeString(186292469, this.methodName);
            if (this.params.length)
                writer.writeRepeatedMessage(458557051, this.params, (item: dependency_1.google.protobuf.Any) => item.serialize(writer));
            if (this.contractAbi.length)
                writer.writeRepeatedMessage(512852493, this.contractAbi, (item: dependency_1.google.protobuf.Any) => item.serialize(writer));
            if (this.contractAddress.length)
                writer.writeString(214641282, this.contractAddress);
            if (this.has_value)
                writer.writeMessage(111972721, this.value, () => this.value.serialize(writer));
            if (this.has_gas)
                writer.writeMessage(102105, this.gas, () => this.gas.serialize(writer));
            if (this.has_gasPrice)
                writer.writeMessage(5271059, this.gasPrice, () => this.gasPrice.serialize(writer));
            if (this.nonce != 0)
                writer.writeFloat(105002991, this.nonce);
            if (this.timeoutMs != 0)
                writer.writeFloat(51479271, this.timeoutMs);
            if (this.keychainId.length)
                writer.writeString(14058372, this.keychainId);
            if (this.has_privateTransactionConfig)
                writer.writeMessage(276796542, this.privateTransactionConfig, () => this.privateTransactionConfig.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): InvokeContractV1RequestPB {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new InvokeContractV1RequestPB();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 328784197:
                        message.contractName = reader.readString();
                        break;
                    case 233015102:
                        reader.readMessage(message.signingCredential, () => message.signingCredential = dependency_5.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3SigningCredentialPB.deserialize(reader));
                        break;
                    case 163296237:
                        message.invocationType = reader.readEnum();
                        break;
                    case 186292469:
                        message.methodName = reader.readString();
                        break;
                    case 458557051:
                        reader.readMessage(message.params, () => pb_1.Message.addToRepeatedWrapperField(message, 458557051, dependency_1.google.protobuf.Any.deserialize(reader), dependency_1.google.protobuf.Any));
                        break;
                    case 512852493:
                        reader.readMessage(message.contractAbi, () => pb_1.Message.addToRepeatedWrapperField(message, 512852493, dependency_1.google.protobuf.Any.deserialize(reader), dependency_1.google.protobuf.Any));
                        break;
                    case 214641282:
                        message.contractAddress = reader.readString();
                        break;
                    case 111972721:
                        reader.readMessage(message.value, () => message.value = dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.deserialize(reader));
                        break;
                    case 102105:
                        reader.readMessage(message.gas, () => message.gas = dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.deserialize(reader));
                        break;
                    case 5271059:
                        reader.readMessage(message.gasPrice, () => message.gasPrice = dependency_4.org.hyperledger.cacti.plugin.ledger.connector.besu.Web3BlockHeaderTimestampPB.deserialize(reader));
                        break;
                    case 105002991:
                        message.nonce = reader.readFloat();
                        break;
                    case 51479271:
                        message.timeoutMs = reader.readFloat();
                        break;
                    case 14058372:
                        message.keychainId = reader.readString();
                        break;
                    case 276796542:
                        reader.readMessage(message.privateTransactionConfig, () => message.privateTransactionConfig = dependency_2.org.hyperledger.cacti.plugin.ledger.connector.besu.BesuPrivateTransactionConfigPB.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): InvokeContractV1RequestPB {
            return InvokeContractV1RequestPB.deserialize(bytes);
        }
    }
}
