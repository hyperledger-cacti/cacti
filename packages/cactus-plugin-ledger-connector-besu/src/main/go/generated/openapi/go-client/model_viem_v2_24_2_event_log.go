/*
Hyperledger Cacti Plugin - Besu Connector

Can perform basic tasks on a Besu ledger such as executing transactions, streaming blocks or solidity smart contract events.

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-besu

import (
	"encoding/json"
)

// checks if the ViemV2242EventLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViemV2242EventLog{}

// ViemV2242EventLog struct for ViemV2242EventLog
type ViemV2242EventLog struct {
	// The address of the contract that emitted the log. Contains a 0x prefix.
	Address string `json:"address"`
	// The arguments provided to the Solidity event's constructor at the time of the emission of the event. Note that BigInt values within this object will get serialized into strings during transport because JSON cannot handle BigInts natively.
	Args map[string]interface{} `json:"args"`
	// The block hash as a 0x prefixed HEX string.
	BlockHash string `json:"blockHash"`
	// The block number. Originally provided as a BigInt by the underlying implementation but serialized to a string to avoid data integrity issues during transport since JSON can only handle the old Javascript number type and nothing bigger than that.
	BlockNumber string `json:"blockNumber"`
	// The log data as a 0x prefixed HEX string.
	Data string `json:"data"`
	// The case-sensitive name of the Solidity event type that was emitted on-chain.
	EventName string `json:"eventName"`
	// The log index within the block.
	LogIndex int32 `json:"logIndex"`
	Removed bool `json:"removed"`
	// An array of log topics represented as 0x prefixed HEX strings.
	Topics []string `json:"topics"`
	// The 0x prefixed transaction hash HEX string.
	TransactionHash string `json:"transactionHash"`
	// The transaction index within the block.
	TransactionIndex int32 `json:"transactionIndex"`
}

// NewViemV2242EventLog instantiates a new ViemV2242EventLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViemV2242EventLog(address string, args map[string]interface{}, blockHash string, blockNumber string, data string, eventName string, logIndex int32, removed bool, topics []string, transactionHash string, transactionIndex int32) *ViemV2242EventLog {
	this := ViemV2242EventLog{}
	this.Address = address
	this.Args = args
	this.BlockHash = blockHash
	this.BlockNumber = blockNumber
	this.Data = data
	this.EventName = eventName
	this.LogIndex = logIndex
	this.Removed = removed
	this.Topics = topics
	this.TransactionHash = transactionHash
	this.TransactionIndex = transactionIndex
	return &this
}

// NewViemV2242EventLogWithDefaults instantiates a new ViemV2242EventLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViemV2242EventLogWithDefaults() *ViemV2242EventLog {
	this := ViemV2242EventLog{}
	return &this
}

// GetAddress returns the Address field value
func (o *ViemV2242EventLog) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *ViemV2242EventLog) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *ViemV2242EventLog) SetAddress(v string) {
	o.Address = v
}

// GetArgs returns the Args field value
func (o *ViemV2242EventLog) GetArgs() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Args
}

// GetArgsOk returns a tuple with the Args field value
// and a boolean to check if the value has been set.
func (o *ViemV2242EventLog) GetArgsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Args, true
}

// SetArgs sets field value
func (o *ViemV2242EventLog) SetArgs(v map[string]interface{}) {
	o.Args = v
}

// GetBlockHash returns the BlockHash field value
func (o *ViemV2242EventLog) GetBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BlockHash
}

// GetBlockHashOk returns a tuple with the BlockHash field value
// and a boolean to check if the value has been set.
func (o *ViemV2242EventLog) GetBlockHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockHash, true
}

// SetBlockHash sets field value
func (o *ViemV2242EventLog) SetBlockHash(v string) {
	o.BlockHash = v
}

// GetBlockNumber returns the BlockNumber field value
func (o *ViemV2242EventLog) GetBlockNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value
// and a boolean to check if the value has been set.
func (o *ViemV2242EventLog) GetBlockNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockNumber, true
}

// SetBlockNumber sets field value
func (o *ViemV2242EventLog) SetBlockNumber(v string) {
	o.BlockNumber = v
}

// GetData returns the Data field value
func (o *ViemV2242EventLog) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ViemV2242EventLog) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ViemV2242EventLog) SetData(v string) {
	o.Data = v
}

// GetEventName returns the EventName field value
func (o *ViemV2242EventLog) GetEventName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value
// and a boolean to check if the value has been set.
func (o *ViemV2242EventLog) GetEventNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventName, true
}

// SetEventName sets field value
func (o *ViemV2242EventLog) SetEventName(v string) {
	o.EventName = v
}

// GetLogIndex returns the LogIndex field value
func (o *ViemV2242EventLog) GetLogIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LogIndex
}

// GetLogIndexOk returns a tuple with the LogIndex field value
// and a boolean to check if the value has been set.
func (o *ViemV2242EventLog) GetLogIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogIndex, true
}

// SetLogIndex sets field value
func (o *ViemV2242EventLog) SetLogIndex(v int32) {
	o.LogIndex = v
}

// GetRemoved returns the Removed field value
func (o *ViemV2242EventLog) GetRemoved() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Removed
}

// GetRemovedOk returns a tuple with the Removed field value
// and a boolean to check if the value has been set.
func (o *ViemV2242EventLog) GetRemovedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Removed, true
}

// SetRemoved sets field value
func (o *ViemV2242EventLog) SetRemoved(v bool) {
	o.Removed = v
}

// GetTopics returns the Topics field value
func (o *ViemV2242EventLog) GetTopics() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Topics
}

// GetTopicsOk returns a tuple with the Topics field value
// and a boolean to check if the value has been set.
func (o *ViemV2242EventLog) GetTopicsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Topics, true
}

// SetTopics sets field value
func (o *ViemV2242EventLog) SetTopics(v []string) {
	o.Topics = v
}

// GetTransactionHash returns the TransactionHash field value
func (o *ViemV2242EventLog) GetTransactionHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionHash
}

// GetTransactionHashOk returns a tuple with the TransactionHash field value
// and a boolean to check if the value has been set.
func (o *ViemV2242EventLog) GetTransactionHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionHash, true
}

// SetTransactionHash sets field value
func (o *ViemV2242EventLog) SetTransactionHash(v string) {
	o.TransactionHash = v
}

// GetTransactionIndex returns the TransactionIndex field value
func (o *ViemV2242EventLog) GetTransactionIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TransactionIndex
}

// GetTransactionIndexOk returns a tuple with the TransactionIndex field value
// and a boolean to check if the value has been set.
func (o *ViemV2242EventLog) GetTransactionIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionIndex, true
}

// SetTransactionIndex sets field value
func (o *ViemV2242EventLog) SetTransactionIndex(v int32) {
	o.TransactionIndex = v
}

func (o ViemV2242EventLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViemV2242EventLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["args"] = o.Args
	toSerialize["blockHash"] = o.BlockHash
	toSerialize["blockNumber"] = o.BlockNumber
	toSerialize["data"] = o.Data
	toSerialize["eventName"] = o.EventName
	toSerialize["logIndex"] = o.LogIndex
	toSerialize["removed"] = o.Removed
	toSerialize["topics"] = o.Topics
	toSerialize["transactionHash"] = o.TransactionHash
	toSerialize["transactionIndex"] = o.TransactionIndex
	return toSerialize, nil
}

type NullableViemV2242EventLog struct {
	value *ViemV2242EventLog
	isSet bool
}

func (v NullableViemV2242EventLog) Get() *ViemV2242EventLog {
	return v.value
}

func (v *NullableViemV2242EventLog) Set(val *ViemV2242EventLog) {
	v.value = val
	v.isSet = true
}

func (v NullableViemV2242EventLog) IsSet() bool {
	return v.isSet
}

func (v *NullableViemV2242EventLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViemV2242EventLog(val *ViemV2242EventLog) *NullableViemV2242EventLog {
	return &NullableViemV2242EventLog{value: val, isSet: true}
}

func (v NullableViemV2242EventLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViemV2242EventLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


