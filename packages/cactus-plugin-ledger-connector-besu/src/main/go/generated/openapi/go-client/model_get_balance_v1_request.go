/*
Hyperledger Cactus Plugin - Connector Besu

Can perform basic tasks on a Besu ledger

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-besu

import (
	"encoding/json"
)

// checks if the GetBalanceV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBalanceV1Request{}

// GetBalanceV1Request struct for GetBalanceV1Request
type GetBalanceV1Request struct {
	Address string `json:"address"`
	DefaultBlock interface{} `json:"defaultBlock,omitempty"`
}

// NewGetBalanceV1Request instantiates a new GetBalanceV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBalanceV1Request(address string) *GetBalanceV1Request {
	this := GetBalanceV1Request{}
	this.Address = address
	return &this
}

// NewGetBalanceV1RequestWithDefaults instantiates a new GetBalanceV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBalanceV1RequestWithDefaults() *GetBalanceV1Request {
	this := GetBalanceV1Request{}
	return &this
}

// GetAddress returns the Address field value
func (o *GetBalanceV1Request) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *GetBalanceV1Request) GetAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *GetBalanceV1Request) SetAddress(v string) {
	o.Address = v
}

// GetDefaultBlock returns the DefaultBlock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetBalanceV1Request) GetDefaultBlock() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DefaultBlock
}

// GetDefaultBlockOk returns a tuple with the DefaultBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetBalanceV1Request) GetDefaultBlockOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DefaultBlock) {
		return nil, false
	}
	return &o.DefaultBlock, true
}

// HasDefaultBlock returns a boolean if a field has been set.
func (o *GetBalanceV1Request) HasDefaultBlock() bool {
	if o != nil && IsNil(o.DefaultBlock) {
		return true
	}

	return false
}

// SetDefaultBlock gets a reference to the given interface{} and assigns it to the DefaultBlock field.
func (o *GetBalanceV1Request) SetDefaultBlock(v interface{}) {
	o.DefaultBlock = v
}

func (o GetBalanceV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBalanceV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	if o.DefaultBlock != nil {
		toSerialize["defaultBlock"] = o.DefaultBlock
	}
	return toSerialize, nil
}

type NullableGetBalanceV1Request struct {
	value *GetBalanceV1Request
	isSet bool
}

func (v NullableGetBalanceV1Request) Get() *GetBalanceV1Request {
	return v.value
}

func (v *NullableGetBalanceV1Request) Set(val *GetBalanceV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBalanceV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBalanceV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBalanceV1Request(val *GetBalanceV1Request) *NullableGetBalanceV1Request {
	return &NullableGetBalanceV1Request{value: val, isSet: true}
}

func (v NullableGetBalanceV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBalanceV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


