/*
Hyperledger Cacti Plugin - Besu Connector

Can perform basic tasks on a Besu ledger such as executing transactions, streaming blocks or solidity smart contract events.

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-besu

import (
	"encoding/json"
)

// checks if the EthersV5135EventFragment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EthersV5135EventFragment{}

// EthersV5135EventFragment struct for EthersV5135EventFragment
type EthersV5135EventFragment struct {
	Type string `json:"type"`
	Name string `json:"name"`
	Inputs []map[string]interface{} `json:"inputs"`
	Anonymous bool `json:"anonymous"`
}

// NewEthersV5135EventFragment instantiates a new EthersV5135EventFragment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEthersV5135EventFragment(type_ string, name string, inputs []map[string]interface{}, anonymous bool) *EthersV5135EventFragment {
	this := EthersV5135EventFragment{}
	this.Type = type_
	this.Name = name
	this.Inputs = inputs
	this.Anonymous = anonymous
	return &this
}

// NewEthersV5135EventFragmentWithDefaults instantiates a new EthersV5135EventFragment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEthersV5135EventFragmentWithDefaults() *EthersV5135EventFragment {
	this := EthersV5135EventFragment{}
	return &this
}

// GetType returns the Type field value
func (o *EthersV5135EventFragment) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *EthersV5135EventFragment) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *EthersV5135EventFragment) SetType(v string) {
	o.Type = v
}

// GetName returns the Name field value
func (o *EthersV5135EventFragment) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EthersV5135EventFragment) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EthersV5135EventFragment) SetName(v string) {
	o.Name = v
}

// GetInputs returns the Inputs field value
func (o *EthersV5135EventFragment) GetInputs() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *EthersV5135EventFragment) GetInputsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inputs, true
}

// SetInputs sets field value
func (o *EthersV5135EventFragment) SetInputs(v []map[string]interface{}) {
	o.Inputs = v
}

// GetAnonymous returns the Anonymous field value
func (o *EthersV5135EventFragment) GetAnonymous() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Anonymous
}

// GetAnonymousOk returns a tuple with the Anonymous field value
// and a boolean to check if the value has been set.
func (o *EthersV5135EventFragment) GetAnonymousOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Anonymous, true
}

// SetAnonymous sets field value
func (o *EthersV5135EventFragment) SetAnonymous(v bool) {
	o.Anonymous = v
}

func (o EthersV5135EventFragment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EthersV5135EventFragment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["name"] = o.Name
	toSerialize["inputs"] = o.Inputs
	toSerialize["anonymous"] = o.Anonymous
	return toSerialize, nil
}

type NullableEthersV5135EventFragment struct {
	value *EthersV5135EventFragment
	isSet bool
}

func (v NullableEthersV5135EventFragment) Get() *EthersV5135EventFragment {
	return v.value
}

func (v *NullableEthersV5135EventFragment) Set(val *EthersV5135EventFragment) {
	v.value = val
	v.isSet = true
}

func (v NullableEthersV5135EventFragment) IsSet() bool {
	return v.isSet
}

func (v *NullableEthersV5135EventFragment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEthersV5135EventFragment(val *EthersV5135EventFragment) *NullableEthersV5135EventFragment {
	return &NullableEthersV5135EventFragment{value: val, isSet: true}
}

func (v NullableEthersV5135EventFragment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEthersV5135EventFragment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


