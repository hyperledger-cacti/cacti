/*
Hyperledger Cacti Plugin - Besu Connector

Can perform basic tasks on a Besu ledger such as executing transactions, streaming blocks or solidity smart contract events.

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-besu

import (
	"encoding/json"
)

// checks if the WatchEventsV1ProgressWeb3V161 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchEventsV1ProgressWeb3V161{}

// WatchEventsV1ProgressWeb3V161 The event log as provided by the Web3 v1.6.1 library.
type WatchEventsV1ProgressWeb3V161 struct {
	// A unique identifier for the request that originated this event.
	RequestId string `json:"requestId"`
	EventLog Web3V161EventLog `json:"eventLog"`
	EthersV5135LogDescription EthersV5135LogDescription `json:"ethersV5135LogDescription"`
}

// NewWatchEventsV1ProgressWeb3V161 instantiates a new WatchEventsV1ProgressWeb3V161 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchEventsV1ProgressWeb3V161(requestId string, eventLog Web3V161EventLog, ethersV5135LogDescription EthersV5135LogDescription) *WatchEventsV1ProgressWeb3V161 {
	this := WatchEventsV1ProgressWeb3V161{}
	this.RequestId = requestId
	this.EventLog = eventLog
	this.EthersV5135LogDescription = ethersV5135LogDescription
	return &this
}

// NewWatchEventsV1ProgressWeb3V161WithDefaults instantiates a new WatchEventsV1ProgressWeb3V161 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchEventsV1ProgressWeb3V161WithDefaults() *WatchEventsV1ProgressWeb3V161 {
	this := WatchEventsV1ProgressWeb3V161{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *WatchEventsV1ProgressWeb3V161) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *WatchEventsV1ProgressWeb3V161) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *WatchEventsV1ProgressWeb3V161) SetRequestId(v string) {
	o.RequestId = v
}

// GetEventLog returns the EventLog field value
func (o *WatchEventsV1ProgressWeb3V161) GetEventLog() Web3V161EventLog {
	if o == nil {
		var ret Web3V161EventLog
		return ret
	}

	return o.EventLog
}

// GetEventLogOk returns a tuple with the EventLog field value
// and a boolean to check if the value has been set.
func (o *WatchEventsV1ProgressWeb3V161) GetEventLogOk() (*Web3V161EventLog, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventLog, true
}

// SetEventLog sets field value
func (o *WatchEventsV1ProgressWeb3V161) SetEventLog(v Web3V161EventLog) {
	o.EventLog = v
}

// GetEthersV5135LogDescription returns the EthersV5135LogDescription field value
func (o *WatchEventsV1ProgressWeb3V161) GetEthersV5135LogDescription() EthersV5135LogDescription {
	if o == nil {
		var ret EthersV5135LogDescription
		return ret
	}

	return o.EthersV5135LogDescription
}

// GetEthersV5135LogDescriptionOk returns a tuple with the EthersV5135LogDescription field value
// and a boolean to check if the value has been set.
func (o *WatchEventsV1ProgressWeb3V161) GetEthersV5135LogDescriptionOk() (*EthersV5135LogDescription, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EthersV5135LogDescription, true
}

// SetEthersV5135LogDescription sets field value
func (o *WatchEventsV1ProgressWeb3V161) SetEthersV5135LogDescription(v EthersV5135LogDescription) {
	o.EthersV5135LogDescription = v
}

func (o WatchEventsV1ProgressWeb3V161) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchEventsV1ProgressWeb3V161) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestId"] = o.RequestId
	toSerialize["eventLog"] = o.EventLog
	toSerialize["ethersV5135LogDescription"] = o.EthersV5135LogDescription
	return toSerialize, nil
}

type NullableWatchEventsV1ProgressWeb3V161 struct {
	value *WatchEventsV1ProgressWeb3V161
	isSet bool
}

func (v NullableWatchEventsV1ProgressWeb3V161) Get() *WatchEventsV1ProgressWeb3V161 {
	return v.value
}

func (v *NullableWatchEventsV1ProgressWeb3V161) Set(val *WatchEventsV1ProgressWeb3V161) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchEventsV1ProgressWeb3V161) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchEventsV1ProgressWeb3V161) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchEventsV1ProgressWeb3V161(val *WatchEventsV1ProgressWeb3V161) *NullableWatchEventsV1ProgressWeb3V161 {
	return &NullableWatchEventsV1ProgressWeb3V161{value: val, isSet: true}
}

func (v NullableWatchEventsV1ProgressWeb3V161) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchEventsV1ProgressWeb3V161) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


