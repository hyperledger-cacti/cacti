/*
Hyperledger Cacti Plugin - Besu Connector

Can perform basic tasks on a Besu ledger such as executing transactions, streaming blocks or solidity smart contract events.

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-besu

import (
	"encoding/json"
)

// checks if the ViemV2242WatchEventsV1Progress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ViemV2242WatchEventsV1Progress{}

// ViemV2242WatchEventsV1Progress The event log as provided by the Web3 v1.6.1 library.
type ViemV2242WatchEventsV1Progress struct {
	// A unique identifier for the request that originated this event.
	RequestId string `json:"requestId"`
	Logs []ViemV2242EventLog `json:"logs,omitempty"`
}

// NewViemV2242WatchEventsV1Progress instantiates a new ViemV2242WatchEventsV1Progress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViemV2242WatchEventsV1Progress(requestId string) *ViemV2242WatchEventsV1Progress {
	this := ViemV2242WatchEventsV1Progress{}
	this.RequestId = requestId
	return &this
}

// NewViemV2242WatchEventsV1ProgressWithDefaults instantiates a new ViemV2242WatchEventsV1Progress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViemV2242WatchEventsV1ProgressWithDefaults() *ViemV2242WatchEventsV1Progress {
	this := ViemV2242WatchEventsV1Progress{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *ViemV2242WatchEventsV1Progress) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *ViemV2242WatchEventsV1Progress) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *ViemV2242WatchEventsV1Progress) SetRequestId(v string) {
	o.RequestId = v
}

// GetLogs returns the Logs field value if set, zero value otherwise.
func (o *ViemV2242WatchEventsV1Progress) GetLogs() []ViemV2242EventLog {
	if o == nil || IsNil(o.Logs) {
		var ret []ViemV2242EventLog
		return ret
	}
	return o.Logs
}

// GetLogsOk returns a tuple with the Logs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ViemV2242WatchEventsV1Progress) GetLogsOk() ([]ViemV2242EventLog, bool) {
	if o == nil || IsNil(o.Logs) {
		return nil, false
	}
	return o.Logs, true
}

// HasLogs returns a boolean if a field has been set.
func (o *ViemV2242WatchEventsV1Progress) HasLogs() bool {
	if o != nil && !IsNil(o.Logs) {
		return true
	}

	return false
}

// SetLogs gets a reference to the given []ViemV2242EventLog and assigns it to the Logs field.
func (o *ViemV2242WatchEventsV1Progress) SetLogs(v []ViemV2242EventLog) {
	o.Logs = v
}

func (o ViemV2242WatchEventsV1Progress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ViemV2242WatchEventsV1Progress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestId"] = o.RequestId
	if !IsNil(o.Logs) {
		toSerialize["logs"] = o.Logs
	}
	return toSerialize, nil
}

type NullableViemV2242WatchEventsV1Progress struct {
	value *ViemV2242WatchEventsV1Progress
	isSet bool
}

func (v NullableViemV2242WatchEventsV1Progress) Get() *ViemV2242WatchEventsV1Progress {
	return v.value
}

func (v *NullableViemV2242WatchEventsV1Progress) Set(val *ViemV2242WatchEventsV1Progress) {
	v.value = val
	v.isSet = true
}

func (v NullableViemV2242WatchEventsV1Progress) IsSet() bool {
	return v.isSet
}

func (v *NullableViemV2242WatchEventsV1Progress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViemV2242WatchEventsV1Progress(val *ViemV2242WatchEventsV1Progress) *NullableViemV2242WatchEventsV1Progress {
	return &NullableViemV2242WatchEventsV1Progress{value: val, isSet: true}
}

func (v NullableViemV2242WatchEventsV1Progress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViemV2242WatchEventsV1Progress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


