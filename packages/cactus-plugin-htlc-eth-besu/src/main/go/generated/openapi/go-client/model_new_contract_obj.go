/*
Hyperledger Cactus Plugin - HTLC-ETH Besu

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-htlc-eth-besu

import (
	"encoding/json"
)

// checks if the NewContractObj type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewContractObj{}

// NewContractObj struct for NewContractObj
type NewContractObj struct {
	// Contract address
	ContractAddress string `json:"contractAddress"`
	InputAmount *float32 `json:"inputAmount,omitempty"`
	OutputAmount float32 `json:"outputAmount"`
	Expiration float32 `json:"expiration"`
	HashLock string `json:"hashLock"`
	Receiver *string `json:"receiver,omitempty"`
	OutputNetwork string `json:"outputNetwork"`
	OutputAddress string `json:"outputAddress"`
	// connectorId for the connector besu plugin
	ConnectorId string `json:"connectorId"`
	Web3SigningCredential Web3SigningCredential `json:"web3SigningCredential"`
	// keychainId for the keychian plugin
	KeychainId string `json:"keychainId"`
	Gas *NewContractObjGas `json:"gas,omitempty"`
}

// NewNewContractObj instantiates a new NewContractObj object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewContractObj(contractAddress string, outputAmount float32, expiration float32, hashLock string, outputNetwork string, outputAddress string, connectorId string, web3SigningCredential Web3SigningCredential, keychainId string) *NewContractObj {
	this := NewContractObj{}
	this.ContractAddress = contractAddress
	this.OutputAmount = outputAmount
	this.Expiration = expiration
	this.HashLock = hashLock
	this.OutputNetwork = outputNetwork
	this.OutputAddress = outputAddress
	this.ConnectorId = connectorId
	this.Web3SigningCredential = web3SigningCredential
	this.KeychainId = keychainId
	return &this
}

// NewNewContractObjWithDefaults instantiates a new NewContractObj object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewContractObjWithDefaults() *NewContractObj {
	this := NewContractObj{}
	return &this
}

// GetContractAddress returns the ContractAddress field value
func (o *NewContractObj) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetContractAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *NewContractObj) SetContractAddress(v string) {
	o.ContractAddress = v
}

// GetInputAmount returns the InputAmount field value if set, zero value otherwise.
func (o *NewContractObj) GetInputAmount() float32 {
	if o == nil || IsNil(o.InputAmount) {
		var ret float32
		return ret
	}
	return *o.InputAmount
}

// GetInputAmountOk returns a tuple with the InputAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetInputAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.InputAmount) {
		return nil, false
	}
	return o.InputAmount, true
}

// HasInputAmount returns a boolean if a field has been set.
func (o *NewContractObj) HasInputAmount() bool {
	if o != nil && !IsNil(o.InputAmount) {
		return true
	}

	return false
}

// SetInputAmount gets a reference to the given float32 and assigns it to the InputAmount field.
func (o *NewContractObj) SetInputAmount(v float32) {
	o.InputAmount = &v
}

// GetOutputAmount returns the OutputAmount field value
func (o *NewContractObj) GetOutputAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OutputAmount
}

// GetOutputAmountOk returns a tuple with the OutputAmount field value
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetOutputAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputAmount, true
}

// SetOutputAmount sets field value
func (o *NewContractObj) SetOutputAmount(v float32) {
	o.OutputAmount = v
}

// GetExpiration returns the Expiration field value
func (o *NewContractObj) GetExpiration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetExpirationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expiration, true
}

// SetExpiration sets field value
func (o *NewContractObj) SetExpiration(v float32) {
	o.Expiration = v
}

// GetHashLock returns the HashLock field value
func (o *NewContractObj) GetHashLock() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HashLock
}

// GetHashLockOk returns a tuple with the HashLock field value
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetHashLockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HashLock, true
}

// SetHashLock sets field value
func (o *NewContractObj) SetHashLock(v string) {
	o.HashLock = v
}

// GetReceiver returns the Receiver field value if set, zero value otherwise.
func (o *NewContractObj) GetReceiver() string {
	if o == nil || IsNil(o.Receiver) {
		var ret string
		return ret
	}
	return *o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetReceiverOk() (*string, bool) {
	if o == nil || IsNil(o.Receiver) {
		return nil, false
	}
	return o.Receiver, true
}

// HasReceiver returns a boolean if a field has been set.
func (o *NewContractObj) HasReceiver() bool {
	if o != nil && !IsNil(o.Receiver) {
		return true
	}

	return false
}

// SetReceiver gets a reference to the given string and assigns it to the Receiver field.
func (o *NewContractObj) SetReceiver(v string) {
	o.Receiver = &v
}

// GetOutputNetwork returns the OutputNetwork field value
func (o *NewContractObj) GetOutputNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputNetwork
}

// GetOutputNetworkOk returns a tuple with the OutputNetwork field value
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetOutputNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputNetwork, true
}

// SetOutputNetwork sets field value
func (o *NewContractObj) SetOutputNetwork(v string) {
	o.OutputNetwork = v
}

// GetOutputAddress returns the OutputAddress field value
func (o *NewContractObj) GetOutputAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputAddress
}

// GetOutputAddressOk returns a tuple with the OutputAddress field value
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetOutputAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputAddress, true
}

// SetOutputAddress sets field value
func (o *NewContractObj) SetOutputAddress(v string) {
	o.OutputAddress = v
}

// GetConnectorId returns the ConnectorId field value
func (o *NewContractObj) GetConnectorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetConnectorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorId, true
}

// SetConnectorId sets field value
func (o *NewContractObj) SetConnectorId(v string) {
	o.ConnectorId = v
}

// GetWeb3SigningCredential returns the Web3SigningCredential field value
func (o *NewContractObj) GetWeb3SigningCredential() Web3SigningCredential {
	if o == nil {
		var ret Web3SigningCredential
		return ret
	}

	return o.Web3SigningCredential
}

// GetWeb3SigningCredentialOk returns a tuple with the Web3SigningCredential field value
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetWeb3SigningCredentialOk() (*Web3SigningCredential, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Web3SigningCredential, true
}

// SetWeb3SigningCredential sets field value
func (o *NewContractObj) SetWeb3SigningCredential(v Web3SigningCredential) {
	o.Web3SigningCredential = v
}

// GetKeychainId returns the KeychainId field value
func (o *NewContractObj) GetKeychainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeychainId
}

// GetKeychainIdOk returns a tuple with the KeychainId field value
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetKeychainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeychainId, true
}

// SetKeychainId sets field value
func (o *NewContractObj) SetKeychainId(v string) {
	o.KeychainId = v
}

// GetGas returns the Gas field value if set, zero value otherwise.
func (o *NewContractObj) GetGas() NewContractObjGas {
	if o == nil || IsNil(o.Gas) {
		var ret NewContractObjGas
		return ret
	}
	return *o.Gas
}

// GetGasOk returns a tuple with the Gas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewContractObj) GetGasOk() (*NewContractObjGas, bool) {
	if o == nil || IsNil(o.Gas) {
		return nil, false
	}
	return o.Gas, true
}

// HasGas returns a boolean if a field has been set.
func (o *NewContractObj) HasGas() bool {
	if o != nil && !IsNil(o.Gas) {
		return true
	}

	return false
}

// SetGas gets a reference to the given NewContractObjGas and assigns it to the Gas field.
func (o *NewContractObj) SetGas(v NewContractObjGas) {
	o.Gas = &v
}

func (o NewContractObj) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewContractObj) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contractAddress"] = o.ContractAddress
	if !IsNil(o.InputAmount) {
		toSerialize["inputAmount"] = o.InputAmount
	}
	toSerialize["outputAmount"] = o.OutputAmount
	toSerialize["expiration"] = o.Expiration
	toSerialize["hashLock"] = o.HashLock
	if !IsNil(o.Receiver) {
		toSerialize["receiver"] = o.Receiver
	}
	toSerialize["outputNetwork"] = o.OutputNetwork
	toSerialize["outputAddress"] = o.OutputAddress
	toSerialize["connectorId"] = o.ConnectorId
	toSerialize["web3SigningCredential"] = o.Web3SigningCredential
	toSerialize["keychainId"] = o.KeychainId
	if !IsNil(o.Gas) {
		toSerialize["gas"] = o.Gas
	}
	return toSerialize, nil
}

type NullableNewContractObj struct {
	value *NewContractObj
	isSet bool
}

func (v NullableNewContractObj) Get() *NewContractObj {
	return v.value
}

func (v *NullableNewContractObj) Set(val *NewContractObj) {
	v.value = val
	v.isSet = true
}

func (v NullableNewContractObj) IsSet() bool {
	return v.isSet
}

func (v *NullableNewContractObj) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewContractObj(val *NewContractObj) *NullableNewContractObj {
	return &NullableNewContractObj{value: val, isSet: true}
}

func (v NullableNewContractObj) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewContractObj) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


