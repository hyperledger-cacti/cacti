/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.DeployContractGoSourceV1RequestConstructorArgs
import org.openapitools.client.models.DeploymentTargetOrganization
import org.openapitools.client.models.FileBase64

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param policyDslSource 
 * @param tlsRootCertFiles The TLS root cert files that will be passed to the chaincode instantiation command.
 * @param channelId The name of the Fabric channel where the contract will get instantiated.
 * @param targetOrganizations 
 * @param targetPeerAddresses An array of peer addresses where the contract will be instantiated. Note that at present only the first item from this array will be used which is the behavior taken from the official Fabric samples repository and therefore it is assumed to be correct usage.
 * @param chainCodeVersion 
 * @param goSource 
 * @param constructorArgs 
 * @param goMod 
 * @param moduleName The go module name that will be used for the go compilation process.
 * @param pinnedDeps 
 * @param modTidyOnly Indicates to the go chaincode compiler of Cactus if it should do an actual go compilation with the contact source or if it should just execute the go mod tidy command.
 */


data class DeployContractGoSourceV1Request (

    @Json(name = "policyDslSource")
    val policyDslSource: kotlin.String,

    /* The TLS root cert files that will be passed to the chaincode instantiation command. */
    @Json(name = "tlsRootCertFiles")
    val tlsRootCertFiles: kotlin.String,

    /* The name of the Fabric channel where the contract will get instantiated. */
    @Json(name = "channelId")
    val channelId: kotlin.String,

    @Json(name = "targetOrganizations")
    val targetOrganizations: kotlin.collections.List<DeploymentTargetOrganization>,

    /* An array of peer addresses where the contract will be instantiated. Note that at present only the first item from this array will be used which is the behavior taken from the official Fabric samples repository and therefore it is assumed to be correct usage. */
    @Json(name = "targetPeerAddresses")
    val targetPeerAddresses: kotlin.collections.List<kotlin.String>,

    @Json(name = "chainCodeVersion")
    val chainCodeVersion: kotlin.String,

    @Json(name = "goSource")
    val goSource: FileBase64,

    @Json(name = "constructorArgs")
    val constructorArgs: DeployContractGoSourceV1RequestConstructorArgs? = null,

    @Json(name = "goMod")
    val goMod: FileBase64? = null,

    /* The go module name that will be used for the go compilation process. */
    @Json(name = "moduleName")
    val moduleName: kotlin.String? = null,

    @Json(name = "pinnedDeps")
    val pinnedDeps: kotlin.collections.List<kotlin.String>? = null,

    /* Indicates to the go chaincode compiler of Cactus if it should do an actual go compilation with the contact source or if it should just execute the go mod tidy command. */
    @Json(name = "modTidyOnly")
    val modTidyOnly: kotlin.Boolean? = null

)

