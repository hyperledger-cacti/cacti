/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the FullBlockTransactionActionV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FullBlockTransactionActionV1{}

// FullBlockTransactionActionV1 Transaction action returned from fabric block.
type FullBlockTransactionActionV1 struct {
	FunctionName string `json:"functionName"`
	FunctionArgs []string `json:"functionArgs"`
	ChaincodeId string `json:"chaincodeId"`
	Creator FabricCertificateIdentityV1 `json:"creator"`
	Endorsements []FullBlockTransactionEndorsementV1 `json:"endorsements"`
}

// NewFullBlockTransactionActionV1 instantiates a new FullBlockTransactionActionV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullBlockTransactionActionV1(functionName string, functionArgs []string, chaincodeId string, creator FabricCertificateIdentityV1, endorsements []FullBlockTransactionEndorsementV1) *FullBlockTransactionActionV1 {
	this := FullBlockTransactionActionV1{}
	this.FunctionName = functionName
	this.FunctionArgs = functionArgs
	this.ChaincodeId = chaincodeId
	this.Creator = creator
	this.Endorsements = endorsements
	return &this
}

// NewFullBlockTransactionActionV1WithDefaults instantiates a new FullBlockTransactionActionV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullBlockTransactionActionV1WithDefaults() *FullBlockTransactionActionV1 {
	this := FullBlockTransactionActionV1{}
	return &this
}

// GetFunctionName returns the FunctionName field value
func (o *FullBlockTransactionActionV1) GetFunctionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FunctionName
}

// GetFunctionNameOk returns a tuple with the FunctionName field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionActionV1) GetFunctionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FunctionName, true
}

// SetFunctionName sets field value
func (o *FullBlockTransactionActionV1) SetFunctionName(v string) {
	o.FunctionName = v
}

// GetFunctionArgs returns the FunctionArgs field value
func (o *FullBlockTransactionActionV1) GetFunctionArgs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.FunctionArgs
}

// GetFunctionArgsOk returns a tuple with the FunctionArgs field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionActionV1) GetFunctionArgsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FunctionArgs, true
}

// SetFunctionArgs sets field value
func (o *FullBlockTransactionActionV1) SetFunctionArgs(v []string) {
	o.FunctionArgs = v
}

// GetChaincodeId returns the ChaincodeId field value
func (o *FullBlockTransactionActionV1) GetChaincodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChaincodeId
}

// GetChaincodeIdOk returns a tuple with the ChaincodeId field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionActionV1) GetChaincodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChaincodeId, true
}

// SetChaincodeId sets field value
func (o *FullBlockTransactionActionV1) SetChaincodeId(v string) {
	o.ChaincodeId = v
}

// GetCreator returns the Creator field value
func (o *FullBlockTransactionActionV1) GetCreator() FabricCertificateIdentityV1 {
	if o == nil {
		var ret FabricCertificateIdentityV1
		return ret
	}

	return o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionActionV1) GetCreatorOk() (*FabricCertificateIdentityV1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Creator, true
}

// SetCreator sets field value
func (o *FullBlockTransactionActionV1) SetCreator(v FabricCertificateIdentityV1) {
	o.Creator = v
}

// GetEndorsements returns the Endorsements field value
func (o *FullBlockTransactionActionV1) GetEndorsements() []FullBlockTransactionEndorsementV1 {
	if o == nil {
		var ret []FullBlockTransactionEndorsementV1
		return ret
	}

	return o.Endorsements
}

// GetEndorsementsOk returns a tuple with the Endorsements field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionActionV1) GetEndorsementsOk() ([]FullBlockTransactionEndorsementV1, bool) {
	if o == nil {
		return nil, false
	}
	return o.Endorsements, true
}

// SetEndorsements sets field value
func (o *FullBlockTransactionActionV1) SetEndorsements(v []FullBlockTransactionEndorsementV1) {
	o.Endorsements = v
}

func (o FullBlockTransactionActionV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FullBlockTransactionActionV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["functionName"] = o.FunctionName
	toSerialize["functionArgs"] = o.FunctionArgs
	toSerialize["chaincodeId"] = o.ChaincodeId
	toSerialize["creator"] = o.Creator
	toSerialize["endorsements"] = o.Endorsements
	return toSerialize, nil
}

type NullableFullBlockTransactionActionV1 struct {
	value *FullBlockTransactionActionV1
	isSet bool
}

func (v NullableFullBlockTransactionActionV1) Get() *FullBlockTransactionActionV1 {
	return v.value
}

func (v *NullableFullBlockTransactionActionV1) Set(val *FullBlockTransactionActionV1) {
	v.value = val
	v.isSet = true
}

func (v NullableFullBlockTransactionActionV1) IsSet() bool {
	return v.isSet
}

func (v *NullableFullBlockTransactionActionV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullBlockTransactionActionV1(val *FullBlockTransactionActionV1) *NullableFullBlockTransactionActionV1 {
	return &NullableFullBlockTransactionActionV1{value: val, isSet: true}
}

func (v NullableFullBlockTransactionActionV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullBlockTransactionActionV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


