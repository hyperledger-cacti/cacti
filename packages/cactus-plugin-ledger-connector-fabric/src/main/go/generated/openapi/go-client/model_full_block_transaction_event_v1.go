/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the FullBlockTransactionEventV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FullBlockTransactionEventV1{}

// FullBlockTransactionEventV1 Transaction returned from fabric block.
type FullBlockTransactionEventV1 struct {
	Hash string `json:"hash"`
	ChannelId string `json:"channelId"`
	Timestamp string `json:"timestamp"`
	ProtocolVersion float32 `json:"protocolVersion"`
	TransactionType string `json:"transactionType"`
	Epoch float32 `json:"epoch"`
	Actions []FullBlockTransactionActionV1 `json:"actions"`
}

// NewFullBlockTransactionEventV1 instantiates a new FullBlockTransactionEventV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullBlockTransactionEventV1(hash string, channelId string, timestamp string, protocolVersion float32, transactionType string, epoch float32, actions []FullBlockTransactionActionV1) *FullBlockTransactionEventV1 {
	this := FullBlockTransactionEventV1{}
	this.Hash = hash
	this.ChannelId = channelId
	this.Timestamp = timestamp
	this.ProtocolVersion = protocolVersion
	this.TransactionType = transactionType
	this.Epoch = epoch
	this.Actions = actions
	return &this
}

// NewFullBlockTransactionEventV1WithDefaults instantiates a new FullBlockTransactionEventV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullBlockTransactionEventV1WithDefaults() *FullBlockTransactionEventV1 {
	this := FullBlockTransactionEventV1{}
	return &this
}

// GetHash returns the Hash field value
func (o *FullBlockTransactionEventV1) GetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionEventV1) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *FullBlockTransactionEventV1) SetHash(v string) {
	o.Hash = v
}

// GetChannelId returns the ChannelId field value
func (o *FullBlockTransactionEventV1) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionEventV1) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *FullBlockTransactionEventV1) SetChannelId(v string) {
	o.ChannelId = v
}

// GetTimestamp returns the Timestamp field value
func (o *FullBlockTransactionEventV1) GetTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionEventV1) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *FullBlockTransactionEventV1) SetTimestamp(v string) {
	o.Timestamp = v
}

// GetProtocolVersion returns the ProtocolVersion field value
func (o *FullBlockTransactionEventV1) GetProtocolVersion() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ProtocolVersion
}

// GetProtocolVersionOk returns a tuple with the ProtocolVersion field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionEventV1) GetProtocolVersionOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProtocolVersion, true
}

// SetProtocolVersion sets field value
func (o *FullBlockTransactionEventV1) SetProtocolVersion(v float32) {
	o.ProtocolVersion = v
}

// GetTransactionType returns the TransactionType field value
func (o *FullBlockTransactionEventV1) GetTransactionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionEventV1) GetTransactionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionType, true
}

// SetTransactionType sets field value
func (o *FullBlockTransactionEventV1) SetTransactionType(v string) {
	o.TransactionType = v
}

// GetEpoch returns the Epoch field value
func (o *FullBlockTransactionEventV1) GetEpoch() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Epoch
}

// GetEpochOk returns a tuple with the Epoch field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionEventV1) GetEpochOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Epoch, true
}

// SetEpoch sets field value
func (o *FullBlockTransactionEventV1) SetEpoch(v float32) {
	o.Epoch = v
}

// GetActions returns the Actions field value
func (o *FullBlockTransactionEventV1) GetActions() []FullBlockTransactionActionV1 {
	if o == nil {
		var ret []FullBlockTransactionActionV1
		return ret
	}

	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionEventV1) GetActionsOk() ([]FullBlockTransactionActionV1, bool) {
	if o == nil {
		return nil, false
	}
	return o.Actions, true
}

// SetActions sets field value
func (o *FullBlockTransactionEventV1) SetActions(v []FullBlockTransactionActionV1) {
	o.Actions = v
}

func (o FullBlockTransactionEventV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FullBlockTransactionEventV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hash"] = o.Hash
	toSerialize["channelId"] = o.ChannelId
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["protocolVersion"] = o.ProtocolVersion
	toSerialize["transactionType"] = o.TransactionType
	toSerialize["epoch"] = o.Epoch
	toSerialize["actions"] = o.Actions
	return toSerialize, nil
}

type NullableFullBlockTransactionEventV1 struct {
	value *FullBlockTransactionEventV1
	isSet bool
}

func (v NullableFullBlockTransactionEventV1) Get() *FullBlockTransactionEventV1 {
	return v.value
}

func (v *NullableFullBlockTransactionEventV1) Set(val *FullBlockTransactionEventV1) {
	v.value = val
	v.isSet = true
}

func (v NullableFullBlockTransactionEventV1) IsSet() bool {
	return v.isSet
}

func (v *NullableFullBlockTransactionEventV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullBlockTransactionEventV1(val *FullBlockTransactionEventV1) *NullableFullBlockTransactionEventV1 {
	return &NullableFullBlockTransactionEventV1{value: val, isSet: true}
}

func (v NullableFullBlockTransactionEventV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullBlockTransactionEventV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


