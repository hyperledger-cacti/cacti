/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the WatchBlocksCactusTransactionsResponseV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchBlocksCactusTransactionsResponseV1{}

// WatchBlocksCactusTransactionsResponseV1 Custom response containing block transactions summary. Compatible with legacy fabric-socketio connector monitoring.
type WatchBlocksCactusTransactionsResponseV1 struct {
	// List of transactions summary
	CactusTransactionsEvents []WatchBlocksCactusTransactionsEventV1 `json:"cactusTransactionsEvents"`
}

// NewWatchBlocksCactusTransactionsResponseV1 instantiates a new WatchBlocksCactusTransactionsResponseV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchBlocksCactusTransactionsResponseV1(cactusTransactionsEvents []WatchBlocksCactusTransactionsEventV1) *WatchBlocksCactusTransactionsResponseV1 {
	this := WatchBlocksCactusTransactionsResponseV1{}
	this.CactusTransactionsEvents = cactusTransactionsEvents
	return &this
}

// NewWatchBlocksCactusTransactionsResponseV1WithDefaults instantiates a new WatchBlocksCactusTransactionsResponseV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchBlocksCactusTransactionsResponseV1WithDefaults() *WatchBlocksCactusTransactionsResponseV1 {
	this := WatchBlocksCactusTransactionsResponseV1{}
	return &this
}

// GetCactusTransactionsEvents returns the CactusTransactionsEvents field value
func (o *WatchBlocksCactusTransactionsResponseV1) GetCactusTransactionsEvents() []WatchBlocksCactusTransactionsEventV1 {
	if o == nil {
		var ret []WatchBlocksCactusTransactionsEventV1
		return ret
	}

	return o.CactusTransactionsEvents
}

// GetCactusTransactionsEventsOk returns a tuple with the CactusTransactionsEvents field value
// and a boolean to check if the value has been set.
func (o *WatchBlocksCactusTransactionsResponseV1) GetCactusTransactionsEventsOk() ([]WatchBlocksCactusTransactionsEventV1, bool) {
	if o == nil {
		return nil, false
	}
	return o.CactusTransactionsEvents, true
}

// SetCactusTransactionsEvents sets field value
func (o *WatchBlocksCactusTransactionsResponseV1) SetCactusTransactionsEvents(v []WatchBlocksCactusTransactionsEventV1) {
	o.CactusTransactionsEvents = v
}

func (o WatchBlocksCactusTransactionsResponseV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchBlocksCactusTransactionsResponseV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cactusTransactionsEvents"] = o.CactusTransactionsEvents
	return toSerialize, nil
}

type NullableWatchBlocksCactusTransactionsResponseV1 struct {
	value *WatchBlocksCactusTransactionsResponseV1
	isSet bool
}

func (v NullableWatchBlocksCactusTransactionsResponseV1) Get() *WatchBlocksCactusTransactionsResponseV1 {
	return v.value
}

func (v *NullableWatchBlocksCactusTransactionsResponseV1) Set(val *WatchBlocksCactusTransactionsResponseV1) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchBlocksCactusTransactionsResponseV1) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchBlocksCactusTransactionsResponseV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchBlocksCactusTransactionsResponseV1(val *WatchBlocksCactusTransactionsResponseV1) *NullableWatchBlocksCactusTransactionsResponseV1 {
	return &NullableWatchBlocksCactusTransactionsResponseV1{value: val, isSet: true}
}

func (v NullableWatchBlocksCactusTransactionsResponseV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchBlocksCactusTransactionsResponseV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


