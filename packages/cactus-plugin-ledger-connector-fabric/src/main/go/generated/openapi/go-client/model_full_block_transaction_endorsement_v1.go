/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the FullBlockTransactionEndorsementV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FullBlockTransactionEndorsementV1{}

// FullBlockTransactionEndorsementV1 Transaction endorsment object returned from fabric block.
type FullBlockTransactionEndorsementV1 struct {
	Signer FabricCertificateIdentityV1 `json:"signer"`
	Signature string `json:"signature"`
}

// NewFullBlockTransactionEndorsementV1 instantiates a new FullBlockTransactionEndorsementV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullBlockTransactionEndorsementV1(signer FabricCertificateIdentityV1, signature string) *FullBlockTransactionEndorsementV1 {
	this := FullBlockTransactionEndorsementV1{}
	this.Signer = signer
	this.Signature = signature
	return &this
}

// NewFullBlockTransactionEndorsementV1WithDefaults instantiates a new FullBlockTransactionEndorsementV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullBlockTransactionEndorsementV1WithDefaults() *FullBlockTransactionEndorsementV1 {
	this := FullBlockTransactionEndorsementV1{}
	return &this
}

// GetSigner returns the Signer field value
func (o *FullBlockTransactionEndorsementV1) GetSigner() FabricCertificateIdentityV1 {
	if o == nil {
		var ret FabricCertificateIdentityV1
		return ret
	}

	return o.Signer
}

// GetSignerOk returns a tuple with the Signer field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionEndorsementV1) GetSignerOk() (*FabricCertificateIdentityV1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signer, true
}

// SetSigner sets field value
func (o *FullBlockTransactionEndorsementV1) SetSigner(v FabricCertificateIdentityV1) {
	o.Signer = v
}

// GetSignature returns the Signature field value
func (o *FullBlockTransactionEndorsementV1) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *FullBlockTransactionEndorsementV1) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *FullBlockTransactionEndorsementV1) SetSignature(v string) {
	o.Signature = v
}

func (o FullBlockTransactionEndorsementV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FullBlockTransactionEndorsementV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signer"] = o.Signer
	toSerialize["signature"] = o.Signature
	return toSerialize, nil
}

type NullableFullBlockTransactionEndorsementV1 struct {
	value *FullBlockTransactionEndorsementV1
	isSet bool
}

func (v NullableFullBlockTransactionEndorsementV1) Get() *FullBlockTransactionEndorsementV1 {
	return v.value
}

func (v *NullableFullBlockTransactionEndorsementV1) Set(val *FullBlockTransactionEndorsementV1) {
	v.value = val
	v.isSet = true
}

func (v NullableFullBlockTransactionEndorsementV1) IsSet() bool {
	return v.isSet
}

func (v *NullableFullBlockTransactionEndorsementV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullBlockTransactionEndorsementV1(val *FullBlockTransactionEndorsementV1) *NullableFullBlockTransactionEndorsementV1 {
	return &NullableFullBlockTransactionEndorsementV1{value: val, isSet: true}
}

func (v NullableFullBlockTransactionEndorsementV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullBlockTransactionEndorsementV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


