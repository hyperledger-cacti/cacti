/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the CactiBlockFullEventV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CactiBlockFullEventV1{}

// CactiBlockFullEventV1 Custom format full fabric block with transactions
type CactiBlockFullEventV1 struct {
	BlockNumber float32 `json:"blockNumber"`
	BlockHash string `json:"blockHash"`
	PreviousBlockHash string `json:"previousBlockHash"`
	TransactionCount float32 `json:"transactionCount"`
	CactiTransactionsEvents []FullBlockTransactionEventV1 `json:"cactiTransactionsEvents"`
}

// NewCactiBlockFullEventV1 instantiates a new CactiBlockFullEventV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCactiBlockFullEventV1(blockNumber float32, blockHash string, previousBlockHash string, transactionCount float32, cactiTransactionsEvents []FullBlockTransactionEventV1) *CactiBlockFullEventV1 {
	this := CactiBlockFullEventV1{}
	this.BlockNumber = blockNumber
	this.BlockHash = blockHash
	this.PreviousBlockHash = previousBlockHash
	this.TransactionCount = transactionCount
	this.CactiTransactionsEvents = cactiTransactionsEvents
	return &this
}

// NewCactiBlockFullEventV1WithDefaults instantiates a new CactiBlockFullEventV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCactiBlockFullEventV1WithDefaults() *CactiBlockFullEventV1 {
	this := CactiBlockFullEventV1{}
	return &this
}

// GetBlockNumber returns the BlockNumber field value
func (o *CactiBlockFullEventV1) GetBlockNumber() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value
// and a boolean to check if the value has been set.
func (o *CactiBlockFullEventV1) GetBlockNumberOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockNumber, true
}

// SetBlockNumber sets field value
func (o *CactiBlockFullEventV1) SetBlockNumber(v float32) {
	o.BlockNumber = v
}

// GetBlockHash returns the BlockHash field value
func (o *CactiBlockFullEventV1) GetBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BlockHash
}

// GetBlockHashOk returns a tuple with the BlockHash field value
// and a boolean to check if the value has been set.
func (o *CactiBlockFullEventV1) GetBlockHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockHash, true
}

// SetBlockHash sets field value
func (o *CactiBlockFullEventV1) SetBlockHash(v string) {
	o.BlockHash = v
}

// GetPreviousBlockHash returns the PreviousBlockHash field value
func (o *CactiBlockFullEventV1) GetPreviousBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreviousBlockHash
}

// GetPreviousBlockHashOk returns a tuple with the PreviousBlockHash field value
// and a boolean to check if the value has been set.
func (o *CactiBlockFullEventV1) GetPreviousBlockHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreviousBlockHash, true
}

// SetPreviousBlockHash sets field value
func (o *CactiBlockFullEventV1) SetPreviousBlockHash(v string) {
	o.PreviousBlockHash = v
}

// GetTransactionCount returns the TransactionCount field value
func (o *CactiBlockFullEventV1) GetTransactionCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TransactionCount
}

// GetTransactionCountOk returns a tuple with the TransactionCount field value
// and a boolean to check if the value has been set.
func (o *CactiBlockFullEventV1) GetTransactionCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionCount, true
}

// SetTransactionCount sets field value
func (o *CactiBlockFullEventV1) SetTransactionCount(v float32) {
	o.TransactionCount = v
}

// GetCactiTransactionsEvents returns the CactiTransactionsEvents field value
func (o *CactiBlockFullEventV1) GetCactiTransactionsEvents() []FullBlockTransactionEventV1 {
	if o == nil {
		var ret []FullBlockTransactionEventV1
		return ret
	}

	return o.CactiTransactionsEvents
}

// GetCactiTransactionsEventsOk returns a tuple with the CactiTransactionsEvents field value
// and a boolean to check if the value has been set.
func (o *CactiBlockFullEventV1) GetCactiTransactionsEventsOk() ([]FullBlockTransactionEventV1, bool) {
	if o == nil {
		return nil, false
	}
	return o.CactiTransactionsEvents, true
}

// SetCactiTransactionsEvents sets field value
func (o *CactiBlockFullEventV1) SetCactiTransactionsEvents(v []FullBlockTransactionEventV1) {
	o.CactiTransactionsEvents = v
}

func (o CactiBlockFullEventV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CactiBlockFullEventV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["blockNumber"] = o.BlockNumber
	toSerialize["blockHash"] = o.BlockHash
	toSerialize["previousBlockHash"] = o.PreviousBlockHash
	toSerialize["transactionCount"] = o.TransactionCount
	toSerialize["cactiTransactionsEvents"] = o.CactiTransactionsEvents
	return toSerialize, nil
}

type NullableCactiBlockFullEventV1 struct {
	value *CactiBlockFullEventV1
	isSet bool
}

func (v NullableCactiBlockFullEventV1) Get() *CactiBlockFullEventV1 {
	return v.value
}

func (v *NullableCactiBlockFullEventV1) Set(val *CactiBlockFullEventV1) {
	v.value = val
	v.isSet = true
}

func (v NullableCactiBlockFullEventV1) IsSet() bool {
	return v.isSet
}

func (v *NullableCactiBlockFullEventV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCactiBlockFullEventV1(val *CactiBlockFullEventV1) *NullableCactiBlockFullEventV1 {
	return &NullableCactiBlockFullEventV1{value: val, isSet: true}
}

func (v NullableCactiBlockFullEventV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCactiBlockFullEventV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


