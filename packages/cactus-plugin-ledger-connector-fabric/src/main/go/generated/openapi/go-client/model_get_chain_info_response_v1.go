/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the GetChainInfoResponseV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetChainInfoResponseV1{}

// GetChainInfoResponseV1 Response from GetChainInfo endpoint.
type GetChainInfoResponseV1 struct {
	// Current height of fabric ledger
	Height float32 `json:"height"`
	// Current block hash of fabric ledger
	CurrentBlockHash string `json:"currentBlockHash"`
	// Previous block hash of fabric ledger
	PreviousBlockHash string `json:"previousBlockHash"`
}

// NewGetChainInfoResponseV1 instantiates a new GetChainInfoResponseV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetChainInfoResponseV1(height float32, currentBlockHash string, previousBlockHash string) *GetChainInfoResponseV1 {
	this := GetChainInfoResponseV1{}
	this.Height = height
	this.CurrentBlockHash = currentBlockHash
	this.PreviousBlockHash = previousBlockHash
	return &this
}

// NewGetChainInfoResponseV1WithDefaults instantiates a new GetChainInfoResponseV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetChainInfoResponseV1WithDefaults() *GetChainInfoResponseV1 {
	this := GetChainInfoResponseV1{}
	return &this
}

// GetHeight returns the Height field value
func (o *GetChainInfoResponseV1) GetHeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *GetChainInfoResponseV1) GetHeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *GetChainInfoResponseV1) SetHeight(v float32) {
	o.Height = v
}

// GetCurrentBlockHash returns the CurrentBlockHash field value
func (o *GetChainInfoResponseV1) GetCurrentBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrentBlockHash
}

// GetCurrentBlockHashOk returns a tuple with the CurrentBlockHash field value
// and a boolean to check if the value has been set.
func (o *GetChainInfoResponseV1) GetCurrentBlockHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentBlockHash, true
}

// SetCurrentBlockHash sets field value
func (o *GetChainInfoResponseV1) SetCurrentBlockHash(v string) {
	o.CurrentBlockHash = v
}

// GetPreviousBlockHash returns the PreviousBlockHash field value
func (o *GetChainInfoResponseV1) GetPreviousBlockHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreviousBlockHash
}

// GetPreviousBlockHashOk returns a tuple with the PreviousBlockHash field value
// and a boolean to check if the value has been set.
func (o *GetChainInfoResponseV1) GetPreviousBlockHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreviousBlockHash, true
}

// SetPreviousBlockHash sets field value
func (o *GetChainInfoResponseV1) SetPreviousBlockHash(v string) {
	o.PreviousBlockHash = v
}

func (o GetChainInfoResponseV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetChainInfoResponseV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["height"] = o.Height
	toSerialize["currentBlockHash"] = o.CurrentBlockHash
	toSerialize["previousBlockHash"] = o.PreviousBlockHash
	return toSerialize, nil
}

type NullableGetChainInfoResponseV1 struct {
	value *GetChainInfoResponseV1
	isSet bool
}

func (v NullableGetChainInfoResponseV1) Get() *GetChainInfoResponseV1 {
	return v.value
}

func (v *NullableGetChainInfoResponseV1) Set(val *GetChainInfoResponseV1) {
	v.value = val
	v.isSet = true
}

func (v NullableGetChainInfoResponseV1) IsSet() bool {
	return v.isSet
}

func (v *NullableGetChainInfoResponseV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetChainInfoResponseV1(val *GetChainInfoResponseV1) *NullableGetChainInfoResponseV1 {
	return &NullableGetChainInfoResponseV1{value: val, isSet: true}
}

func (v NullableGetChainInfoResponseV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetChainInfoResponseV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


