/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the ProposalResponsePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProposalResponsePayload{}

// ProposalResponsePayload struct for ProposalResponsePayload
type ProposalResponsePayload struct {
	ProposalHash *string `json:"proposalHash,omitempty"`
	Extension *string `json:"extension,omitempty"`
}

// NewProposalResponsePayload instantiates a new ProposalResponsePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProposalResponsePayload() *ProposalResponsePayload {
	this := ProposalResponsePayload{}
	return &this
}

// NewProposalResponsePayloadWithDefaults instantiates a new ProposalResponsePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProposalResponsePayloadWithDefaults() *ProposalResponsePayload {
	this := ProposalResponsePayload{}
	return &this
}

// GetProposalHash returns the ProposalHash field value if set, zero value otherwise.
func (o *ProposalResponsePayload) GetProposalHash() string {
	if o == nil || IsNil(o.ProposalHash) {
		var ret string
		return ret
	}
	return *o.ProposalHash
}

// GetProposalHashOk returns a tuple with the ProposalHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProposalResponsePayload) GetProposalHashOk() (*string, bool) {
	if o == nil || IsNil(o.ProposalHash) {
		return nil, false
	}
	return o.ProposalHash, true
}

// HasProposalHash returns a boolean if a field has been set.
func (o *ProposalResponsePayload) HasProposalHash() bool {
	if o != nil && !IsNil(o.ProposalHash) {
		return true
	}

	return false
}

// SetProposalHash gets a reference to the given string and assigns it to the ProposalHash field.
func (o *ProposalResponsePayload) SetProposalHash(v string) {
	o.ProposalHash = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *ProposalResponsePayload) GetExtension() string {
	if o == nil || IsNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProposalResponsePayload) GetExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *ProposalResponsePayload) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *ProposalResponsePayload) SetExtension(v string) {
	o.Extension = &v
}

func (o ProposalResponsePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProposalResponsePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProposalHash) {
		toSerialize["proposalHash"] = o.ProposalHash
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	return toSerialize, nil
}

type NullableProposalResponsePayload struct {
	value *ProposalResponsePayload
	isSet bool
}

func (v NullableProposalResponsePayload) Get() *ProposalResponsePayload {
	return v.value
}

func (v *NullableProposalResponsePayload) Set(val *ProposalResponsePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableProposalResponsePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableProposalResponsePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProposalResponsePayload(val *ProposalResponsePayload) *NullableProposalResponsePayload {
	return &NullableProposalResponsePayload{value: val, isSet: true}
}

func (v NullableProposalResponsePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProposalResponsePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


