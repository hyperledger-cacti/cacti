/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the SSHExecCommandResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SSHExecCommandResponse{}

// SSHExecCommandResponse struct for SSHExecCommandResponse
type SSHExecCommandResponse struct {
	Stdout string `json:"stdout"`
	Stderr string `json:"stderr"`
	Code NullableInt32 `json:"code"`
	Signal NullableString `json:"signal"`
}

// NewSSHExecCommandResponse instantiates a new SSHExecCommandResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSSHExecCommandResponse(stdout string, stderr string, code NullableInt32, signal NullableString) *SSHExecCommandResponse {
	this := SSHExecCommandResponse{}
	this.Stdout = stdout
	this.Stderr = stderr
	this.Code = code
	this.Signal = signal
	return &this
}

// NewSSHExecCommandResponseWithDefaults instantiates a new SSHExecCommandResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSHExecCommandResponseWithDefaults() *SSHExecCommandResponse {
	this := SSHExecCommandResponse{}
	return &this
}

// GetStdout returns the Stdout field value
func (o *SSHExecCommandResponse) GetStdout() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Stdout
}

// GetStdoutOk returns a tuple with the Stdout field value
// and a boolean to check if the value has been set.
func (o *SSHExecCommandResponse) GetStdoutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stdout, true
}

// SetStdout sets field value
func (o *SSHExecCommandResponse) SetStdout(v string) {
	o.Stdout = v
}

// GetStderr returns the Stderr field value
func (o *SSHExecCommandResponse) GetStderr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Stderr
}

// GetStderrOk returns a tuple with the Stderr field value
// and a boolean to check if the value has been set.
func (o *SSHExecCommandResponse) GetStderrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stderr, true
}

// SetStderr sets field value
func (o *SSHExecCommandResponse) SetStderr(v string) {
	o.Stderr = v
}

// GetCode returns the Code field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *SSHExecCommandResponse) GetCode() int32 {
	if o == nil || o.Code.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SSHExecCommandResponse) GetCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// SetCode sets field value
func (o *SSHExecCommandResponse) SetCode(v int32) {
	o.Code.Set(&v)
}

// GetSignal returns the Signal field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SSHExecCommandResponse) GetSignal() string {
	if o == nil || o.Signal.Get() == nil {
		var ret string
		return ret
	}

	return *o.Signal.Get()
}

// GetSignalOk returns a tuple with the Signal field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SSHExecCommandResponse) GetSignalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Signal.Get(), o.Signal.IsSet()
}

// SetSignal sets field value
func (o *SSHExecCommandResponse) SetSignal(v string) {
	o.Signal.Set(&v)
}

func (o SSHExecCommandResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SSHExecCommandResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["stdout"] = o.Stdout
	toSerialize["stderr"] = o.Stderr
	toSerialize["code"] = o.Code.Get()
	toSerialize["signal"] = o.Signal.Get()
	return toSerialize, nil
}

type NullableSSHExecCommandResponse struct {
	value *SSHExecCommandResponse
	isSet bool
}

func (v NullableSSHExecCommandResponse) Get() *SSHExecCommandResponse {
	return v.value
}

func (v *NullableSSHExecCommandResponse) Set(val *SSHExecCommandResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSSHExecCommandResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSSHExecCommandResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSSHExecCommandResponse(val *SSHExecCommandResponse) *NullableSSHExecCommandResponse {
	return &NullableSSHExecCommandResponse{value: val, isSet: true}
}

func (v NullableSSHExecCommandResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSSHExecCommandResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


