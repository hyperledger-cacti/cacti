/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the GetDiscoveryResultsResponseV1PeersByMSPValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDiscoveryResultsResponseV1PeersByMSPValue{}

// GetDiscoveryResultsResponseV1PeersByMSPValue struct for GetDiscoveryResultsResponseV1PeersByMSPValue
type GetDiscoveryResultsResponseV1PeersByMSPValue struct {
	Peers []GetDiscoveryResultsResponseV1PeersByMSPValuePeersInner `json:"peers"`
}

// NewGetDiscoveryResultsResponseV1PeersByMSPValue instantiates a new GetDiscoveryResultsResponseV1PeersByMSPValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDiscoveryResultsResponseV1PeersByMSPValue(peers []GetDiscoveryResultsResponseV1PeersByMSPValuePeersInner) *GetDiscoveryResultsResponseV1PeersByMSPValue {
	this := GetDiscoveryResultsResponseV1PeersByMSPValue{}
	this.Peers = peers
	return &this
}

// NewGetDiscoveryResultsResponseV1PeersByMSPValueWithDefaults instantiates a new GetDiscoveryResultsResponseV1PeersByMSPValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDiscoveryResultsResponseV1PeersByMSPValueWithDefaults() *GetDiscoveryResultsResponseV1PeersByMSPValue {
	this := GetDiscoveryResultsResponseV1PeersByMSPValue{}
	return &this
}

// GetPeers returns the Peers field value
func (o *GetDiscoveryResultsResponseV1PeersByMSPValue) GetPeers() []GetDiscoveryResultsResponseV1PeersByMSPValuePeersInner {
	if o == nil {
		var ret []GetDiscoveryResultsResponseV1PeersByMSPValuePeersInner
		return ret
	}

	return o.Peers
}

// GetPeersOk returns a tuple with the Peers field value
// and a boolean to check if the value has been set.
func (o *GetDiscoveryResultsResponseV1PeersByMSPValue) GetPeersOk() ([]GetDiscoveryResultsResponseV1PeersByMSPValuePeersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Peers, true
}

// SetPeers sets field value
func (o *GetDiscoveryResultsResponseV1PeersByMSPValue) SetPeers(v []GetDiscoveryResultsResponseV1PeersByMSPValuePeersInner) {
	o.Peers = v
}

func (o GetDiscoveryResultsResponseV1PeersByMSPValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDiscoveryResultsResponseV1PeersByMSPValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["peers"] = o.Peers
	return toSerialize, nil
}

type NullableGetDiscoveryResultsResponseV1PeersByMSPValue struct {
	value *GetDiscoveryResultsResponseV1PeersByMSPValue
	isSet bool
}

func (v NullableGetDiscoveryResultsResponseV1PeersByMSPValue) Get() *GetDiscoveryResultsResponseV1PeersByMSPValue {
	return v.value
}

func (v *NullableGetDiscoveryResultsResponseV1PeersByMSPValue) Set(val *GetDiscoveryResultsResponseV1PeersByMSPValue) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDiscoveryResultsResponseV1PeersByMSPValue) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDiscoveryResultsResponseV1PeersByMSPValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDiscoveryResultsResponseV1PeersByMSPValue(val *GetDiscoveryResultsResponseV1PeersByMSPValue) *NullableGetDiscoveryResultsResponseV1PeersByMSPValue {
	return &NullableGetDiscoveryResultsResponseV1PeersByMSPValue{value: val, isSet: true}
}

func (v NullableGetDiscoveryResultsResponseV1PeersByMSPValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDiscoveryResultsResponseV1PeersByMSPValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


