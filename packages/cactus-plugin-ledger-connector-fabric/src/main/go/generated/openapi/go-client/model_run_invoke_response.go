/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the RunInvokeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunInvokeResponse{}

// RunInvokeResponse struct for RunInvokeResponse
type RunInvokeResponse struct {
	View FabricView `json:"view"`
}

// NewRunInvokeResponse instantiates a new RunInvokeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunInvokeResponse(view FabricView) *RunInvokeResponse {
	this := RunInvokeResponse{}
	this.View = view
	return &this
}

// NewRunInvokeResponseWithDefaults instantiates a new RunInvokeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunInvokeResponseWithDefaults() *RunInvokeResponse {
	this := RunInvokeResponse{}
	return &this
}

// GetView returns the View field value
func (o *RunInvokeResponse) GetView() FabricView {
	if o == nil {
		var ret FabricView
		return ret
	}

	return o.View
}

// GetViewOk returns a tuple with the View field value
// and a boolean to check if the value has been set.
func (o *RunInvokeResponse) GetViewOk() (*FabricView, bool) {
	if o == nil {
		return nil, false
	}
	return &o.View, true
}

// SetView sets field value
func (o *RunInvokeResponse) SetView(v FabricView) {
	o.View = v
}

func (o RunInvokeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunInvokeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["view"] = o.View
	return toSerialize, nil
}

type NullableRunInvokeResponse struct {
	value *RunInvokeResponse
	isSet bool
}

func (v NullableRunInvokeResponse) Get() *RunInvokeResponse {
	return v.value
}

func (v *NullableRunInvokeResponse) Set(val *RunInvokeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRunInvokeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRunInvokeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunInvokeResponse(val *RunInvokeResponse) *NullableRunInvokeResponse {
	return &NullableRunInvokeResponse{value: val, isSet: true}
}

func (v NullableRunInvokeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunInvokeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


