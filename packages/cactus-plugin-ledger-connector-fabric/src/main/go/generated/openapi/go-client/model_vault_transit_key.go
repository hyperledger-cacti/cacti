/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the VaultTransitKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VaultTransitKey{}

// VaultTransitKey vault key details for signing fabric message with private key stored with transit engine.
type VaultTransitKey struct {
	// label of private key
	KeyName string `json:"keyName"`
	// token for accessing private key
	Token string `json:"token"`
}

// NewVaultTransitKey instantiates a new VaultTransitKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVaultTransitKey(keyName string, token string) *VaultTransitKey {
	this := VaultTransitKey{}
	this.KeyName = keyName
	this.Token = token
	return &this
}

// NewVaultTransitKeyWithDefaults instantiates a new VaultTransitKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVaultTransitKeyWithDefaults() *VaultTransitKey {
	this := VaultTransitKey{}
	return &this
}

// GetKeyName returns the KeyName field value
func (o *VaultTransitKey) GetKeyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyName
}

// GetKeyNameOk returns a tuple with the KeyName field value
// and a boolean to check if the value has been set.
func (o *VaultTransitKey) GetKeyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyName, true
}

// SetKeyName sets field value
func (o *VaultTransitKey) SetKeyName(v string) {
	o.KeyName = v
}

// GetToken returns the Token field value
func (o *VaultTransitKey) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *VaultTransitKey) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *VaultTransitKey) SetToken(v string) {
	o.Token = v
}

func (o VaultTransitKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VaultTransitKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keyName"] = o.KeyName
	toSerialize["token"] = o.Token
	return toSerialize, nil
}

type NullableVaultTransitKey struct {
	value *VaultTransitKey
	isSet bool
}

func (v NullableVaultTransitKey) Get() *VaultTransitKey {
	return v.value
}

func (v *NullableVaultTransitKey) Set(val *VaultTransitKey) {
	v.value = val
	v.isSet = true
}

func (v NullableVaultTransitKey) IsSet() bool {
	return v.isSet
}

func (v *NullableVaultTransitKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVaultTransitKey(val *VaultTransitKey) *NullableVaultTransitKey {
	return &NullableVaultTransitKey{value: val, isSet: true}
}

func (v NullableVaultTransitKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVaultTransitKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


