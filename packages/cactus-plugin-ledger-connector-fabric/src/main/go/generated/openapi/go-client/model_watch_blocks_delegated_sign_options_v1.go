/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the WatchBlocksDelegatedSignOptionsV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchBlocksDelegatedSignOptionsV1{}

// WatchBlocksDelegatedSignOptionsV1 Options passed when subscribing to block monitoring with delegated signing.
type WatchBlocksDelegatedSignOptionsV1 struct {
	Type WatchBlocksListenerTypeV1 `json:"type"`
	// From which block start monitoring. Defaults to latest.
	StartBlock *string `json:"startBlock,omitempty"`
	ChannelName string `json:"channelName"`
	SignerCertificate string `json:"signerCertificate"`
	SignerMspID string `json:"signerMspID"`
	// Can be used to uniquely identify and authorize signing request
	UniqueTransactionData interface{} `json:"uniqueTransactionData,omitempty"`
}

// NewWatchBlocksDelegatedSignOptionsV1 instantiates a new WatchBlocksDelegatedSignOptionsV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchBlocksDelegatedSignOptionsV1(type_ WatchBlocksListenerTypeV1, channelName string, signerCertificate string, signerMspID string) *WatchBlocksDelegatedSignOptionsV1 {
	this := WatchBlocksDelegatedSignOptionsV1{}
	this.Type = type_
	this.ChannelName = channelName
	this.SignerCertificate = signerCertificate
	this.SignerMspID = signerMspID
	return &this
}

// NewWatchBlocksDelegatedSignOptionsV1WithDefaults instantiates a new WatchBlocksDelegatedSignOptionsV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchBlocksDelegatedSignOptionsV1WithDefaults() *WatchBlocksDelegatedSignOptionsV1 {
	this := WatchBlocksDelegatedSignOptionsV1{}
	return &this
}

// GetType returns the Type field value
func (o *WatchBlocksDelegatedSignOptionsV1) GetType() WatchBlocksListenerTypeV1 {
	if o == nil {
		var ret WatchBlocksListenerTypeV1
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WatchBlocksDelegatedSignOptionsV1) GetTypeOk() (*WatchBlocksListenerTypeV1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WatchBlocksDelegatedSignOptionsV1) SetType(v WatchBlocksListenerTypeV1) {
	o.Type = v
}

// GetStartBlock returns the StartBlock field value if set, zero value otherwise.
func (o *WatchBlocksDelegatedSignOptionsV1) GetStartBlock() string {
	if o == nil || IsNil(o.StartBlock) {
		var ret string
		return ret
	}
	return *o.StartBlock
}

// GetStartBlockOk returns a tuple with the StartBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchBlocksDelegatedSignOptionsV1) GetStartBlockOk() (*string, bool) {
	if o == nil || IsNil(o.StartBlock) {
		return nil, false
	}
	return o.StartBlock, true
}

// HasStartBlock returns a boolean if a field has been set.
func (o *WatchBlocksDelegatedSignOptionsV1) HasStartBlock() bool {
	if o != nil && !IsNil(o.StartBlock) {
		return true
	}

	return false
}

// SetStartBlock gets a reference to the given string and assigns it to the StartBlock field.
func (o *WatchBlocksDelegatedSignOptionsV1) SetStartBlock(v string) {
	o.StartBlock = &v
}

// GetChannelName returns the ChannelName field value
func (o *WatchBlocksDelegatedSignOptionsV1) GetChannelName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field value
// and a boolean to check if the value has been set.
func (o *WatchBlocksDelegatedSignOptionsV1) GetChannelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelName, true
}

// SetChannelName sets field value
func (o *WatchBlocksDelegatedSignOptionsV1) SetChannelName(v string) {
	o.ChannelName = v
}

// GetSignerCertificate returns the SignerCertificate field value
func (o *WatchBlocksDelegatedSignOptionsV1) GetSignerCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignerCertificate
}

// GetSignerCertificateOk returns a tuple with the SignerCertificate field value
// and a boolean to check if the value has been set.
func (o *WatchBlocksDelegatedSignOptionsV1) GetSignerCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignerCertificate, true
}

// SetSignerCertificate sets field value
func (o *WatchBlocksDelegatedSignOptionsV1) SetSignerCertificate(v string) {
	o.SignerCertificate = v
}

// GetSignerMspID returns the SignerMspID field value
func (o *WatchBlocksDelegatedSignOptionsV1) GetSignerMspID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignerMspID
}

// GetSignerMspIDOk returns a tuple with the SignerMspID field value
// and a boolean to check if the value has been set.
func (o *WatchBlocksDelegatedSignOptionsV1) GetSignerMspIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignerMspID, true
}

// SetSignerMspID sets field value
func (o *WatchBlocksDelegatedSignOptionsV1) SetSignerMspID(v string) {
	o.SignerMspID = v
}

// GetUniqueTransactionData returns the UniqueTransactionData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WatchBlocksDelegatedSignOptionsV1) GetUniqueTransactionData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UniqueTransactionData
}

// GetUniqueTransactionDataOk returns a tuple with the UniqueTransactionData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WatchBlocksDelegatedSignOptionsV1) GetUniqueTransactionDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UniqueTransactionData) {
		return nil, false
	}
	return &o.UniqueTransactionData, true
}

// HasUniqueTransactionData returns a boolean if a field has been set.
func (o *WatchBlocksDelegatedSignOptionsV1) HasUniqueTransactionData() bool {
	if o != nil && IsNil(o.UniqueTransactionData) {
		return true
	}

	return false
}

// SetUniqueTransactionData gets a reference to the given interface{} and assigns it to the UniqueTransactionData field.
func (o *WatchBlocksDelegatedSignOptionsV1) SetUniqueTransactionData(v interface{}) {
	o.UniqueTransactionData = v
}

func (o WatchBlocksDelegatedSignOptionsV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchBlocksDelegatedSignOptionsV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.StartBlock) {
		toSerialize["startBlock"] = o.StartBlock
	}
	toSerialize["channelName"] = o.ChannelName
	toSerialize["signerCertificate"] = o.SignerCertificate
	toSerialize["signerMspID"] = o.SignerMspID
	if o.UniqueTransactionData != nil {
		toSerialize["uniqueTransactionData"] = o.UniqueTransactionData
	}
	return toSerialize, nil
}

type NullableWatchBlocksDelegatedSignOptionsV1 struct {
	value *WatchBlocksDelegatedSignOptionsV1
	isSet bool
}

func (v NullableWatchBlocksDelegatedSignOptionsV1) Get() *WatchBlocksDelegatedSignOptionsV1 {
	return v.value
}

func (v *NullableWatchBlocksDelegatedSignOptionsV1) Set(val *WatchBlocksDelegatedSignOptionsV1) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchBlocksDelegatedSignOptionsV1) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchBlocksDelegatedSignOptionsV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchBlocksDelegatedSignOptionsV1(val *WatchBlocksDelegatedSignOptionsV1) *NullableWatchBlocksDelegatedSignOptionsV1 {
	return &NullableWatchBlocksDelegatedSignOptionsV1{value: val, isSet: true}
}

func (v NullableWatchBlocksDelegatedSignOptionsV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchBlocksDelegatedSignOptionsV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


