/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the FabricView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FabricView{}

// FabricView struct for FabricView
type FabricView struct {
	EndorsedProposalResponses []EndorsedProposalResponse `json:"endorsedProposalResponses,omitempty"`
}

// NewFabricView instantiates a new FabricView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFabricView() *FabricView {
	this := FabricView{}
	return &this
}

// NewFabricViewWithDefaults instantiates a new FabricView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFabricViewWithDefaults() *FabricView {
	this := FabricView{}
	return &this
}

// GetEndorsedProposalResponses returns the EndorsedProposalResponses field value if set, zero value otherwise.
func (o *FabricView) GetEndorsedProposalResponses() []EndorsedProposalResponse {
	if o == nil || IsNil(o.EndorsedProposalResponses) {
		var ret []EndorsedProposalResponse
		return ret
	}
	return o.EndorsedProposalResponses
}

// GetEndorsedProposalResponsesOk returns a tuple with the EndorsedProposalResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricView) GetEndorsedProposalResponsesOk() ([]EndorsedProposalResponse, bool) {
	if o == nil || IsNil(o.EndorsedProposalResponses) {
		return nil, false
	}
	return o.EndorsedProposalResponses, true
}

// HasEndorsedProposalResponses returns a boolean if a field has been set.
func (o *FabricView) HasEndorsedProposalResponses() bool {
	if o != nil && !IsNil(o.EndorsedProposalResponses) {
		return true
	}

	return false
}

// SetEndorsedProposalResponses gets a reference to the given []EndorsedProposalResponse and assigns it to the EndorsedProposalResponses field.
func (o *FabricView) SetEndorsedProposalResponses(v []EndorsedProposalResponse) {
	o.EndorsedProposalResponses = v
}

func (o FabricView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FabricView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndorsedProposalResponses) {
		toSerialize["endorsedProposalResponses"] = o.EndorsedProposalResponses
	}
	return toSerialize, nil
}

type NullableFabricView struct {
	value *FabricView
	isSet bool
}

func (v NullableFabricView) Get() *FabricView {
	return v.value
}

func (v *NullableFabricView) Set(val *FabricView) {
	v.value = val
	v.isSet = true
}

func (v NullableFabricView) IsSet() bool {
	return v.isSet
}

func (v *NullableFabricView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFabricView(val *FabricView) *NullableFabricView {
	return &NullableFabricView{value: val, isSet: true}
}

func (v NullableFabricView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFabricView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


