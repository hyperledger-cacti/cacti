/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the WatchBlocksCactusErrorResponseV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchBlocksCactusErrorResponseV1{}

// WatchBlocksCactusErrorResponseV1 Error response from WatchBlocks operation.
type WatchBlocksCactusErrorResponseV1 struct {
	// Error code.
	Code float32 `json:"code"`
	// Description of the error.
	ErrorMessage string `json:"errorMessage"`
}

// NewWatchBlocksCactusErrorResponseV1 instantiates a new WatchBlocksCactusErrorResponseV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchBlocksCactusErrorResponseV1(code float32, errorMessage string) *WatchBlocksCactusErrorResponseV1 {
	this := WatchBlocksCactusErrorResponseV1{}
	this.Code = code
	this.ErrorMessage = errorMessage
	return &this
}

// NewWatchBlocksCactusErrorResponseV1WithDefaults instantiates a new WatchBlocksCactusErrorResponseV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchBlocksCactusErrorResponseV1WithDefaults() *WatchBlocksCactusErrorResponseV1 {
	this := WatchBlocksCactusErrorResponseV1{}
	return &this
}

// GetCode returns the Code field value
func (o *WatchBlocksCactusErrorResponseV1) GetCode() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *WatchBlocksCactusErrorResponseV1) GetCodeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *WatchBlocksCactusErrorResponseV1) SetCode(v float32) {
	o.Code = v
}

// GetErrorMessage returns the ErrorMessage field value
func (o *WatchBlocksCactusErrorResponseV1) GetErrorMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value
// and a boolean to check if the value has been set.
func (o *WatchBlocksCactusErrorResponseV1) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorMessage, true
}

// SetErrorMessage sets field value
func (o *WatchBlocksCactusErrorResponseV1) SetErrorMessage(v string) {
	o.ErrorMessage = v
}

func (o WatchBlocksCactusErrorResponseV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchBlocksCactusErrorResponseV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["errorMessage"] = o.ErrorMessage
	return toSerialize, nil
}

type NullableWatchBlocksCactusErrorResponseV1 struct {
	value *WatchBlocksCactusErrorResponseV1
	isSet bool
}

func (v NullableWatchBlocksCactusErrorResponseV1) Get() *WatchBlocksCactusErrorResponseV1 {
	return v.value
}

func (v *NullableWatchBlocksCactusErrorResponseV1) Set(val *WatchBlocksCactusErrorResponseV1) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchBlocksCactusErrorResponseV1) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchBlocksCactusErrorResponseV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchBlocksCactusErrorResponseV1(val *WatchBlocksCactusErrorResponseV1) *NullableWatchBlocksCactusErrorResponseV1 {
	return &NullableWatchBlocksCactusErrorResponseV1{value: val, isSet: true}
}

func (v NullableWatchBlocksCactusErrorResponseV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchBlocksCactusErrorResponseV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


