/*
Hyperledger Cactus Plugin - Connector Fabric

Can perform basic tasks on a fabric ledger

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-fabric

import (
	"encoding/json"
)

// checks if the GatewayDiscoveryOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayDiscoveryOptions{}

// GatewayDiscoveryOptions struct for GatewayDiscoveryOptions
type GatewayDiscoveryOptions struct {
	AsLocalhost *bool `json:"asLocalhost,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
}

// NewGatewayDiscoveryOptions instantiates a new GatewayDiscoveryOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayDiscoveryOptions() *GatewayDiscoveryOptions {
	this := GatewayDiscoveryOptions{}
	return &this
}

// NewGatewayDiscoveryOptionsWithDefaults instantiates a new GatewayDiscoveryOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayDiscoveryOptionsWithDefaults() *GatewayDiscoveryOptions {
	this := GatewayDiscoveryOptions{}
	return &this
}

// GetAsLocalhost returns the AsLocalhost field value if set, zero value otherwise.
func (o *GatewayDiscoveryOptions) GetAsLocalhost() bool {
	if o == nil || IsNil(o.AsLocalhost) {
		var ret bool
		return ret
	}
	return *o.AsLocalhost
}

// GetAsLocalhostOk returns a tuple with the AsLocalhost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayDiscoveryOptions) GetAsLocalhostOk() (*bool, bool) {
	if o == nil || IsNil(o.AsLocalhost) {
		return nil, false
	}
	return o.AsLocalhost, true
}

// HasAsLocalhost returns a boolean if a field has been set.
func (o *GatewayDiscoveryOptions) HasAsLocalhost() bool {
	if o != nil && !IsNil(o.AsLocalhost) {
		return true
	}

	return false
}

// SetAsLocalhost gets a reference to the given bool and assigns it to the AsLocalhost field.
func (o *GatewayDiscoveryOptions) SetAsLocalhost(v bool) {
	o.AsLocalhost = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GatewayDiscoveryOptions) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayDiscoveryOptions) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GatewayDiscoveryOptions) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GatewayDiscoveryOptions) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o GatewayDiscoveryOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayDiscoveryOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AsLocalhost) {
		toSerialize["asLocalhost"] = o.AsLocalhost
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableGatewayDiscoveryOptions struct {
	value *GatewayDiscoveryOptions
	isSet bool
}

func (v NullableGatewayDiscoveryOptions) Get() *GatewayDiscoveryOptions {
	return v.value
}

func (v *NullableGatewayDiscoveryOptions) Set(val *GatewayDiscoveryOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayDiscoveryOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayDiscoveryOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayDiscoveryOptions(val *GatewayDiscoveryOptions) *NullableGatewayDiscoveryOptions {
	return &NullableGatewayDiscoveryOptions{value: val, isSet: true}
}

func (v NullableGatewayDiscoveryOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayDiscoveryOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


