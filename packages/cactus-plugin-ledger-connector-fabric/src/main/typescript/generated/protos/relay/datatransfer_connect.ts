// Copyright IBM Corp. All Rights Reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,js_import_style=module"
// @generated from file relay/datatransfer.proto (package relay.datatransfer, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Query } from "../common/query_pb.js";
import { Ack } from "../common/ack_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { ViewPayload } from "../common/state_pb.js";

/**
 * definitions of all messages used in the datatransfer protocol
 *
 * @generated from service relay.datatransfer.DataTransfer
 */
export const DataTransfer = {
  typeName: "relay.datatransfer.DataTransfer",
  methods: {
    /**
     * the requesting relay sends a RequestState request to the remote relay with a
     * query defining the data it wants to receive
     *
     * @generated from rpc relay.datatransfer.DataTransfer.RequestState
     */
    requestState: {
      name: "RequestState",
      I: Query,
      O: Ack,
      kind: MethodKind.Unary,
    },
    /**
     * the remote relay asynchronously sends back the requested data with
     * SendState
     *
     * @generated from rpc relay.datatransfer.DataTransfer.SendState
     */
    sendState: {
      name: "SendState",
      I: ViewPayload,
      O: Ack,
      kind: MethodKind.Unary,
    },
    /**
     * Handling state sent from the driver.
     *
     * @generated from rpc relay.datatransfer.DataTransfer.SendDriverState
     */
    sendDriverState: {
      name: "SendDriverState",
      I: ViewPayload,
      O: Ack,
      kind: MethodKind.Unary,
    },
  }
} as const;

