// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,js_import_style=module"
// @generated from file orderer/ab.proto (package orderer, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Envelope } from "../common/common_pb.js";
import { BroadcastResponse, DeliverResponse } from "./ab_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service orderer.AtomicBroadcast
 */
export const AtomicBroadcast = {
  typeName: "orderer.AtomicBroadcast",
  methods: {
    /**
     * broadcast receives a reply of Acknowledgement for each common.Envelope in order, indicating success or type of failure
     *
     * @generated from rpc orderer.AtomicBroadcast.Broadcast
     */
    broadcast: {
      name: "Broadcast",
      I: Envelope,
      O: BroadcastResponse,
      kind: MethodKind.BiDiStreaming,
    },
    /**
     * deliver first requires an Envelope of type DELIVER_SEEK_INFO with Payload data as a mashaled SeekInfo message, then a stream of block replies is received.
     *
     * @generated from rpc orderer.AtomicBroadcast.Deliver
     */
    deliver: {
      name: "Deliver",
      I: Envelope,
      O: DeliverResponse,
      kind: MethodKind.BiDiStreaming,
    },
  }
} as const;

