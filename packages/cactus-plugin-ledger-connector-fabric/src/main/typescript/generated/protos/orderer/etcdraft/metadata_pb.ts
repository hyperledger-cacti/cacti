// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file orderer/etcdraft/metadata.proto (package etcdraft, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file orderer/etcdraft/metadata.proto.
 */
export const file_orderer_etcdraft_metadata: GenFile = /*@__PURE__*/
  fileDesc("Ch9vcmRlcmVyL2V0Y2RyYWZ0L21ldGFkYXRhLnByb3RvEghldGNkcmFmdCJVCg1CbG9ja01ldGFkYXRhEhUKDWNvbnNlbnRlcl9pZHMYASADKAQSGQoRbmV4dF9jb25zZW50ZXJfaWQYAiABKAQSEgoKcmFmdF9pbmRleBgDIAEoBCInCg9DbHVzdGVyTWV0YWRhdGESFAoMYWN0aXZlX25vZGVzGAEgAygEQmoKLm9yZy5oeXBlcmxlZGdlci5mYWJyaWMucHJvdG9zLm9yZGVyZXIuZXRjZHJhZnRaOGdpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXByb3Rvcy1nby9vcmRlcmVyL2V0Y2RyYWZ0YgZwcm90bzM");

/**
 * BlockMetadata stores data used by the Raft OSNs when
 * coordinating with each other, to be serialized into
 * block meta dta field and used after failres and restarts.
 *
 * @generated from message etcdraft.BlockMetadata
 */
export type BlockMetadata = Message<"etcdraft.BlockMetadata"> & {
  /**
   * Maintains a mapping between the cluster's OSNs
   * and their Raft IDs.
   *
   * @generated from field: repeated uint64 consenter_ids = 1;
   */
  consenterIds: bigint[];

  /**
   * Carries the Raft ID value that will be assigned
   * to the next OSN that will join this cluster.
   *
   * @generated from field: uint64 next_consenter_id = 2;
   */
  nextConsenterId: bigint;

  /**
   * Index of etcd/raft entry for current block.
   *
   * @generated from field: uint64 raft_index = 3;
   */
  raftIndex: bigint;
};

/**
 * Describes the message etcdraft.BlockMetadata.
 * Use `create(BlockMetadataSchema)` to create a new message.
 */
export const BlockMetadataSchema: GenMessage<BlockMetadata> = /*@__PURE__*/
  messageDesc(file_orderer_etcdraft_metadata, 0);

/**
 * ClusterMetadata encapsulates metadata that is exchanged among cluster nodes
 *
 * @generated from message etcdraft.ClusterMetadata
 */
export type ClusterMetadata = Message<"etcdraft.ClusterMetadata"> & {
  /**
   * Indicates active nodes in cluster that are reacheable by Raft leader
   *
   * @generated from field: repeated uint64 active_nodes = 1;
   */
  activeNodes: bigint[];
};

/**
 * Describes the message etcdraft.ClusterMetadata.
 * Use `create(ClusterMetadataSchema)` to create a new message.
 */
export const ClusterMetadataSchema: GenMessage<ClusterMetadata> = /*@__PURE__*/
  messageDesc(file_orderer_etcdraft_metadata, 1);

