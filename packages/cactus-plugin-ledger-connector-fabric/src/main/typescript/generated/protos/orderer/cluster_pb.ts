// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file orderer/cluster.proto (package orderer, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Envelope, Status } from "../common/common_pb";
import { file_common_common } from "../common/common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file orderer/cluster.proto.
 */
export const file_orderer_cluster: GenFile = /*@__PURE__*/
  fileDesc("ChVvcmRlcmVyL2NsdXN0ZXIucHJvdG8SB29yZGVyZXIiggEKC1N0ZXBSZXF1ZXN0EjYKEWNvbnNlbnN1c19yZXF1ZXN0GAEgASgLMhkub3JkZXJlci5Db25zZW5zdXNSZXF1ZXN0SAASMAoOc3VibWl0X3JlcXVlc3QYAiABKAsyFi5vcmRlcmVyLlN1Ym1pdFJlcXVlc3RIAEIJCgdwYXlsb2FkIkgKDFN0ZXBSZXNwb25zZRItCgpzdWJtaXRfcmVzGAEgASgLMhcub3JkZXJlci5TdWJtaXRSZXNwb25zZUgAQgkKB3BheWxvYWQiRgoQQ29uc2Vuc3VzUmVxdWVzdBIPCgdjaGFubmVsGAEgASgJEg8KB3BheWxvYWQYAiABKAwSEAoIbWV0YWRhdGEYAyABKAwiYAoNU3VibWl0UmVxdWVzdBIPCgdjaGFubmVsGAEgASgJEhsKE2xhc3RfdmFsaWRhdGlvbl9zZXEYAiABKAQSIQoHcGF5bG9hZBgDIAEoCzIQLmNvbW1vbi5FbnZlbG9wZSJPCg5TdWJtaXRSZXNwb25zZRIPCgdjaGFubmVsGAEgASgJEh4KBnN0YXR1cxgCIAEoDjIOLmNvbW1vbi5TdGF0dXMSDAoEaW5mbxgDIAEoCTJCCgdDbHVzdGVyEjcKBFN0ZXASFC5vcmRlcmVyLlN0ZXBSZXF1ZXN0GhUub3JkZXJlci5TdGVwUmVzcG9uc2UoATABQlgKJW9yZy5oeXBlcmxlZGdlci5mYWJyaWMucHJvdG9zLm9yZGVyZXJaL2dpdGh1Yi5jb20vaHlwZXJsZWRnZXIvZmFicmljLXByb3Rvcy1nby9vcmRlcmVyYgZwcm90bzM", [file_common_common]);

/**
 * StepRequest wraps a message that is sent to a cluster member.
 *
 * @generated from message orderer.StepRequest
 */
export type StepRequest = Message<"orderer.StepRequest"> & {
  /**
   * @generated from oneof orderer.StepRequest.payload
   */
  payload: {
    /**
     * consensus_request is a consensus specific message.
     *
     * @generated from field: orderer.ConsensusRequest consensus_request = 1;
     */
    value: ConsensusRequest;
    case: "consensusRequest";
  } | {
    /**
     * submit_request is a relay of a transaction.
     *
     * @generated from field: orderer.SubmitRequest submit_request = 2;
     */
    value: SubmitRequest;
    case: "submitRequest";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message orderer.StepRequest.
 * Use `create(StepRequestSchema)` to create a new message.
 */
export const StepRequestSchema: GenMessage<StepRequest> = /*@__PURE__*/
  messageDesc(file_orderer_cluster, 0);

/**
 * StepResponse is a message received from a cluster member.
 *
 * @generated from message orderer.StepResponse
 */
export type StepResponse = Message<"orderer.StepResponse"> & {
  /**
   * @generated from oneof orderer.StepResponse.payload
   */
  payload: {
    /**
     * @generated from field: orderer.SubmitResponse submit_res = 1;
     */
    value: SubmitResponse;
    case: "submitRes";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message orderer.StepResponse.
 * Use `create(StepResponseSchema)` to create a new message.
 */
export const StepResponseSchema: GenMessage<StepResponse> = /*@__PURE__*/
  messageDesc(file_orderer_cluster, 1);

/**
 * ConsensusRequest is a consensus specific message sent to a cluster member.
 *
 * @generated from message orderer.ConsensusRequest
 */
export type ConsensusRequest = Message<"orderer.ConsensusRequest"> & {
  /**
   * @generated from field: string channel = 1;
   */
  channel: string;

  /**
   * @generated from field: bytes payload = 2;
   */
  payload: Uint8Array;

  /**
   * @generated from field: bytes metadata = 3;
   */
  metadata: Uint8Array;
};

/**
 * Describes the message orderer.ConsensusRequest.
 * Use `create(ConsensusRequestSchema)` to create a new message.
 */
export const ConsensusRequestSchema: GenMessage<ConsensusRequest> = /*@__PURE__*/
  messageDesc(file_orderer_cluster, 2);

/**
 * SubmitRequest wraps a transaction to be sent for ordering.
 *
 * @generated from message orderer.SubmitRequest
 */
export type SubmitRequest = Message<"orderer.SubmitRequest"> & {
  /**
   * @generated from field: string channel = 1;
   */
  channel: string;

  /**
   * last_validation_seq denotes the last
   * configuration sequence at which the
   * sender validated this message.
   *
   * @generated from field: uint64 last_validation_seq = 2;
   */
  lastValidationSeq: bigint;

  /**
   * content is the fabric transaction
   * that is forwarded to the cluster member.
   *
   * @generated from field: common.Envelope payload = 3;
   */
  payload?: Envelope;
};

/**
 * Describes the message orderer.SubmitRequest.
 * Use `create(SubmitRequestSchema)` to create a new message.
 */
export const SubmitRequestSchema: GenMessage<SubmitRequest> = /*@__PURE__*/
  messageDesc(file_orderer_cluster, 3);

/**
 * SubmitResponse returns a success
 * or failure status to the sender.
 *
 * @generated from message orderer.SubmitResponse
 */
export type SubmitResponse = Message<"orderer.SubmitResponse"> & {
  /**
   * @generated from field: string channel = 1;
   */
  channel: string;

  /**
   * Status code, which may be used to programatically respond to success/failure.
   *
   * @generated from field: common.Status status = 2;
   */
  status: Status;

  /**
   * Info string which may contain additional information about the returned status.
   *
   * @generated from field: string info = 3;
   */
  info: string;
};

/**
 * Describes the message orderer.SubmitResponse.
 * Use `create(SubmitResponseSchema)` to create a new message.
 */
export const SubmitResponseSchema: GenMessage<SubmitResponse> = /*@__PURE__*/
  messageDesc(file_orderer_cluster, 4);

/**
 * Cluster defines communication between cluster members.
 *
 * @generated from service orderer.Cluster
 */
export const Cluster: GenService<{
  /**
   * Step passes an implementation-specific message to another cluster member.
   *
   * @generated from rpc orderer.Cluster.Step
   */
  step: {
    methodKind: "bidi_streaming";
    input: typeof StepRequestSchema;
    output: typeof StepResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_orderer_cluster, 0);

