// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file peer/lifecycle/db.proto (package lifecycle, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file peer/lifecycle/db.proto.
 */
export const file_peer_lifecycle_db: GenFile = /*@__PURE__*/
  fileDesc("ChdwZWVyL2xpZmVjeWNsZS9kYi5wcm90bxIJbGlmZWN5Y2xlIjEKDVN0YXRlTWV0YWRhdGESEAoIZGF0YXR5cGUYASABKAkSDgoGZmllbGRzGAIgAygJIkcKCVN0YXRlRGF0YRIPCgVJbnQ2NBgBIAEoA0gAEg8KBUJ5dGVzGAIgASgMSAASEAoGU3RyaW5nGAMgASgJSABCBgoEVHlwZUJmCixvcmcuaHlwZXJsZWRnZXIuZmFicmljLnByb3Rvcy5wZWVyLmxpZmVjeWNsZVo2Z2l0aHViLmNvbS9oeXBlcmxlZGdlci9mYWJyaWMtcHJvdG9zLWdvL3BlZXIvbGlmZWN5Y2xlYgZwcm90bzM");

/**
 * StateMetadata describes the keys in a namespace.  It is necessary because
 * in collections, range scans are not possible during transactions which
 * write.  Therefore we must track the keys in our namespace ourselves.
 *
 * @generated from message lifecycle.StateMetadata
 */
export type StateMetadata = Message<"lifecycle.StateMetadata"> & {
  /**
   * @generated from field: string datatype = 1;
   */
  datatype: string;

  /**
   * @generated from field: repeated string fields = 2;
   */
  fields: string[];
};

/**
 * Describes the message lifecycle.StateMetadata.
 * Use `create(StateMetadataSchema)` to create a new message.
 */
export const StateMetadataSchema: GenMessage<StateMetadata> = /*@__PURE__*/
  messageDesc(file_peer_lifecycle_db, 0);

/**
 * StateData encodes a particular field of a datatype
 *
 * @generated from message lifecycle.StateData
 */
export type StateData = Message<"lifecycle.StateData"> & {
  /**
   * @generated from oneof lifecycle.StateData.Type
   */
  Type: {
    /**
     * @generated from field: int64 Int64 = 1;
     */
    value: bigint;
    case: "Int64";
  } | {
    /**
     * @generated from field: bytes Bytes = 2;
     */
    value: Uint8Array;
    case: "Bytes";
  } | {
    /**
     * @generated from field: string String = 3;
     */
    value: string;
    case: "String";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message lifecycle.StateData.
 * Use `create(StateDataSchema)` to create a new message.
 */
export const StateDataSchema: GenMessage<StateData> = /*@__PURE__*/
  messageDesc(file_peer_lifecycle_db, 1);

