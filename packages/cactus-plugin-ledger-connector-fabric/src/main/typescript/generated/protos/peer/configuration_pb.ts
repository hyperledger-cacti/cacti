// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file peer/configuration.proto (package protos, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file peer/configuration.proto.
 */
export const file_peer_configuration: GenFile = /*@__PURE__*/
  fileDesc("ChhwZWVyL2NvbmZpZ3VyYXRpb24ucHJvdG8SBnByb3RvcyI3CgtBbmNob3JQZWVycxIoCgxhbmNob3JfcGVlcnMYASADKAsyEi5wcm90b3MuQW5jaG9yUGVlciIoCgpBbmNob3JQZWVyEgwKBGhvc3QYASABKAkSDAoEcG9ydBgCIAEoBSIhCgtBUElSZXNvdXJjZRISCgpwb2xpY3lfcmVmGAEgASgJIm4KBEFDTHMSJAoEYWNscxgBIAMoCzIWLnByb3Rvcy5BQ0xzLkFjbHNFbnRyeRpACglBY2xzRW50cnkSCwoDa2V5GAEgASgJEiIKBXZhbHVlGAIgASgLMhMucHJvdG9zLkFQSVJlc291cmNlOgI4AUJSCiJvcmcuaHlwZXJsZWRnZXIuZmFicmljLnByb3Rvcy5wZWVyWixnaXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy1wcm90b3MtZ28vcGVlcmIGcHJvdG8z");

/**
 * AnchorPeers simply represents list of anchor peers which is used in ConfigurationItem
 *
 * @generated from message protos.AnchorPeers
 */
export type AnchorPeers = Message<"protos.AnchorPeers"> & {
  /**
   * @generated from field: repeated protos.AnchorPeer anchor_peers = 1;
   */
  anchorPeers: AnchorPeer[];
};

/**
 * Describes the message protos.AnchorPeers.
 * Use `create(AnchorPeersSchema)` to create a new message.
 */
export const AnchorPeersSchema: GenMessage<AnchorPeers> = /*@__PURE__*/
  messageDesc(file_peer_configuration, 0);

/**
 * AnchorPeer message structure which provides information about anchor peer, it includes host name,
 * port number and peer certificate.
 *
 * @generated from message protos.AnchorPeer
 */
export type AnchorPeer = Message<"protos.AnchorPeer"> & {
  /**
   * DNS host name of the anchor peer
   *
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * The port number
   *
   * @generated from field: int32 port = 2;
   */
  port: number;
};

/**
 * Describes the message protos.AnchorPeer.
 * Use `create(AnchorPeerSchema)` to create a new message.
 */
export const AnchorPeerSchema: GenMessage<AnchorPeer> = /*@__PURE__*/
  messageDesc(file_peer_configuration, 1);

/**
 * APIResource represents an API resource in the peer whose ACL
 * is determined by the policy_ref field
 *
 * @generated from message protos.APIResource
 */
export type APIResource = Message<"protos.APIResource"> & {
  /**
   * The policy name to use for this API
   *
   * @generated from field: string policy_ref = 1;
   */
  policyRef: string;
};

/**
 * Describes the message protos.APIResource.
 * Use `create(APIResourceSchema)` to create a new message.
 */
export const APIResourceSchema: GenMessage<APIResource> = /*@__PURE__*/
  messageDesc(file_peer_configuration, 2);

/**
 * ACLs provides mappings for resources in a channel. APIResource encapsulates
 * reference to a policy used to determine ACL for the resource
 *
 * @generated from message protos.ACLs
 */
export type ACLs = Message<"protos.ACLs"> & {
  /**
   * @generated from field: map<string, protos.APIResource> acls = 1;
   */
  acls: { [key: string]: APIResource };
};

/**
 * Describes the message protos.ACLs.
 * Use `create(ACLsSchema)` to create a new message.
 */
export const ACLsSchema: GenMessage<ACLs> = /*@__PURE__*/
  messageDesc(file_peer_configuration, 3);

