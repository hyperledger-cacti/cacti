// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file peer/query.proto (package protos, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file peer/query.proto.
 */
export const file_peer_query: GenFile = /*@__PURE__*/
  fileDesc("ChBwZWVyL3F1ZXJ5LnByb3RvEgZwcm90b3MiQwoWQ2hhaW5jb2RlUXVlcnlSZXNwb25zZRIpCgpjaGFpbmNvZGVzGAEgAygLMhUucHJvdG9zLkNoYWluY29kZUluZm8icwoNQ2hhaW5jb2RlSW5mbxIMCgRuYW1lGAEgASgJEg8KB3ZlcnNpb24YAiABKAkSDAoEcGF0aBgDIAEoCRINCgVpbnB1dBgEIAEoCRIMCgRlc2NjGAUgASgJEgwKBHZzY2MYBiABKAkSCgoCaWQYByABKAwiPQoUQ2hhbm5lbFF1ZXJ5UmVzcG9uc2USJQoIY2hhbm5lbHMYASADKAsyEy5wcm90b3MuQ2hhbm5lbEluZm8iIQoLQ2hhbm5lbEluZm8SEgoKY2hhbm5lbF9pZBgBIAEoCUJSCiJvcmcuaHlwZXJsZWRnZXIuZmFicmljLnByb3Rvcy5wZWVyWixnaXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy1wcm90b3MtZ28vcGVlcmIGcHJvdG8z");

/**
 * ChaincodeQueryResponse returns information about each chaincode that pertains
 * to a query in lscc.go, such as GetChaincodes (returns all chaincodes
 * instantiated on a channel), and GetInstalledChaincodes (returns all chaincodes
 * installed on a peer)
 *
 * @generated from message protos.ChaincodeQueryResponse
 */
export type ChaincodeQueryResponse = Message<"protos.ChaincodeQueryResponse"> & {
  /**
   * @generated from field: repeated protos.ChaincodeInfo chaincodes = 1;
   */
  chaincodes: ChaincodeInfo[];
};

/**
 * Describes the message protos.ChaincodeQueryResponse.
 * Use `create(ChaincodeQueryResponseSchema)` to create a new message.
 */
export const ChaincodeQueryResponseSchema: GenMessage<ChaincodeQueryResponse> = /*@__PURE__*/
  messageDesc(file_peer_query, 0);

/**
 * ChaincodeInfo contains general information about an installed/instantiated
 * chaincode
 *
 * @generated from message protos.ChaincodeInfo
 */
export type ChaincodeInfo = Message<"protos.ChaincodeInfo"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * the path as specified by the install/instantiate transaction
   *
   * @generated from field: string path = 3;
   */
  path: string;

  /**
   * the chaincode function upon instantiation and its arguments. This will be
   * blank if the query is returning information about installed chaincodes.
   *
   * @generated from field: string input = 4;
   */
  input: string;

  /**
   * the name of the ESCC for this chaincode. This will be
   * blank if the query is returning information about installed chaincodes.
   *
   * @generated from field: string escc = 5;
   */
  escc: string;

  /**
   * the name of the VSCC for this chaincode. This will be
   * blank if the query is returning information about installed chaincodes.
   *
   * @generated from field: string vscc = 6;
   */
  vscc: string;

  /**
   * the chaincode unique id.
   * computed as: H(
   *                H(name || version) ||
   *                H(CodePackage)
   *              )
   *
   * @generated from field: bytes id = 7;
   */
  id: Uint8Array;
};

/**
 * Describes the message protos.ChaincodeInfo.
 * Use `create(ChaincodeInfoSchema)` to create a new message.
 */
export const ChaincodeInfoSchema: GenMessage<ChaincodeInfo> = /*@__PURE__*/
  messageDesc(file_peer_query, 1);

/**
 * ChannelQueryResponse returns information about each channel that pertains
 * to a query in lscc.go, such as GetChannels (returns all channels for a
 * given peer)
 *
 * @generated from message protos.ChannelQueryResponse
 */
export type ChannelQueryResponse = Message<"protos.ChannelQueryResponse"> & {
  /**
   * @generated from field: repeated protos.ChannelInfo channels = 1;
   */
  channels: ChannelInfo[];
};

/**
 * Describes the message protos.ChannelQueryResponse.
 * Use `create(ChannelQueryResponseSchema)` to create a new message.
 */
export const ChannelQueryResponseSchema: GenMessage<ChannelQueryResponse> = /*@__PURE__*/
  messageDesc(file_peer_query, 2);

/**
 * ChannelInfo contains general information about channels
 *
 * @generated from message protos.ChannelInfo
 */
export type ChannelInfo = Message<"protos.ChannelInfo"> & {
  /**
   * @generated from field: string channel_id = 1;
   */
  channelId: string;
};

/**
 * Describes the message protos.ChannelInfo.
 * Use `create(ChannelInfoSchema)` to create a new message.
 */
export const ChannelInfoSchema: GenMessage<ChannelInfo> = /*@__PURE__*/
  messageDesc(file_peer_query, 3);

