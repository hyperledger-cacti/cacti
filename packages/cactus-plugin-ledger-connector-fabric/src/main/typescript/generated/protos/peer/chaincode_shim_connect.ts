// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,js_import_style=module"
// @generated from file peer/chaincode_shim.proto (package protos, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ChaincodeMessage } from "./chaincode_shim_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Interface that provides support to chaincode execution. ChaincodeContext
 * provides the context necessary for the server to respond appropriately.
 *
 * @generated from service protos.ChaincodeSupport
 */
export const ChaincodeSupport = {
  typeName: "protos.ChaincodeSupport",
  methods: {
    /**
     * @generated from rpc protos.ChaincodeSupport.Register
     */
    register: {
      name: "Register",
      I: ChaincodeMessage,
      O: ChaincodeMessage,
      kind: MethodKind.BiDiStreaming,
    },
  }
} as const;

/**
 * Chaincode as a server - peer establishes a connection to the chaincode as a client
 * Currently only supports a stream connection.
 *
 * @generated from service protos.Chaincode
 */
export const Chaincode = {
  typeName: "protos.Chaincode",
  methods: {
    /**
     * @generated from rpc protos.Chaincode.Connect
     */
    connect: {
      name: "Connect",
      I: ChaincodeMessage,
      O: ChaincodeMessage,
      kind: MethodKind.BiDiStreaming,
    },
  }
} as const;

