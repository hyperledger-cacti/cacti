// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,js_import_style=module"
// @generated from file peer/events.proto (package protos, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Envelope } from "../common/common_pb.js";
import { DeliverResponse } from "./events_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service protos.Deliver
 */
export const Deliver = {
  typeName: "protos.Deliver",
  methods: {
    /**
     * Deliver first requires an Envelope of type ab.DELIVER_SEEK_INFO with
     * Payload data as a marshaled orderer.SeekInfo message,
     * then a stream of block replies is received
     *
     * @generated from rpc protos.Deliver.Deliver
     */
    deliver: {
      name: "Deliver",
      I: Envelope,
      O: DeliverResponse,
      kind: MethodKind.BiDiStreaming,
    },
    /**
     * DeliverFiltered first requires an Envelope of type ab.DELIVER_SEEK_INFO with
     * Payload data as a marshaled orderer.SeekInfo message,
     * then a stream of **filtered** block replies is received
     *
     * @generated from rpc protos.Deliver.DeliverFiltered
     */
    deliverFiltered: {
      name: "DeliverFiltered",
      I: Envelope,
      O: DeliverResponse,
      kind: MethodKind.BiDiStreaming,
    },
    /**
     * DeliverWithPrivateData first requires an Envelope of type ab.DELIVER_SEEK_INFO with
     * Payload data as a marshaled orderer.SeekInfo message,
     * then a stream of block and private data replies is received
     *
     * @generated from rpc protos.Deliver.DeliverWithPrivateData
     */
    deliverWithPrivateData: {
      name: "DeliverWithPrivateData",
      I: Envelope,
      O: DeliverResponse,
      kind: MethodKind.BiDiStreaming,
    },
  }
} as const;

