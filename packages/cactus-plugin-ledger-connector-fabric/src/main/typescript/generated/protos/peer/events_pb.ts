// Copyright the Hyperledger Fabric contributors. All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file peer/events.proto (package protos, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Block, EnvelopeSchema, HeaderType, Status } from "../common/common_pb";
import { file_common_common } from "../common/common_pb";
import type { TxPvtReadWriteSet } from "../ledger/rwset/rwset_pb";
import { file_ledger_rwset_rwset } from "../ledger/rwset/rwset_pb";
import type { ChaincodeEvent } from "./chaincode_event_pb";
import { file_peer_chaincode_event } from "./chaincode_event_pb";
import type { TxValidationCode } from "./transaction_pb";
import { file_peer_transaction } from "./transaction_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file peer/events.proto.
 */
export const file_peer_events: GenFile = /*@__PURE__*/
  fileDesc("ChFwZWVyL2V2ZW50cy5wcm90bxIGcHJvdG9zIm8KDUZpbHRlcmVkQmxvY2sSEgoKY2hhbm5lbF9pZBgBIAEoCRIOCgZudW1iZXIYAiABKAQSOgoVZmlsdGVyZWRfdHJhbnNhY3Rpb25zGAQgAygLMhsucHJvdG9zLkZpbHRlcmVkVHJhbnNhY3Rpb24ixgEKE0ZpbHRlcmVkVHJhbnNhY3Rpb24SDAoEdHhpZBgBIAEoCRIgCgR0eXBlGAIgASgOMhIuY29tbW9uLkhlYWRlclR5cGUSNAoSdHhfdmFsaWRhdGlvbl9jb2RlGAMgASgOMhgucHJvdG9zLlR4VmFsaWRhdGlvbkNvZGUSQQoTdHJhbnNhY3Rpb25fYWN0aW9ucxgEIAEoCzIiLnByb3Rvcy5GaWx0ZXJlZFRyYW5zYWN0aW9uQWN0aW9uc0gAQgYKBERhdGEiWAoaRmlsdGVyZWRUcmFuc2FjdGlvbkFjdGlvbnMSOgoRY2hhaW5jb2RlX2FjdGlvbnMYASADKAsyHy5wcm90b3MuRmlsdGVyZWRDaGFpbmNvZGVBY3Rpb24iSgoXRmlsdGVyZWRDaGFpbmNvZGVBY3Rpb24SLwoPY2hhaW5jb2RlX2V2ZW50GAEgASgLMhYucHJvdG9zLkNoYWluY29kZUV2ZW50Is8BChNCbG9ja0FuZFByaXZhdGVEYXRhEhwKBWJsb2NrGAEgASgLMg0uY29tbW9uLkJsb2NrEkkKEHByaXZhdGVfZGF0YV9tYXAYAiADKAsyLy5wcm90b3MuQmxvY2tBbmRQcml2YXRlRGF0YS5Qcml2YXRlRGF0YU1hcEVudHJ5Gk8KE1ByaXZhdGVEYXRhTWFwRW50cnkSCwoDa2V5GAEgASgEEicKBXZhbHVlGAIgASgLMhgucndzZXQuVHhQdnRSZWFkV3JpdGVTZXQ6AjgBIssBCg9EZWxpdmVyUmVzcG9uc2USIAoGc3RhdHVzGAEgASgOMg4uY29tbW9uLlN0YXR1c0gAEh4KBWJsb2NrGAIgASgLMg0uY29tbW9uLkJsb2NrSAASLwoOZmlsdGVyZWRfYmxvY2sYAyABKAsyFS5wcm90b3MuRmlsdGVyZWRCbG9ja0gAEj0KFmJsb2NrX2FuZF9wcml2YXRlX2RhdGEYBCABKAsyGy5wcm90b3MuQmxvY2tBbmRQcml2YXRlRGF0YUgAQgYKBFR5cGUy1AEKB0RlbGl2ZXISOgoHRGVsaXZlchIQLmNvbW1vbi5FbnZlbG9wZRoXLnByb3Rvcy5EZWxpdmVyUmVzcG9uc2UiACgBMAESQgoPRGVsaXZlckZpbHRlcmVkEhAuY29tbW9uLkVudmVsb3BlGhcucHJvdG9zLkRlbGl2ZXJSZXNwb25zZSIAKAEwARJJChZEZWxpdmVyV2l0aFByaXZhdGVEYXRhEhAuY29tbW9uLkVudmVsb3BlGhcucHJvdG9zLkRlbGl2ZXJSZXNwb25zZSIAKAEwAUJhCiJvcmcuaHlwZXJsZWRnZXIuZmFicmljLnByb3Rvcy5wZWVyQg1FdmVudHNQYWNrYWdlWixnaXRodWIuY29tL2h5cGVybGVkZ2VyL2ZhYnJpYy1wcm90b3MtZ28vcGVlcmIGcHJvdG8z", [file_common_common, file_ledger_rwset_rwset, file_peer_chaincode_event, file_peer_transaction]);

/**
 * FilteredBlock is a minimal set of information about a block
 *
 * @generated from message protos.FilteredBlock
 */
export type FilteredBlock = Message<"protos.FilteredBlock"> & {
  /**
   * @generated from field: string channel_id = 1;
   */
  channelId: string;

  /**
   * The position in the blockchain
   *
   * @generated from field: uint64 number = 2;
   */
  number: bigint;

  /**
   * @generated from field: repeated protos.FilteredTransaction filtered_transactions = 4;
   */
  filteredTransactions: FilteredTransaction[];
};

/**
 * Describes the message protos.FilteredBlock.
 * Use `create(FilteredBlockSchema)` to create a new message.
 */
export const FilteredBlockSchema: GenMessage<FilteredBlock> = /*@__PURE__*/
  messageDesc(file_peer_events, 0);

/**
 * FilteredTransaction is a minimal set of information about a transaction
 * within a block
 *
 * @generated from message protos.FilteredTransaction
 */
export type FilteredTransaction = Message<"protos.FilteredTransaction"> & {
  /**
   * @generated from field: string txid = 1;
   */
  txid: string;

  /**
   * @generated from field: common.HeaderType type = 2;
   */
  type: HeaderType;

  /**
   * @generated from field: protos.TxValidationCode tx_validation_code = 3;
   */
  txValidationCode: TxValidationCode;

  /**
   * @generated from oneof protos.FilteredTransaction.Data
   */
  Data: {
    /**
     * @generated from field: protos.FilteredTransactionActions transaction_actions = 4;
     */
    value: FilteredTransactionActions;
    case: "transactionActions";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message protos.FilteredTransaction.
 * Use `create(FilteredTransactionSchema)` to create a new message.
 */
export const FilteredTransactionSchema: GenMessage<FilteredTransaction> = /*@__PURE__*/
  messageDesc(file_peer_events, 1);

/**
 * FilteredTransactionActions is a wrapper for array of TransactionAction
 * message from regular block
 *
 * @generated from message protos.FilteredTransactionActions
 */
export type FilteredTransactionActions = Message<"protos.FilteredTransactionActions"> & {
  /**
   * @generated from field: repeated protos.FilteredChaincodeAction chaincode_actions = 1;
   */
  chaincodeActions: FilteredChaincodeAction[];
};

/**
 * Describes the message protos.FilteredTransactionActions.
 * Use `create(FilteredTransactionActionsSchema)` to create a new message.
 */
export const FilteredTransactionActionsSchema: GenMessage<FilteredTransactionActions> = /*@__PURE__*/
  messageDesc(file_peer_events, 2);

/**
 * FilteredChaincodeAction is a minimal set of information about an action
 * within a transaction
 *
 * @generated from message protos.FilteredChaincodeAction
 */
export type FilteredChaincodeAction = Message<"protos.FilteredChaincodeAction"> & {
  /**
   * @generated from field: protos.ChaincodeEvent chaincode_event = 1;
   */
  chaincodeEvent?: ChaincodeEvent;
};

/**
 * Describes the message protos.FilteredChaincodeAction.
 * Use `create(FilteredChaincodeActionSchema)` to create a new message.
 */
export const FilteredChaincodeActionSchema: GenMessage<FilteredChaincodeAction> = /*@__PURE__*/
  messageDesc(file_peer_events, 3);

/**
 * BlockAndPrivateData contains Block and a map from tx_seq_in_block to rwset.TxPvtReadWriteSet
 *
 * @generated from message protos.BlockAndPrivateData
 */
export type BlockAndPrivateData = Message<"protos.BlockAndPrivateData"> & {
  /**
   * @generated from field: common.Block block = 1;
   */
  block?: Block;

  /**
   * map from tx_seq_in_block to rwset.TxPvtReadWriteSet
   *
   * @generated from field: map<uint64, rwset.TxPvtReadWriteSet> private_data_map = 2;
   */
  privateDataMap: { [key: string]: TxPvtReadWriteSet };
};

/**
 * Describes the message protos.BlockAndPrivateData.
 * Use `create(BlockAndPrivateDataSchema)` to create a new message.
 */
export const BlockAndPrivateDataSchema: GenMessage<BlockAndPrivateData> = /*@__PURE__*/
  messageDesc(file_peer_events, 4);

/**
 * DeliverResponse
 *
 * @generated from message protos.DeliverResponse
 */
export type DeliverResponse = Message<"protos.DeliverResponse"> & {
  /**
   * @generated from oneof protos.DeliverResponse.Type
   */
  Type: {
    /**
     * @generated from field: common.Status status = 1;
     */
    value: Status;
    case: "status";
  } | {
    /**
     * @generated from field: common.Block block = 2;
     */
    value: Block;
    case: "block";
  } | {
    /**
     * @generated from field: protos.FilteredBlock filtered_block = 3;
     */
    value: FilteredBlock;
    case: "filteredBlock";
  } | {
    /**
     * @generated from field: protos.BlockAndPrivateData block_and_private_data = 4;
     */
    value: BlockAndPrivateData;
    case: "blockAndPrivateData";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message protos.DeliverResponse.
 * Use `create(DeliverResponseSchema)` to create a new message.
 */
export const DeliverResponseSchema: GenMessage<DeliverResponse> = /*@__PURE__*/
  messageDesc(file_peer_events, 5);

/**
 * @generated from service protos.Deliver
 */
export const Deliver: GenService<{
  /**
   * Deliver first requires an Envelope of type ab.DELIVER_SEEK_INFO with
   * Payload data as a marshaled orderer.SeekInfo message,
   * then a stream of block replies is received
   *
   * @generated from rpc protos.Deliver.Deliver
   */
  deliver: {
    methodKind: "bidi_streaming";
    input: typeof EnvelopeSchema;
    output: typeof DeliverResponseSchema;
  },
  /**
   * DeliverFiltered first requires an Envelope of type ab.DELIVER_SEEK_INFO with
   * Payload data as a marshaled orderer.SeekInfo message,
   * then a stream of **filtered** block replies is received
   *
   * @generated from rpc protos.Deliver.DeliverFiltered
   */
  deliverFiltered: {
    methodKind: "bidi_streaming";
    input: typeof EnvelopeSchema;
    output: typeof DeliverResponseSchema;
  },
  /**
   * DeliverWithPrivateData first requires an Envelope of type ab.DELIVER_SEEK_INFO with
   * Payload data as a marshaled orderer.SeekInfo message,
   * then a stream of block and private data replies is received
   *
   * @generated from rpc protos.Deliver.DeliverWithPrivateData
   */
  deliverWithPrivateData: {
    methodKind: "bidi_streaming";
    input: typeof EnvelopeSchema;
    output: typeof DeliverResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_peer_events, 0);

