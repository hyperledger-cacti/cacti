/*
Hyperledger Cacti Plugin - Connector DAML

Can perform basic tasks on a DAML ledger

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-daml

import (
	"encoding/json"
)

// checks if the QueryIOUEndpointResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryIOUEndpointResponse{}

// QueryIOUEndpointResponse This method is the response for querying a simple IOU contract.
type QueryIOUEndpointResponse struct {
	CompletionOffset *string `json:"completionOffset,omitempty"`
	Events []QueryIOUEndpointResponseEventsInner `json:"events,omitempty"`
}

// NewQueryIOUEndpointResponse instantiates a new QueryIOUEndpointResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryIOUEndpointResponse() *QueryIOUEndpointResponse {
	this := QueryIOUEndpointResponse{}
	return &this
}

// NewQueryIOUEndpointResponseWithDefaults instantiates a new QueryIOUEndpointResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryIOUEndpointResponseWithDefaults() *QueryIOUEndpointResponse {
	this := QueryIOUEndpointResponse{}
	return &this
}

// GetCompletionOffset returns the CompletionOffset field value if set, zero value otherwise.
func (o *QueryIOUEndpointResponse) GetCompletionOffset() string {
	if o == nil || IsNil(o.CompletionOffset) {
		var ret string
		return ret
	}
	return *o.CompletionOffset
}

// GetCompletionOffsetOk returns a tuple with the CompletionOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryIOUEndpointResponse) GetCompletionOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.CompletionOffset) {
		return nil, false
	}
	return o.CompletionOffset, true
}

// HasCompletionOffset returns a boolean if a field has been set.
func (o *QueryIOUEndpointResponse) HasCompletionOffset() bool {
	if o != nil && !IsNil(o.CompletionOffset) {
		return true
	}

	return false
}

// SetCompletionOffset gets a reference to the given string and assigns it to the CompletionOffset field.
func (o *QueryIOUEndpointResponse) SetCompletionOffset(v string) {
	o.CompletionOffset = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *QueryIOUEndpointResponse) GetEvents() []QueryIOUEndpointResponseEventsInner {
	if o == nil || IsNil(o.Events) {
		var ret []QueryIOUEndpointResponseEventsInner
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryIOUEndpointResponse) GetEventsOk() ([]QueryIOUEndpointResponseEventsInner, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *QueryIOUEndpointResponse) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []QueryIOUEndpointResponseEventsInner and assigns it to the Events field.
func (o *QueryIOUEndpointResponse) SetEvents(v []QueryIOUEndpointResponseEventsInner) {
	o.Events = v
}

func (o QueryIOUEndpointResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryIOUEndpointResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompletionOffset) {
		toSerialize["completionOffset"] = o.CompletionOffset
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	return toSerialize, nil
}

type NullableQueryIOUEndpointResponse struct {
	value *QueryIOUEndpointResponse
	isSet bool
}

func (v NullableQueryIOUEndpointResponse) Get() *QueryIOUEndpointResponse {
	return v.value
}

func (v *NullableQueryIOUEndpointResponse) Set(val *QueryIOUEndpointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryIOUEndpointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryIOUEndpointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryIOUEndpointResponse(val *QueryIOUEndpointResponse) *NullableQueryIOUEndpointResponse {
	return &NullableQueryIOUEndpointResponse{value: val, isSet: true}
}

func (v NullableQueryIOUEndpointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryIOUEndpointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


