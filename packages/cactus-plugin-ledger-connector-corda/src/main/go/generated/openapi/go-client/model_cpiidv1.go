/*
Hyperledger Cacti Plugin - Connector Corda

Can perform basic tasks on a Corda ledger

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-corda

import (
	"encoding/json"
)

// checks if the CPIIDV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CPIIDV1{}

// CPIIDV1 struct for CPIIDV1
type CPIIDV1 struct {
	Name string `json:"name"`
	SignerSummaryHash NullableString `json:"signerSummaryHash,omitempty"`
	Version string `json:"version"`
}

// NewCPIIDV1 instantiates a new CPIIDV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCPIIDV1(name string, version string) *CPIIDV1 {
	this := CPIIDV1{}
	this.Name = name
	this.Version = version
	return &this
}

// NewCPIIDV1WithDefaults instantiates a new CPIIDV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCPIIDV1WithDefaults() *CPIIDV1 {
	this := CPIIDV1{}
	return &this
}

// GetName returns the Name field value
func (o *CPIIDV1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CPIIDV1) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CPIIDV1) SetName(v string) {
	o.Name = v
}

// GetSignerSummaryHash returns the SignerSummaryHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CPIIDV1) GetSignerSummaryHash() string {
	if o == nil || IsNil(o.SignerSummaryHash.Get()) {
		var ret string
		return ret
	}
	return *o.SignerSummaryHash.Get()
}

// GetSignerSummaryHashOk returns a tuple with the SignerSummaryHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CPIIDV1) GetSignerSummaryHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SignerSummaryHash.Get(), o.SignerSummaryHash.IsSet()
}

// HasSignerSummaryHash returns a boolean if a field has been set.
func (o *CPIIDV1) HasSignerSummaryHash() bool {
	if o != nil && o.SignerSummaryHash.IsSet() {
		return true
	}

	return false
}

// SetSignerSummaryHash gets a reference to the given NullableString and assigns it to the SignerSummaryHash field.
func (o *CPIIDV1) SetSignerSummaryHash(v string) {
	o.SignerSummaryHash.Set(&v)
}
// SetSignerSummaryHashNil sets the value for SignerSummaryHash to be an explicit nil
func (o *CPIIDV1) SetSignerSummaryHashNil() {
	o.SignerSummaryHash.Set(nil)
}

// UnsetSignerSummaryHash ensures that no value is present for SignerSummaryHash, not even an explicit nil
func (o *CPIIDV1) UnsetSignerSummaryHash() {
	o.SignerSummaryHash.Unset()
}

// GetVersion returns the Version field value
func (o *CPIIDV1) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *CPIIDV1) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *CPIIDV1) SetVersion(v string) {
	o.Version = v
}

func (o CPIIDV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CPIIDV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.SignerSummaryHash.IsSet() {
		toSerialize["signerSummaryHash"] = o.SignerSummaryHash.Get()
	}
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

type NullableCPIIDV1 struct {
	value *CPIIDV1
	isSet bool
}

func (v NullableCPIIDV1) Get() *CPIIDV1 {
	return v.value
}

func (v *NullableCPIIDV1) Set(val *CPIIDV1) {
	v.value = val
	v.isSet = true
}

func (v NullableCPIIDV1) IsSet() bool {
	return v.isSet
}

func (v *NullableCPIIDV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCPIIDV1(val *CPIIDV1) *NullableCPIIDV1 {
	return &NullableCPIIDV1{value: val, isSet: true}
}

func (v NullableCPIIDV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCPIIDV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


