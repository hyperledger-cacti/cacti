/*
Hyperledger Cacti Plugin - Connector Corda

Can perform basic tasks on a Corda ledger

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-corda

import (
	"encoding/json"
)

// checks if the Party type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Party{}

// Party struct for Party
type Party struct {
	Name CordaX500Name `json:"name"`
	OwningKey PublicKey `json:"owningKey"`
}

// NewParty instantiates a new Party object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParty(name CordaX500Name, owningKey PublicKey) *Party {
	this := Party{}
	this.Name = name
	this.OwningKey = owningKey
	return &this
}

// NewPartyWithDefaults instantiates a new Party object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartyWithDefaults() *Party {
	this := Party{}
	return &this
}

// GetName returns the Name field value
func (o *Party) GetName() CordaX500Name {
	if o == nil {
		var ret CordaX500Name
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Party) GetNameOk() (*CordaX500Name, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Party) SetName(v CordaX500Name) {
	o.Name = v
}

// GetOwningKey returns the OwningKey field value
func (o *Party) GetOwningKey() PublicKey {
	if o == nil {
		var ret PublicKey
		return ret
	}

	return o.OwningKey
}

// GetOwningKeyOk returns a tuple with the OwningKey field value
// and a boolean to check if the value has been set.
func (o *Party) GetOwningKeyOk() (*PublicKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwningKey, true
}

// SetOwningKey sets field value
func (o *Party) SetOwningKey(v PublicKey) {
	o.OwningKey = v
}

func (o Party) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Party) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["owningKey"] = o.OwningKey
	return toSerialize, nil
}

type NullableParty struct {
	value *Party
	isSet bool
}

func (v NullableParty) Get() *Party {
	return v.value
}

func (v *NullableParty) Set(val *Party) {
	v.value = val
	v.isSet = true
}

func (v NullableParty) IsSet() bool {
	return v.isSet
}

func (v *NullableParty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParty(val *Party) *NullableParty {
	return &NullableParty{value: val, isSet: true}
}

func (v NullableParty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


