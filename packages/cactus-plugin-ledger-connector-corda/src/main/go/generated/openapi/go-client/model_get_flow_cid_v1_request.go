/*
Hyperledger Cacti Plugin - Connector Corda

Can perform basic tasks on a Corda ledger

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-corda

import (
	"encoding/json"
)

// checks if the GetFlowCidV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFlowCidV1Request{}

// GetFlowCidV1Request This method gets the current status of the specified flow instance.
type GetFlowCidV1Request struct {
	Username string `json:"username"`
	Password string `json:"password"`
	RejectUnauthorized bool `json:"rejectUnauthorized"`
	HoldingIDShortHash *string `json:"holdingIDShortHash,omitempty"`
	ClientRequestId *string `json:"clientRequestId,omitempty"`
}

// NewGetFlowCidV1Request instantiates a new GetFlowCidV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFlowCidV1Request(username string, password string, rejectUnauthorized bool) *GetFlowCidV1Request {
	this := GetFlowCidV1Request{}
	this.Username = username
	this.Password = password
	this.RejectUnauthorized = rejectUnauthorized
	return &this
}

// NewGetFlowCidV1RequestWithDefaults instantiates a new GetFlowCidV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFlowCidV1RequestWithDefaults() *GetFlowCidV1Request {
	this := GetFlowCidV1Request{}
	return &this
}

// GetUsername returns the Username field value
func (o *GetFlowCidV1Request) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *GetFlowCidV1Request) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *GetFlowCidV1Request) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *GetFlowCidV1Request) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *GetFlowCidV1Request) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *GetFlowCidV1Request) SetPassword(v string) {
	o.Password = v
}

// GetRejectUnauthorized returns the RejectUnauthorized field value
func (o *GetFlowCidV1Request) GetRejectUnauthorized() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RejectUnauthorized
}

// GetRejectUnauthorizedOk returns a tuple with the RejectUnauthorized field value
// and a boolean to check if the value has been set.
func (o *GetFlowCidV1Request) GetRejectUnauthorizedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RejectUnauthorized, true
}

// SetRejectUnauthorized sets field value
func (o *GetFlowCidV1Request) SetRejectUnauthorized(v bool) {
	o.RejectUnauthorized = v
}

// GetHoldingIDShortHash returns the HoldingIDShortHash field value if set, zero value otherwise.
func (o *GetFlowCidV1Request) GetHoldingIDShortHash() string {
	if o == nil || IsNil(o.HoldingIDShortHash) {
		var ret string
		return ret
	}
	return *o.HoldingIDShortHash
}

// GetHoldingIDShortHashOk returns a tuple with the HoldingIDShortHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFlowCidV1Request) GetHoldingIDShortHashOk() (*string, bool) {
	if o == nil || IsNil(o.HoldingIDShortHash) {
		return nil, false
	}
	return o.HoldingIDShortHash, true
}

// HasHoldingIDShortHash returns a boolean if a field has been set.
func (o *GetFlowCidV1Request) HasHoldingIDShortHash() bool {
	if o != nil && !IsNil(o.HoldingIDShortHash) {
		return true
	}

	return false
}

// SetHoldingIDShortHash gets a reference to the given string and assigns it to the HoldingIDShortHash field.
func (o *GetFlowCidV1Request) SetHoldingIDShortHash(v string) {
	o.HoldingIDShortHash = &v
}

// GetClientRequestId returns the ClientRequestId field value if set, zero value otherwise.
func (o *GetFlowCidV1Request) GetClientRequestId() string {
	if o == nil || IsNil(o.ClientRequestId) {
		var ret string
		return ret
	}
	return *o.ClientRequestId
}

// GetClientRequestIdOk returns a tuple with the ClientRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFlowCidV1Request) GetClientRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientRequestId) {
		return nil, false
	}
	return o.ClientRequestId, true
}

// HasClientRequestId returns a boolean if a field has been set.
func (o *GetFlowCidV1Request) HasClientRequestId() bool {
	if o != nil && !IsNil(o.ClientRequestId) {
		return true
	}

	return false
}

// SetClientRequestId gets a reference to the given string and assigns it to the ClientRequestId field.
func (o *GetFlowCidV1Request) SetClientRequestId(v string) {
	o.ClientRequestId = &v
}

func (o GetFlowCidV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFlowCidV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["username"] = o.Username
	toSerialize["password"] = o.Password
	toSerialize["rejectUnauthorized"] = o.RejectUnauthorized
	if !IsNil(o.HoldingIDShortHash) {
		toSerialize["holdingIDShortHash"] = o.HoldingIDShortHash
	}
	if !IsNil(o.ClientRequestId) {
		toSerialize["clientRequestId"] = o.ClientRequestId
	}
	return toSerialize, nil
}

type NullableGetFlowCidV1Request struct {
	value *GetFlowCidV1Request
	isSet bool
}

func (v NullableGetFlowCidV1Request) Get() *GetFlowCidV1Request {
	return v.value
}

func (v *NullableGetFlowCidV1Request) Set(val *GetFlowCidV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFlowCidV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFlowCidV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFlowCidV1Request(val *GetFlowCidV1Request) *NullableGetFlowCidV1Request {
	return &NullableGetFlowCidV1Request{value: val, isSet: true}
}

func (v NullableGetFlowCidV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFlowCidV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


