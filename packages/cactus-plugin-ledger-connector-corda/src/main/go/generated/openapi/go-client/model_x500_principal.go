/*
Hyperledger Cacti Plugin - Connector Corda

Can perform basic tasks on a Corda ledger

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-corda

import (
	"encoding/json"
)

// checks if the X500Principal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &X500Principal{}

// X500Principal struct for X500Principal
type X500Principal struct {
	Name string `json:"name"`
	// Base64 encoded public key
	Encoded string `json:"encoded"`
}

// NewX500Principal instantiates a new X500Principal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewX500Principal(name string, encoded string) *X500Principal {
	this := X500Principal{}
	this.Name = name
	this.Encoded = encoded
	return &this
}

// NewX500PrincipalWithDefaults instantiates a new X500Principal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewX500PrincipalWithDefaults() *X500Principal {
	this := X500Principal{}
	return &this
}

// GetName returns the Name field value
func (o *X500Principal) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *X500Principal) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *X500Principal) SetName(v string) {
	o.Name = v
}

// GetEncoded returns the Encoded field value
func (o *X500Principal) GetEncoded() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Encoded
}

// GetEncodedOk returns a tuple with the Encoded field value
// and a boolean to check if the value has been set.
func (o *X500Principal) GetEncodedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Encoded, true
}

// SetEncoded sets field value
func (o *X500Principal) SetEncoded(v string) {
	o.Encoded = v
}

func (o X500Principal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o X500Principal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["encoded"] = o.Encoded
	return toSerialize, nil
}

type NullableX500Principal struct {
	value *X500Principal
	isSet bool
}

func (v NullableX500Principal) Get() *X500Principal {
	return v.value
}

func (v *NullableX500Principal) Set(val *X500Principal) {
	v.value = val
	v.isSet = true
}

func (v NullableX500Principal) IsSet() bool {
	return v.isSet
}

func (v *NullableX500Principal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableX500Principal(val *X500Principal) *NullableX500Principal {
	return &NullableX500Principal{value: val, isSet: true}
}

func (v NullableX500Principal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableX500Principal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


