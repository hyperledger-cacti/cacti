/*
Hyperledger Cacti Plugin - Connector Corda

Can perform basic tasks on a Corda ledger

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-corda

import (
	"encoding/json"
)

// checks if the GetMonitorTransactionsV1Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMonitorTransactionsV1Response{}

// GetMonitorTransactionsV1Response struct for GetMonitorTransactionsV1Response
type GetMonitorTransactionsV1Response struct {
	// Flag set to true if operation completed correctly.
	Success bool `json:"success"`
	// Message describing operation status or any errors that occurred.
	Msg string `json:"msg"`
	// The fully qualified name of the Corda state to monitor
	StateFullClassName *string `json:"stateFullClassName,omitempty"`
	Tx []GetMonitorTransactionsV1ResponseTxInner `json:"tx,omitempty"`
}

// NewGetMonitorTransactionsV1Response instantiates a new GetMonitorTransactionsV1Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMonitorTransactionsV1Response(success bool, msg string) *GetMonitorTransactionsV1Response {
	this := GetMonitorTransactionsV1Response{}
	this.Success = success
	this.Msg = msg
	return &this
}

// NewGetMonitorTransactionsV1ResponseWithDefaults instantiates a new GetMonitorTransactionsV1Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMonitorTransactionsV1ResponseWithDefaults() *GetMonitorTransactionsV1Response {
	this := GetMonitorTransactionsV1Response{}
	return &this
}

// GetSuccess returns the Success field value
func (o *GetMonitorTransactionsV1Response) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *GetMonitorTransactionsV1Response) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *GetMonitorTransactionsV1Response) SetSuccess(v bool) {
	o.Success = v
}

// GetMsg returns the Msg field value
func (o *GetMonitorTransactionsV1Response) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *GetMonitorTransactionsV1Response) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *GetMonitorTransactionsV1Response) SetMsg(v string) {
	o.Msg = v
}

// GetStateFullClassName returns the StateFullClassName field value if set, zero value otherwise.
func (o *GetMonitorTransactionsV1Response) GetStateFullClassName() string {
	if o == nil || IsNil(o.StateFullClassName) {
		var ret string
		return ret
	}
	return *o.StateFullClassName
}

// GetStateFullClassNameOk returns a tuple with the StateFullClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMonitorTransactionsV1Response) GetStateFullClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.StateFullClassName) {
		return nil, false
	}
	return o.StateFullClassName, true
}

// HasStateFullClassName returns a boolean if a field has been set.
func (o *GetMonitorTransactionsV1Response) HasStateFullClassName() bool {
	if o != nil && !IsNil(o.StateFullClassName) {
		return true
	}

	return false
}

// SetStateFullClassName gets a reference to the given string and assigns it to the StateFullClassName field.
func (o *GetMonitorTransactionsV1Response) SetStateFullClassName(v string) {
	o.StateFullClassName = &v
}

// GetTx returns the Tx field value if set, zero value otherwise.
func (o *GetMonitorTransactionsV1Response) GetTx() []GetMonitorTransactionsV1ResponseTxInner {
	if o == nil || IsNil(o.Tx) {
		var ret []GetMonitorTransactionsV1ResponseTxInner
		return ret
	}
	return o.Tx
}

// GetTxOk returns a tuple with the Tx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMonitorTransactionsV1Response) GetTxOk() ([]GetMonitorTransactionsV1ResponseTxInner, bool) {
	if o == nil || IsNil(o.Tx) {
		return nil, false
	}
	return o.Tx, true
}

// HasTx returns a boolean if a field has been set.
func (o *GetMonitorTransactionsV1Response) HasTx() bool {
	if o != nil && !IsNil(o.Tx) {
		return true
	}

	return false
}

// SetTx gets a reference to the given []GetMonitorTransactionsV1ResponseTxInner and assigns it to the Tx field.
func (o *GetMonitorTransactionsV1Response) SetTx(v []GetMonitorTransactionsV1ResponseTxInner) {
	o.Tx = v
}

func (o GetMonitorTransactionsV1Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMonitorTransactionsV1Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["success"] = o.Success
	toSerialize["msg"] = o.Msg
	if !IsNil(o.StateFullClassName) {
		toSerialize["stateFullClassName"] = o.StateFullClassName
	}
	if !IsNil(o.Tx) {
		toSerialize["tx"] = o.Tx
	}
	return toSerialize, nil
}

type NullableGetMonitorTransactionsV1Response struct {
	value *GetMonitorTransactionsV1Response
	isSet bool
}

func (v NullableGetMonitorTransactionsV1Response) Get() *GetMonitorTransactionsV1Response {
	return v.value
}

func (v *NullableGetMonitorTransactionsV1Response) Set(val *GetMonitorTransactionsV1Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMonitorTransactionsV1Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMonitorTransactionsV1Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMonitorTransactionsV1Response(val *GetMonitorTransactionsV1Response) *NullableGetMonitorTransactionsV1Response {
	return &NullableGetMonitorTransactionsV1Response{value: val, isSet: true}
}

func (v NullableGetMonitorTransactionsV1Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMonitorTransactionsV1Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


