/*
 * Hyperledger Cactus Plugin - Connector Iroha V2
 * Can perform basic tasks on a Iroha V2 ledger
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Iroha V2 block response type.
 */
@JsonAdapter(BlockTypeV1.Adapter.class)
public enum BlockTypeV1 {
  
  /**
   * Default JSON-encoded string full block data.
   */
  Raw("raw"),
  
  /**
   * Encoded format that must be decoded with Iroha SDK on client side before use
   */
  Binary("binary");

  private String value;

  BlockTypeV1(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static BlockTypeV1 fromValue(String value) {
    for (BlockTypeV1 b : BlockTypeV1.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<BlockTypeV1> {
    @Override
    public void write(final JsonWriter jsonWriter, final BlockTypeV1 enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public BlockTypeV1 read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return BlockTypeV1.fromValue(value);
    }
  }
}

