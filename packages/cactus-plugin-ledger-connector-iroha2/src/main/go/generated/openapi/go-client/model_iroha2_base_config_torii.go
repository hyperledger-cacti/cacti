/*
Hyperledger Cactus Plugin - Connector Iroha V2

Can perform basic tasks on a Iroha V2 ledger

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-iroha2

import (
	"encoding/json"
)

// checks if the Iroha2BaseConfigTorii type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Iroha2BaseConfigTorii{}

// Iroha2BaseConfigTorii Iroha V2 peer connection information.
type Iroha2BaseConfigTorii struct {
	ApiURL *string `json:"apiURL,omitempty"`
	TelemetryURL *string `json:"telemetryURL,omitempty"`
}

// NewIroha2BaseConfigTorii instantiates a new Iroha2BaseConfigTorii object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIroha2BaseConfigTorii() *Iroha2BaseConfigTorii {
	this := Iroha2BaseConfigTorii{}
	return &this
}

// NewIroha2BaseConfigToriiWithDefaults instantiates a new Iroha2BaseConfigTorii object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIroha2BaseConfigToriiWithDefaults() *Iroha2BaseConfigTorii {
	this := Iroha2BaseConfigTorii{}
	return &this
}

// GetApiURL returns the ApiURL field value if set, zero value otherwise.
func (o *Iroha2BaseConfigTorii) GetApiURL() string {
	if o == nil || IsNil(o.ApiURL) {
		var ret string
		return ret
	}
	return *o.ApiURL
}

// GetApiURLOk returns a tuple with the ApiURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Iroha2BaseConfigTorii) GetApiURLOk() (*string, bool) {
	if o == nil || IsNil(o.ApiURL) {
		return nil, false
	}
	return o.ApiURL, true
}

// HasApiURL returns a boolean if a field has been set.
func (o *Iroha2BaseConfigTorii) HasApiURL() bool {
	if o != nil && !IsNil(o.ApiURL) {
		return true
	}

	return false
}

// SetApiURL gets a reference to the given string and assigns it to the ApiURL field.
func (o *Iroha2BaseConfigTorii) SetApiURL(v string) {
	o.ApiURL = &v
}

// GetTelemetryURL returns the TelemetryURL field value if set, zero value otherwise.
func (o *Iroha2BaseConfigTorii) GetTelemetryURL() string {
	if o == nil || IsNil(o.TelemetryURL) {
		var ret string
		return ret
	}
	return *o.TelemetryURL
}

// GetTelemetryURLOk returns a tuple with the TelemetryURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Iroha2BaseConfigTorii) GetTelemetryURLOk() (*string, bool) {
	if o == nil || IsNil(o.TelemetryURL) {
		return nil, false
	}
	return o.TelemetryURL, true
}

// HasTelemetryURL returns a boolean if a field has been set.
func (o *Iroha2BaseConfigTorii) HasTelemetryURL() bool {
	if o != nil && !IsNil(o.TelemetryURL) {
		return true
	}

	return false
}

// SetTelemetryURL gets a reference to the given string and assigns it to the TelemetryURL field.
func (o *Iroha2BaseConfigTorii) SetTelemetryURL(v string) {
	o.TelemetryURL = &v
}

func (o Iroha2BaseConfigTorii) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Iroha2BaseConfigTorii) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiURL) {
		toSerialize["apiURL"] = o.ApiURL
	}
	if !IsNil(o.TelemetryURL) {
		toSerialize["telemetryURL"] = o.TelemetryURL
	}
	return toSerialize, nil
}

type NullableIroha2BaseConfigTorii struct {
	value *Iroha2BaseConfigTorii
	isSet bool
}

func (v NullableIroha2BaseConfigTorii) Get() *Iroha2BaseConfigTorii {
	return v.value
}

func (v *NullableIroha2BaseConfigTorii) Set(val *Iroha2BaseConfigTorii) {
	v.value = val
	v.isSet = true
}

func (v NullableIroha2BaseConfigTorii) IsSet() bool {
	return v.isSet
}

func (v *NullableIroha2BaseConfigTorii) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIroha2BaseConfigTorii(val *Iroha2BaseConfigTorii) *NullableIroha2BaseConfigTorii {
	return &NullableIroha2BaseConfigTorii{value: val, isSet: true}
}

func (v NullableIroha2BaseConfigTorii) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIroha2BaseConfigTorii) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


