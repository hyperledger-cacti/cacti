/*
Hyperledger Cactus Plugin - Connector Iroha V2

Can perform basic tasks on a Iroha V2 ledger

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-iroha2

import (
	"encoding/json"
)

// checks if the IrohaInstructionRequestV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IrohaInstructionRequestV1{}

// IrohaInstructionRequestV1 Single Iroha V2 instruction to be executed request.
type IrohaInstructionRequestV1 struct {
	// Iroha V2 instruction name.
	Name IrohaInstruction `json:"name"`
	// The list of arguments to pass with specified instruction.
	Params []interface{} `json:"params"`
}

// NewIrohaInstructionRequestV1 instantiates a new IrohaInstructionRequestV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIrohaInstructionRequestV1(name IrohaInstruction, params []interface{}) *IrohaInstructionRequestV1 {
	this := IrohaInstructionRequestV1{}
	this.Name = name
	this.Params = params
	return &this
}

// NewIrohaInstructionRequestV1WithDefaults instantiates a new IrohaInstructionRequestV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIrohaInstructionRequestV1WithDefaults() *IrohaInstructionRequestV1 {
	this := IrohaInstructionRequestV1{}
	return &this
}

// GetName returns the Name field value
func (o *IrohaInstructionRequestV1) GetName() IrohaInstruction {
	if o == nil {
		var ret IrohaInstruction
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IrohaInstructionRequestV1) GetNameOk() (*IrohaInstruction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IrohaInstructionRequestV1) SetName(v IrohaInstruction) {
	o.Name = v
}

// GetParams returns the Params field value
func (o *IrohaInstructionRequestV1) GetParams() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *IrohaInstructionRequestV1) GetParamsOk() ([]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Params, true
}

// SetParams sets field value
func (o *IrohaInstructionRequestV1) SetParams(v []interface{}) {
	o.Params = v
}

func (o IrohaInstructionRequestV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IrohaInstructionRequestV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["params"] = o.Params
	return toSerialize, nil
}

type NullableIrohaInstructionRequestV1 struct {
	value *IrohaInstructionRequestV1
	isSet bool
}

func (v NullableIrohaInstructionRequestV1) Get() *IrohaInstructionRequestV1 {
	return v.value
}

func (v *NullableIrohaInstructionRequestV1) Set(val *IrohaInstructionRequestV1) {
	v.value = val
	v.isSet = true
}

func (v NullableIrohaInstructionRequestV1) IsSet() bool {
	return v.isSet
}

func (v *NullableIrohaInstructionRequestV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIrohaInstructionRequestV1(val *IrohaInstructionRequestV1) *NullableIrohaInstructionRequestV1 {
	return &NullableIrohaInstructionRequestV1{value: val, isSet: true}
}

func (v NullableIrohaInstructionRequestV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIrohaInstructionRequestV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


