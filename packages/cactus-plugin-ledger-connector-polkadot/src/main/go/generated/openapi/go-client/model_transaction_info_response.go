/*
Hyperledger Cactus Plugin - Connector Polkadot

Can perform basic tasks on a Polkadot parachain

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-polkadot

import (
	"encoding/json"
)

// checks if the TransactionInfoResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionInfoResponse{}

// TransactionInfoResponse struct for TransactionInfoResponse
type TransactionInfoResponse struct {
	ResponseContainer TransactionInfoResponseResponseContainer `json:"responseContainer"`
}

// NewTransactionInfoResponse instantiates a new TransactionInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionInfoResponse(responseContainer TransactionInfoResponseResponseContainer) *TransactionInfoResponse {
	this := TransactionInfoResponse{}
	this.ResponseContainer = responseContainer
	return &this
}

// NewTransactionInfoResponseWithDefaults instantiates a new TransactionInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionInfoResponseWithDefaults() *TransactionInfoResponse {
	this := TransactionInfoResponse{}
	return &this
}

// GetResponseContainer returns the ResponseContainer field value
func (o *TransactionInfoResponse) GetResponseContainer() TransactionInfoResponseResponseContainer {
	if o == nil {
		var ret TransactionInfoResponseResponseContainer
		return ret
	}

	return o.ResponseContainer
}

// GetResponseContainerOk returns a tuple with the ResponseContainer field value
// and a boolean to check if the value has been set.
func (o *TransactionInfoResponse) GetResponseContainerOk() (*TransactionInfoResponseResponseContainer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseContainer, true
}

// SetResponseContainer sets field value
func (o *TransactionInfoResponse) SetResponseContainer(v TransactionInfoResponseResponseContainer) {
	o.ResponseContainer = v
}

func (o TransactionInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionInfoResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["responseContainer"] = o.ResponseContainer
	return toSerialize, nil
}

type NullableTransactionInfoResponse struct {
	value *TransactionInfoResponse
	isSet bool
}

func (v NullableTransactionInfoResponse) Get() *TransactionInfoResponse {
	return v.value
}

func (v *NullableTransactionInfoResponse) Set(val *TransactionInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionInfoResponse(val *TransactionInfoResponse) *NullableTransactionInfoResponse {
	return &NullableTransactionInfoResponse{value: val, isSet: true}
}

func (v NullableTransactionInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


