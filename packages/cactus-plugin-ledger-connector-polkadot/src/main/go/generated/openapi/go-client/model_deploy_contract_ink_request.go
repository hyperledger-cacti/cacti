/*
Hyperledger Cactus Plugin - Connector Polkadot

Can perform basic tasks on a Polkadot parachain

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-polkadot

import (
	"encoding/json"
)

// checks if the DeployContractInkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployContractInkRequest{}

// DeployContractInkRequest struct for DeployContractInkRequest
type DeployContractInkRequest struct {
	Web3SigningCredential Web3SigningCredential `json:"web3SigningCredential"`
	// raw wasm for the compiled contract in base64 format
	Wasm string `json:"wasm"`
	ConstructorMethod *PolkadotTransactionConfigTransferSubmittable `json:"constructorMethod,omitempty"`
	Metadata PolkadotTransactionConfigTransferSubmittable `json:"metadata"`
	GasLimit DeployContractInkRequestGasLimit `json:"gasLimit"`
	StorageDepositLimit NullableDeployContractInkRequestStorageDepositLimit `json:"storageDepositLimit,omitempty"`
	// The list of arguments to pass in to the contract method being deployed
	Params []interface{} `json:"params,omitempty"`
	Balance *DeployContractInkRequestBalance `json:"balance,omitempty"`
	Salt NullableDeployContractInkRequestSalt `json:"salt,omitempty"`
}

// NewDeployContractInkRequest instantiates a new DeployContractInkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployContractInkRequest(web3SigningCredential Web3SigningCredential, wasm string, metadata PolkadotTransactionConfigTransferSubmittable, gasLimit DeployContractInkRequestGasLimit) *DeployContractInkRequest {
	this := DeployContractInkRequest{}
	this.Web3SigningCredential = web3SigningCredential
	this.Wasm = wasm
	this.Metadata = metadata
	this.GasLimit = gasLimit
	return &this
}

// NewDeployContractInkRequestWithDefaults instantiates a new DeployContractInkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployContractInkRequestWithDefaults() *DeployContractInkRequest {
	this := DeployContractInkRequest{}
	return &this
}

// GetWeb3SigningCredential returns the Web3SigningCredential field value
func (o *DeployContractInkRequest) GetWeb3SigningCredential() Web3SigningCredential {
	if o == nil {
		var ret Web3SigningCredential
		return ret
	}

	return o.Web3SigningCredential
}

// GetWeb3SigningCredentialOk returns a tuple with the Web3SigningCredential field value
// and a boolean to check if the value has been set.
func (o *DeployContractInkRequest) GetWeb3SigningCredentialOk() (*Web3SigningCredential, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Web3SigningCredential, true
}

// SetWeb3SigningCredential sets field value
func (o *DeployContractInkRequest) SetWeb3SigningCredential(v Web3SigningCredential) {
	o.Web3SigningCredential = v
}

// GetWasm returns the Wasm field value
func (o *DeployContractInkRequest) GetWasm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Wasm
}

// GetWasmOk returns a tuple with the Wasm field value
// and a boolean to check if the value has been set.
func (o *DeployContractInkRequest) GetWasmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Wasm, true
}

// SetWasm sets field value
func (o *DeployContractInkRequest) SetWasm(v string) {
	o.Wasm = v
}

// GetConstructorMethod returns the ConstructorMethod field value if set, zero value otherwise.
func (o *DeployContractInkRequest) GetConstructorMethod() PolkadotTransactionConfigTransferSubmittable {
	if o == nil || IsNil(o.ConstructorMethod) {
		var ret PolkadotTransactionConfigTransferSubmittable
		return ret
	}
	return *o.ConstructorMethod
}

// GetConstructorMethodOk returns a tuple with the ConstructorMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractInkRequest) GetConstructorMethodOk() (*PolkadotTransactionConfigTransferSubmittable, bool) {
	if o == nil || IsNil(o.ConstructorMethod) {
		return nil, false
	}
	return o.ConstructorMethod, true
}

// HasConstructorMethod returns a boolean if a field has been set.
func (o *DeployContractInkRequest) HasConstructorMethod() bool {
	if o != nil && !IsNil(o.ConstructorMethod) {
		return true
	}

	return false
}

// SetConstructorMethod gets a reference to the given PolkadotTransactionConfigTransferSubmittable and assigns it to the ConstructorMethod field.
func (o *DeployContractInkRequest) SetConstructorMethod(v PolkadotTransactionConfigTransferSubmittable) {
	o.ConstructorMethod = &v
}

// GetMetadata returns the Metadata field value
func (o *DeployContractInkRequest) GetMetadata() PolkadotTransactionConfigTransferSubmittable {
	if o == nil {
		var ret PolkadotTransactionConfigTransferSubmittable
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *DeployContractInkRequest) GetMetadataOk() (*PolkadotTransactionConfigTransferSubmittable, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *DeployContractInkRequest) SetMetadata(v PolkadotTransactionConfigTransferSubmittable) {
	o.Metadata = v
}

// GetGasLimit returns the GasLimit field value
func (o *DeployContractInkRequest) GetGasLimit() DeployContractInkRequestGasLimit {
	if o == nil {
		var ret DeployContractInkRequestGasLimit
		return ret
	}

	return o.GasLimit
}

// GetGasLimitOk returns a tuple with the GasLimit field value
// and a boolean to check if the value has been set.
func (o *DeployContractInkRequest) GetGasLimitOk() (*DeployContractInkRequestGasLimit, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GasLimit, true
}

// SetGasLimit sets field value
func (o *DeployContractInkRequest) SetGasLimit(v DeployContractInkRequestGasLimit) {
	o.GasLimit = v
}

// GetStorageDepositLimit returns the StorageDepositLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeployContractInkRequest) GetStorageDepositLimit() DeployContractInkRequestStorageDepositLimit {
	if o == nil || IsNil(o.StorageDepositLimit.Get()) {
		var ret DeployContractInkRequestStorageDepositLimit
		return ret
	}
	return *o.StorageDepositLimit.Get()
}

// GetStorageDepositLimitOk returns a tuple with the StorageDepositLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeployContractInkRequest) GetStorageDepositLimitOk() (*DeployContractInkRequestStorageDepositLimit, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorageDepositLimit.Get(), o.StorageDepositLimit.IsSet()
}

// HasStorageDepositLimit returns a boolean if a field has been set.
func (o *DeployContractInkRequest) HasStorageDepositLimit() bool {
	if o != nil && o.StorageDepositLimit.IsSet() {
		return true
	}

	return false
}

// SetStorageDepositLimit gets a reference to the given NullableDeployContractInkRequestStorageDepositLimit and assigns it to the StorageDepositLimit field.
func (o *DeployContractInkRequest) SetStorageDepositLimit(v DeployContractInkRequestStorageDepositLimit) {
	o.StorageDepositLimit.Set(&v)
}
// SetStorageDepositLimitNil sets the value for StorageDepositLimit to be an explicit nil
func (o *DeployContractInkRequest) SetStorageDepositLimitNil() {
	o.StorageDepositLimit.Set(nil)
}

// UnsetStorageDepositLimit ensures that no value is present for StorageDepositLimit, not even an explicit nil
func (o *DeployContractInkRequest) UnsetStorageDepositLimit() {
	o.StorageDepositLimit.Unset()
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *DeployContractInkRequest) GetParams() []interface{} {
	if o == nil || IsNil(o.Params) {
		var ret []interface{}
		return ret
	}
	return o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractInkRequest) GetParamsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Params) {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *DeployContractInkRequest) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given []interface{} and assigns it to the Params field.
func (o *DeployContractInkRequest) SetParams(v []interface{}) {
	o.Params = v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *DeployContractInkRequest) GetBalance() DeployContractInkRequestBalance {
	if o == nil || IsNil(o.Balance) {
		var ret DeployContractInkRequestBalance
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractInkRequest) GetBalanceOk() (*DeployContractInkRequestBalance, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *DeployContractInkRequest) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given DeployContractInkRequestBalance and assigns it to the Balance field.
func (o *DeployContractInkRequest) SetBalance(v DeployContractInkRequestBalance) {
	o.Balance = &v
}

// GetSalt returns the Salt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeployContractInkRequest) GetSalt() DeployContractInkRequestSalt {
	if o == nil || IsNil(o.Salt.Get()) {
		var ret DeployContractInkRequestSalt
		return ret
	}
	return *o.Salt.Get()
}

// GetSaltOk returns a tuple with the Salt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeployContractInkRequest) GetSaltOk() (*DeployContractInkRequestSalt, bool) {
	if o == nil {
		return nil, false
	}
	return o.Salt.Get(), o.Salt.IsSet()
}

// HasSalt returns a boolean if a field has been set.
func (o *DeployContractInkRequest) HasSalt() bool {
	if o != nil && o.Salt.IsSet() {
		return true
	}

	return false
}

// SetSalt gets a reference to the given NullableDeployContractInkRequestSalt and assigns it to the Salt field.
func (o *DeployContractInkRequest) SetSalt(v DeployContractInkRequestSalt) {
	o.Salt.Set(&v)
}
// SetSaltNil sets the value for Salt to be an explicit nil
func (o *DeployContractInkRequest) SetSaltNil() {
	o.Salt.Set(nil)
}

// UnsetSalt ensures that no value is present for Salt, not even an explicit nil
func (o *DeployContractInkRequest) UnsetSalt() {
	o.Salt.Unset()
}

func (o DeployContractInkRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployContractInkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["web3SigningCredential"] = o.Web3SigningCredential
	toSerialize["wasm"] = o.Wasm
	if !IsNil(o.ConstructorMethod) {
		toSerialize["constructorMethod"] = o.ConstructorMethod
	}
	toSerialize["metadata"] = o.Metadata
	toSerialize["gasLimit"] = o.GasLimit
	if o.StorageDepositLimit.IsSet() {
		toSerialize["storageDepositLimit"] = o.StorageDepositLimit.Get()
	}
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if o.Salt.IsSet() {
		toSerialize["salt"] = o.Salt.Get()
	}
	return toSerialize, nil
}

type NullableDeployContractInkRequest struct {
	value *DeployContractInkRequest
	isSet bool
}

func (v NullableDeployContractInkRequest) Get() *DeployContractInkRequest {
	return v.value
}

func (v *NullableDeployContractInkRequest) Set(val *DeployContractInkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployContractInkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployContractInkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployContractInkRequest(val *DeployContractInkRequest) *NullableDeployContractInkRequest {
	return &NullableDeployContractInkRequest{value: val, isSet: true}
}

func (v NullableDeployContractInkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployContractInkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


