/*
Hyperledger Cactus Plugin - Connector Polkadot

Can perform basic tasks on a Polkadot parachain

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-polkadot

import (
	"encoding/json"
)

// checks if the DeployContractInkResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployContractInkResponse{}

// DeployContractInkResponse struct for DeployContractInkResponse
type DeployContractInkResponse struct {
	Success bool `json:"success"`
	ContractAddress *string `json:"contractAddress,omitempty"`
}

// NewDeployContractInkResponse instantiates a new DeployContractInkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployContractInkResponse(success bool) *DeployContractInkResponse {
	this := DeployContractInkResponse{}
	this.Success = success
	return &this
}

// NewDeployContractInkResponseWithDefaults instantiates a new DeployContractInkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployContractInkResponseWithDefaults() *DeployContractInkResponse {
	this := DeployContractInkResponse{}
	return &this
}

// GetSuccess returns the Success field value
func (o *DeployContractInkResponse) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *DeployContractInkResponse) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *DeployContractInkResponse) SetSuccess(v bool) {
	o.Success = v
}

// GetContractAddress returns the ContractAddress field value if set, zero value otherwise.
func (o *DeployContractInkResponse) GetContractAddress() string {
	if o == nil || IsNil(o.ContractAddress) {
		var ret string
		return ret
	}
	return *o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractInkResponse) GetContractAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ContractAddress) {
		return nil, false
	}
	return o.ContractAddress, true
}

// HasContractAddress returns a boolean if a field has been set.
func (o *DeployContractInkResponse) HasContractAddress() bool {
	if o != nil && !IsNil(o.ContractAddress) {
		return true
	}

	return false
}

// SetContractAddress gets a reference to the given string and assigns it to the ContractAddress field.
func (o *DeployContractInkResponse) SetContractAddress(v string) {
	o.ContractAddress = &v
}

func (o DeployContractInkResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployContractInkResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["success"] = o.Success
	if !IsNil(o.ContractAddress) {
		toSerialize["contractAddress"] = o.ContractAddress
	}
	return toSerialize, nil
}

type NullableDeployContractInkResponse struct {
	value *DeployContractInkResponse
	isSet bool
}

func (v NullableDeployContractInkResponse) Get() *DeployContractInkResponse {
	return v.value
}

func (v *NullableDeployContractInkResponse) Set(val *DeployContractInkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployContractInkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployContractInkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployContractInkResponse(val *DeployContractInkResponse) *NullableDeployContractInkResponse {
	return &NullableDeployContractInkResponse{value: val, isSet: true}
}

func (v NullableDeployContractInkResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployContractInkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


