/*
Hyperledger Cactus Plugin - Connector Polkadot

Can perform basic tasks on a Polkadot parachain

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-polkadot

import (
	"encoding/json"
)

// checks if the PolkadotTransactionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolkadotTransactionConfig{}

// PolkadotTransactionConfig struct for PolkadotTransactionConfig
type PolkadotTransactionConfig struct {
	TransferSubmittable *PolkadotTransactionConfigTransferSubmittable `json:"transferSubmittable,omitempty"`
	To *PolkadotTransactionConfigTransferSubmittable `json:"to,omitempty"`
	Value *PolkadotTransactionConfigValue `json:"value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PolkadotTransactionConfig PolkadotTransactionConfig

// NewPolkadotTransactionConfig instantiates a new PolkadotTransactionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolkadotTransactionConfig() *PolkadotTransactionConfig {
	this := PolkadotTransactionConfig{}
	return &this
}

// NewPolkadotTransactionConfigWithDefaults instantiates a new PolkadotTransactionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolkadotTransactionConfigWithDefaults() *PolkadotTransactionConfig {
	this := PolkadotTransactionConfig{}
	return &this
}

// GetTransferSubmittable returns the TransferSubmittable field value if set, zero value otherwise.
func (o *PolkadotTransactionConfig) GetTransferSubmittable() PolkadotTransactionConfigTransferSubmittable {
	if o == nil || IsNil(o.TransferSubmittable) {
		var ret PolkadotTransactionConfigTransferSubmittable
		return ret
	}
	return *o.TransferSubmittable
}

// GetTransferSubmittableOk returns a tuple with the TransferSubmittable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolkadotTransactionConfig) GetTransferSubmittableOk() (*PolkadotTransactionConfigTransferSubmittable, bool) {
	if o == nil || IsNil(o.TransferSubmittable) {
		return nil, false
	}
	return o.TransferSubmittable, true
}

// HasTransferSubmittable returns a boolean if a field has been set.
func (o *PolkadotTransactionConfig) HasTransferSubmittable() bool {
	if o != nil && !IsNil(o.TransferSubmittable) {
		return true
	}

	return false
}

// SetTransferSubmittable gets a reference to the given PolkadotTransactionConfigTransferSubmittable and assigns it to the TransferSubmittable field.
func (o *PolkadotTransactionConfig) SetTransferSubmittable(v PolkadotTransactionConfigTransferSubmittable) {
	o.TransferSubmittable = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *PolkadotTransactionConfig) GetTo() PolkadotTransactionConfigTransferSubmittable {
	if o == nil || IsNil(o.To) {
		var ret PolkadotTransactionConfigTransferSubmittable
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolkadotTransactionConfig) GetToOk() (*PolkadotTransactionConfigTransferSubmittable, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *PolkadotTransactionConfig) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given PolkadotTransactionConfigTransferSubmittable and assigns it to the To field.
func (o *PolkadotTransactionConfig) SetTo(v PolkadotTransactionConfigTransferSubmittable) {
	o.To = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *PolkadotTransactionConfig) GetValue() PolkadotTransactionConfigValue {
	if o == nil || IsNil(o.Value) {
		var ret PolkadotTransactionConfigValue
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolkadotTransactionConfig) GetValueOk() (*PolkadotTransactionConfigValue, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *PolkadotTransactionConfig) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given PolkadotTransactionConfigValue and assigns it to the Value field.
func (o *PolkadotTransactionConfig) SetValue(v PolkadotTransactionConfigValue) {
	o.Value = &v
}

func (o PolkadotTransactionConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolkadotTransactionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransferSubmittable) {
		toSerialize["transferSubmittable"] = o.TransferSubmittable
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PolkadotTransactionConfig) UnmarshalJSON(bytes []byte) (err error) {
	varPolkadotTransactionConfig := _PolkadotTransactionConfig{}

	if err = json.Unmarshal(bytes, &varPolkadotTransactionConfig); err == nil {
		*o = PolkadotTransactionConfig(varPolkadotTransactionConfig)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "transferSubmittable")
		delete(additionalProperties, "to")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePolkadotTransactionConfig struct {
	value *PolkadotTransactionConfig
	isSet bool
}

func (v NullablePolkadotTransactionConfig) Get() *PolkadotTransactionConfig {
	return v.value
}

func (v *NullablePolkadotTransactionConfig) Set(val *PolkadotTransactionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullablePolkadotTransactionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullablePolkadotTransactionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolkadotTransactionConfig(val *PolkadotTransactionConfig) *NullablePolkadotTransactionConfig {
	return &NullablePolkadotTransactionConfig{value: val, isSet: true}
}

func (v NullablePolkadotTransactionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolkadotTransactionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


