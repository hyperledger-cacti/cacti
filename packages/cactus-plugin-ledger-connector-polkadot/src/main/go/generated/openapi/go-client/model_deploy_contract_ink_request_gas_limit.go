/*
Hyperledger Cactus Plugin - Connector Polkadot

Can perform basic tasks on a Polkadot parachain

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-polkadot

import (
	"encoding/json"
)

// checks if the DeployContractInkRequestGasLimit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployContractInkRequestGasLimit{}

// DeployContractInkRequestGasLimit struct for DeployContractInkRequestGasLimit
type DeployContractInkRequestGasLimit struct {
	RefTime int32 `json:"refTime"`
	ProofSize int32 `json:"proofSize"`
}

// NewDeployContractInkRequestGasLimit instantiates a new DeployContractInkRequestGasLimit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployContractInkRequestGasLimit(refTime int32, proofSize int32) *DeployContractInkRequestGasLimit {
	this := DeployContractInkRequestGasLimit{}
	this.RefTime = refTime
	this.ProofSize = proofSize
	return &this
}

// NewDeployContractInkRequestGasLimitWithDefaults instantiates a new DeployContractInkRequestGasLimit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployContractInkRequestGasLimitWithDefaults() *DeployContractInkRequestGasLimit {
	this := DeployContractInkRequestGasLimit{}
	return &this
}

// GetRefTime returns the RefTime field value
func (o *DeployContractInkRequestGasLimit) GetRefTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RefTime
}

// GetRefTimeOk returns a tuple with the RefTime field value
// and a boolean to check if the value has been set.
func (o *DeployContractInkRequestGasLimit) GetRefTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefTime, true
}

// SetRefTime sets field value
func (o *DeployContractInkRequestGasLimit) SetRefTime(v int32) {
	o.RefTime = v
}

// GetProofSize returns the ProofSize field value
func (o *DeployContractInkRequestGasLimit) GetProofSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProofSize
}

// GetProofSizeOk returns a tuple with the ProofSize field value
// and a boolean to check if the value has been set.
func (o *DeployContractInkRequestGasLimit) GetProofSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProofSize, true
}

// SetProofSize sets field value
func (o *DeployContractInkRequestGasLimit) SetProofSize(v int32) {
	o.ProofSize = v
}

func (o DeployContractInkRequestGasLimit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployContractInkRequestGasLimit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["refTime"] = o.RefTime
	toSerialize["proofSize"] = o.ProofSize
	return toSerialize, nil
}

type NullableDeployContractInkRequestGasLimit struct {
	value *DeployContractInkRequestGasLimit
	isSet bool
}

func (v NullableDeployContractInkRequestGasLimit) Get() *DeployContractInkRequestGasLimit {
	return v.value
}

func (v *NullableDeployContractInkRequestGasLimit) Set(val *DeployContractInkRequestGasLimit) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployContractInkRequestGasLimit) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployContractInkRequestGasLimit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployContractInkRequestGasLimit(val *DeployContractInkRequestGasLimit) *NullableDeployContractInkRequestGasLimit {
	return &NullableDeployContractInkRequestGasLimit{value: val, isSet: true}
}

func (v NullableDeployContractInkRequestGasLimit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployContractInkRequestGasLimit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


