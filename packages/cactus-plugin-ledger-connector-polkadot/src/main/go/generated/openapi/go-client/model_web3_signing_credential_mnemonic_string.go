/*
Hyperledger Cactus Plugin - Connector Polkadot

Can perform basic tasks on a Polkadot parachain

API version: 2.0.0-rc.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-polkadot

import (
	"encoding/json"
)

// checks if the Web3SigningCredentialMnemonicString type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Web3SigningCredentialMnemonicString{}

// Web3SigningCredentialMnemonicString struct for Web3SigningCredentialMnemonicString
type Web3SigningCredentialMnemonicString struct {
	Type Web3SigningCredentialType `json:"type"`
	// The Polkadot account's seed phrase for signing transaction
	Mnemonic string `json:"mnemonic"`
}

// NewWeb3SigningCredentialMnemonicString instantiates a new Web3SigningCredentialMnemonicString object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeb3SigningCredentialMnemonicString(type_ Web3SigningCredentialType, mnemonic string) *Web3SigningCredentialMnemonicString {
	this := Web3SigningCredentialMnemonicString{}
	this.Type = type_
	this.Mnemonic = mnemonic
	return &this
}

// NewWeb3SigningCredentialMnemonicStringWithDefaults instantiates a new Web3SigningCredentialMnemonicString object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeb3SigningCredentialMnemonicStringWithDefaults() *Web3SigningCredentialMnemonicString {
	this := Web3SigningCredentialMnemonicString{}
	return &this
}

// GetType returns the Type field value
func (o *Web3SigningCredentialMnemonicString) GetType() Web3SigningCredentialType {
	if o == nil {
		var ret Web3SigningCredentialType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Web3SigningCredentialMnemonicString) GetTypeOk() (*Web3SigningCredentialType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Web3SigningCredentialMnemonicString) SetType(v Web3SigningCredentialType) {
	o.Type = v
}

// GetMnemonic returns the Mnemonic field value
func (o *Web3SigningCredentialMnemonicString) GetMnemonic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mnemonic
}

// GetMnemonicOk returns a tuple with the Mnemonic field value
// and a boolean to check if the value has been set.
func (o *Web3SigningCredentialMnemonicString) GetMnemonicOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mnemonic, true
}

// SetMnemonic sets field value
func (o *Web3SigningCredentialMnemonicString) SetMnemonic(v string) {
	o.Mnemonic = v
}

func (o Web3SigningCredentialMnemonicString) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Web3SigningCredentialMnemonicString) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["mnemonic"] = o.Mnemonic
	return toSerialize, nil
}

type NullableWeb3SigningCredentialMnemonicString struct {
	value *Web3SigningCredentialMnemonicString
	isSet bool
}

func (v NullableWeb3SigningCredentialMnemonicString) Get() *Web3SigningCredentialMnemonicString {
	return v.value
}

func (v *NullableWeb3SigningCredentialMnemonicString) Set(val *Web3SigningCredentialMnemonicString) {
	v.value = val
	v.isSet = true
}

func (v NullableWeb3SigningCredentialMnemonicString) IsSet() bool {
	return v.isSet
}

func (v *NullableWeb3SigningCredentialMnemonicString) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeb3SigningCredentialMnemonicString(val *Web3SigningCredentialMnemonicString) *NullableWeb3SigningCredentialMnemonicString {
	return &NullableWeb3SigningCredentialMnemonicString{value: val, isSet: true}
}

func (v NullableWeb3SigningCredentialMnemonicString) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeb3SigningCredentialMnemonicString) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


