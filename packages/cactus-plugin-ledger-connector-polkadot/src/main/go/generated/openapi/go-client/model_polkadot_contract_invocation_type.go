/*
Hyperledger Cactus Plugin - Connector Polkadot

Can perform basic tasks on a Polkadot parachain

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-polkadot

import (
	"encoding/json"
	"fmt"
)

// PolkadotContractInvocationType the model 'PolkadotContractInvocationType'
type PolkadotContractInvocationType string

// List of PolkadotContractInvocationType
const (
	SEND PolkadotContractInvocationType = "SEND"
	QUERY PolkadotContractInvocationType = "QUERY"
)

// All allowed values of PolkadotContractInvocationType enum
var AllowedPolkadotContractInvocationTypeEnumValues = []PolkadotContractInvocationType{
	"SEND",
	"QUERY",
}

func (v *PolkadotContractInvocationType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PolkadotContractInvocationType(value)
	for _, existing := range AllowedPolkadotContractInvocationTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PolkadotContractInvocationType", value)
}

// NewPolkadotContractInvocationTypeFromValue returns a pointer to a valid PolkadotContractInvocationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPolkadotContractInvocationTypeFromValue(v string) (*PolkadotContractInvocationType, error) {
	ev := PolkadotContractInvocationType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PolkadotContractInvocationType: valid values are %v", v, AllowedPolkadotContractInvocationTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PolkadotContractInvocationType) IsValid() bool {
	for _, existing := range AllowedPolkadotContractInvocationTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PolkadotContractInvocationType value
func (v PolkadotContractInvocationType) Ptr() *PolkadotContractInvocationType {
	return &v
}

type NullablePolkadotContractInvocationType struct {
	value *PolkadotContractInvocationType
	isSet bool
}

func (v NullablePolkadotContractInvocationType) Get() *PolkadotContractInvocationType {
	return v.value
}

func (v *NullablePolkadotContractInvocationType) Set(val *PolkadotContractInvocationType) {
	v.value = val
	v.isSet = true
}

func (v NullablePolkadotContractInvocationType) IsSet() bool {
	return v.isSet
}

func (v *NullablePolkadotContractInvocationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolkadotContractInvocationType(val *PolkadotContractInvocationType) *NullablePolkadotContractInvocationType {
	return &NullablePolkadotContractInvocationType{value: val, isSet: true}
}

func (v NullablePolkadotContractInvocationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolkadotContractInvocationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

