/*
Hyperledger Cactus Plugin - HTLC ETH BESU ERC20

Allows Cactus nodes to interact with HTLC contracts with ERC-20 Tokens

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-htlc-eth-besu-erc20

import (
	"encoding/json"
)

// checks if the NewContractRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewContractRequest{}

// NewContractRequest struct for NewContractRequest
type NewContractRequest struct {
	// Contract address
	ContractAddress string `json:"contractAddress"`
	// Input amount to lock
	InputAmount float32 `json:"inputAmount"`
	// Output amount to lock
	OutputAmount float32 `json:"outputAmount"`
	// Timestamp to expire the contract
	Expiration float32 `json:"expiration"`
	// Hashlock needed to refund the amount
	HashLock string `json:"hashLock"`
	// The token address
	TokenAddress string `json:"tokenAddress"`
	// The receiver address
	Receiver string `json:"receiver"`
	// The output network id
	OutputNetwork string `json:"outputNetwork"`
	// The output address to receive the tokens
	OutputAddress string `json:"outputAddress"`
	Web3SigningCredential Web3SigningCredential `json:"web3SigningCredential"`
	// connectorId for the connector besu plugin
	ConnectorId string `json:"connectorId"`
	// keychainId for the keychian plugin
	KeychainId string `json:"keychainId"`
	Gas *NewContractRequestGas `json:"gas,omitempty"`
}

// NewNewContractRequest instantiates a new NewContractRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewContractRequest(contractAddress string, inputAmount float32, outputAmount float32, expiration float32, hashLock string, tokenAddress string, receiver string, outputNetwork string, outputAddress string, web3SigningCredential Web3SigningCredential, connectorId string, keychainId string) *NewContractRequest {
	this := NewContractRequest{}
	this.ContractAddress = contractAddress
	this.InputAmount = inputAmount
	this.OutputAmount = outputAmount
	this.Expiration = expiration
	this.HashLock = hashLock
	this.TokenAddress = tokenAddress
	this.Receiver = receiver
	this.OutputNetwork = outputNetwork
	this.OutputAddress = outputAddress
	this.Web3SigningCredential = web3SigningCredential
	this.ConnectorId = connectorId
	this.KeychainId = keychainId
	return &this
}

// NewNewContractRequestWithDefaults instantiates a new NewContractRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewContractRequestWithDefaults() *NewContractRequest {
	this := NewContractRequest{}
	return &this
}

// GetContractAddress returns the ContractAddress field value
func (o *NewContractRequest) GetContractAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetContractAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractAddress, true
}

// SetContractAddress sets field value
func (o *NewContractRequest) SetContractAddress(v string) {
	o.ContractAddress = v
}

// GetInputAmount returns the InputAmount field value
func (o *NewContractRequest) GetInputAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InputAmount
}

// GetInputAmountOk returns a tuple with the InputAmount field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetInputAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputAmount, true
}

// SetInputAmount sets field value
func (o *NewContractRequest) SetInputAmount(v float32) {
	o.InputAmount = v
}

// GetOutputAmount returns the OutputAmount field value
func (o *NewContractRequest) GetOutputAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OutputAmount
}

// GetOutputAmountOk returns a tuple with the OutputAmount field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetOutputAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputAmount, true
}

// SetOutputAmount sets field value
func (o *NewContractRequest) SetOutputAmount(v float32) {
	o.OutputAmount = v
}

// GetExpiration returns the Expiration field value
func (o *NewContractRequest) GetExpiration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetExpirationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expiration, true
}

// SetExpiration sets field value
func (o *NewContractRequest) SetExpiration(v float32) {
	o.Expiration = v
}

// GetHashLock returns the HashLock field value
func (o *NewContractRequest) GetHashLock() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HashLock
}

// GetHashLockOk returns a tuple with the HashLock field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetHashLockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HashLock, true
}

// SetHashLock sets field value
func (o *NewContractRequest) SetHashLock(v string) {
	o.HashLock = v
}

// GetTokenAddress returns the TokenAddress field value
func (o *NewContractRequest) GetTokenAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenAddress
}

// GetTokenAddressOk returns a tuple with the TokenAddress field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetTokenAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenAddress, true
}

// SetTokenAddress sets field value
func (o *NewContractRequest) SetTokenAddress(v string) {
	o.TokenAddress = v
}

// GetReceiver returns the Receiver field value
func (o *NewContractRequest) GetReceiver() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetReceiverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Receiver, true
}

// SetReceiver sets field value
func (o *NewContractRequest) SetReceiver(v string) {
	o.Receiver = v
}

// GetOutputNetwork returns the OutputNetwork field value
func (o *NewContractRequest) GetOutputNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputNetwork
}

// GetOutputNetworkOk returns a tuple with the OutputNetwork field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetOutputNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputNetwork, true
}

// SetOutputNetwork sets field value
func (o *NewContractRequest) SetOutputNetwork(v string) {
	o.OutputNetwork = v
}

// GetOutputAddress returns the OutputAddress field value
func (o *NewContractRequest) GetOutputAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputAddress
}

// GetOutputAddressOk returns a tuple with the OutputAddress field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetOutputAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputAddress, true
}

// SetOutputAddress sets field value
func (o *NewContractRequest) SetOutputAddress(v string) {
	o.OutputAddress = v
}

// GetWeb3SigningCredential returns the Web3SigningCredential field value
func (o *NewContractRequest) GetWeb3SigningCredential() Web3SigningCredential {
	if o == nil {
		var ret Web3SigningCredential
		return ret
	}

	return o.Web3SigningCredential
}

// GetWeb3SigningCredentialOk returns a tuple with the Web3SigningCredential field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetWeb3SigningCredentialOk() (*Web3SigningCredential, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Web3SigningCredential, true
}

// SetWeb3SigningCredential sets field value
func (o *NewContractRequest) SetWeb3SigningCredential(v Web3SigningCredential) {
	o.Web3SigningCredential = v
}

// GetConnectorId returns the ConnectorId field value
func (o *NewContractRequest) GetConnectorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetConnectorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorId, true
}

// SetConnectorId sets field value
func (o *NewContractRequest) SetConnectorId(v string) {
	o.ConnectorId = v
}

// GetKeychainId returns the KeychainId field value
func (o *NewContractRequest) GetKeychainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeychainId
}

// GetKeychainIdOk returns a tuple with the KeychainId field value
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetKeychainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeychainId, true
}

// SetKeychainId sets field value
func (o *NewContractRequest) SetKeychainId(v string) {
	o.KeychainId = v
}

// GetGas returns the Gas field value if set, zero value otherwise.
func (o *NewContractRequest) GetGas() NewContractRequestGas {
	if o == nil || IsNil(o.Gas) {
		var ret NewContractRequestGas
		return ret
	}
	return *o.Gas
}

// GetGasOk returns a tuple with the Gas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewContractRequest) GetGasOk() (*NewContractRequestGas, bool) {
	if o == nil || IsNil(o.Gas) {
		return nil, false
	}
	return o.Gas, true
}

// HasGas returns a boolean if a field has been set.
func (o *NewContractRequest) HasGas() bool {
	if o != nil && !IsNil(o.Gas) {
		return true
	}

	return false
}

// SetGas gets a reference to the given NewContractRequestGas and assigns it to the Gas field.
func (o *NewContractRequest) SetGas(v NewContractRequestGas) {
	o.Gas = &v
}

func (o NewContractRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewContractRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contractAddress"] = o.ContractAddress
	toSerialize["inputAmount"] = o.InputAmount
	toSerialize["outputAmount"] = o.OutputAmount
	toSerialize["expiration"] = o.Expiration
	toSerialize["hashLock"] = o.HashLock
	toSerialize["tokenAddress"] = o.TokenAddress
	toSerialize["receiver"] = o.Receiver
	toSerialize["outputNetwork"] = o.OutputNetwork
	toSerialize["outputAddress"] = o.OutputAddress
	toSerialize["web3SigningCredential"] = o.Web3SigningCredential
	toSerialize["connectorId"] = o.ConnectorId
	toSerialize["keychainId"] = o.KeychainId
	if !IsNil(o.Gas) {
		toSerialize["gas"] = o.Gas
	}
	return toSerialize, nil
}

type NullableNewContractRequest struct {
	value *NewContractRequest
	isSet bool
}

func (v NullableNewContractRequest) Get() *NewContractRequest {
	return v.value
}

func (v *NullableNewContractRequest) Set(val *NewContractRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNewContractRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNewContractRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewContractRequest(val *NewContractRequest) *NullableNewContractRequest {
	return &NullableNewContractRequest{value: val, isSet: true}
}

func (v NullableNewContractRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewContractRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


