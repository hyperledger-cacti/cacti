openapi: 3.0.3
info:
  description: Can perform basic tasks on a Iroha ledger
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Hyperledger Cactus Plugin - Connector Iroha
  version: v2.0.0-alpha.2
servers:
- url: /
paths:
  /api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha/run-transaction:
    post:
      operationId: runTransactionV1
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunTransactionRequestV1Body'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunTransactionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorExceptionJsonResponseV1'
          description: Bad Request error.
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorExceptionJsonResponseV1'
          description: Method Not Allowed error.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorExceptionJsonResponseV1'
          description: Internal Server Error.
      summary: Executes a transaction on a Iroha ledger
      x-hyperledger-cacti:
        http:
          verbLowerCase: post
          path: /api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha/run-transaction
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha/generate-transaction:
    post:
      operationId: generateTransactionV1
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateTransactionRequestV1'
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorExceptionResponseV1'
          description: Bad Request Error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorExceptionResponseV1'
          description: Internal Server Error
      summary: Generate transaction that can be signed locally.
      x-hyperledger-cacti:
        http:
          verbLowerCase: post
          path: /api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha/generate-transaction
      x-content-type: application/json
      x-accepts: application/json
  /api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha/get-prometheus-exporter-metrics:
    get:
      operationId: getPrometheusMetricsV1
      parameters: []
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrometheusExporterMetricsResponse'
          description: OK
      summary: Get the Prometheus Metrics
      x-hyperledger-cacti:
        http:
          verbLowerCase: get
          path: /api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-iroha/get-prometheus-exporter-metrics
      x-accepts: text/plain
components:
  schemas:
    IrohaCommand:
      enum:
      - createAccount
      - setAccountDetail
      - setAccountQuorum
      - compareAndSetAccountDetail
      - createAsset
      - addAssetQuantity
      - subtractAssetQuantity
      - transferAsset
      - createDomain
      - createRole
      - detachRole
      - appendRole
      - addSignatory
      - removeSignatory
      - grantPermission
      - revokePermission
      - addPeer
      - removePeer
      - setSettingValue
      - callEngine
      type: string
      x-enum-descriptions:
      - "Make entity in the system, capable of sending transactions or queries, storing\
        \ signatories, personal data and identifiers."
      - Set key-value information for a given account.
      - "Set the number of signatories required to confirm the identity of a user,\
        \ who creates the transaction."
      - Set key-value information for a given account if the old value matches the
        value passed.
      - "Create a new type of asset, unique in a domain. An asset is a countable representation\
        \ of a commodity."
      - Increase the quantity of an asset on account of transaction creator.
      - Decrease the number of assets on account of transaction creator.
      - "Share assets within the account in peer network: in the way that source account\
        \ transfers assets to the target account."
      - "Make new domain in Iroha network, which is a group of accounts."
      - Create a new role in the system from the set of permissions.
      - Detach a role from the set of roles of an account.
      - "Promote an account to some created role in the system, where a role is a\
        \ set of permissions account has to perform an action (command or query)."
      - Add an identifier to the account. Such identifier is a public key of another
        device or a public key of another user.
      - "Remove a public key, associated with an identity, from an account"
      - Give another account rights to perform actions on the account of transaction
        sender (give someone right to do something with my account).
      - Revoke or dismiss given granted permission from another account in the network.
      - Write into ledger the fact of peer addition into the peer network.
      - Write into ledger the fact of peer removal from the network.
      - "This command is not available for use, it was added for backward compatibility\
        \ with Iroha."
      - This command is not availalbe for use because it is related to smart contract.
      x-enum-varnames:
      - CreateAccount
      - SetAccountDetail
      - SetAccountQuorum
      - CompareAndSetAccountDetail
      - CreateAsset
      - AddAssetQuantity
      - SubtractAssetQuantity
      - TransferAsset
      - CreateDomain
      - CreateRole
      - DetachRole
      - AppendRole
      - AddSignatory
      - RemoveSignatory
      - GrantPermission
      - RevokePermission
      - AddPeer
      - RemovePeer
      - SetSettingValue
      - CallEngine
    IrohaQuery:
      enum:
      - getAccount
      - getAccountDetail
      - getAssetInfo
      - getAccountAssets
      - getTransactions
      - getPendingTransactions
      - getAccountTransactions
      - getAccountAssetTransactions
      - getRoles
      - getSignatories
      - getRolePermissions
      - getBlock
      - getEngineReceipts
      - fetchCommits
      - getPeers
      type: string
      x-enum-descriptions:
      - To get the state of an account
      - To get details of the account.
      - To get information on the given asset (as for now - its precision).
      - To get the state of all assets in an account (a balance).
      - "To retrieve information about transactions, based on their hashes."
      - To retrieve a list of pending (not fully signed) multisignature transactions
        or batches of transactions issued by account of query creator.
      - To retrieve a list of transactions per account.
      - To retrieve all transactions associated with given account and asset.
      - To get existing roles in the system.
      - "To get signatories, which act as an identity of the account."
      - To get available permissions per role in the system.
      - "To get a specific block, using its height as an identifier."
      - To retrieve a receipt of a CallEngine command. Allows to access the event
        log created during computations inside the EVM.
      - "To get new blocks as soon as they are committed, a user can invoke FetchCommits\
        \ RPC call to Iroha network."
      - A query that returns a list of peers in Iroha network.
      x-enum-varnames:
      - GetAccount
      - GetAccountDetail
      - GetAssetInfo
      - GetAccountAssets
      - GetTransactions
      - GetPendingTransactions
      - GetAccountTransactions
      - GetAccountAssetTransactions
      - GetRoles
      - GetSignatories
      - GetRolePermissions
      - GetBlock
      - GetEngineReceipts
      - FetchCommits
      - GetPeers
    KeyPair:
      properties:
        publicKey:
          description: SHA-3 ed25519 public keys of length 64 are recommended.
          example: 313a07e6384776ed95447710d15e59148473ccfc052a681317a72a69f2a49910
          nullable: false
          type: string
        privateKey:
          description: SHA-3 ed25519 private keys of length 64 are recommended.
          example: f101537e319568c765b2cc89698325604991dca57b9716b58016b253506cab70
          nullable: false
          type: string
      required:
      - privateKey
      - publicKey
      type: object
    RunTransactionRequestV1Params:
      oneOf:
      - items: {}
        type: array
      - $ref: '#/components/schemas/AddAssetQuantityRequestParameters'
      - $ref: '#/components/schemas/AddPeerRequestParameters'
      - $ref: '#/components/schemas/AddSignatoryRequestParameters'
      - $ref: '#/components/schemas/AppendRoleRequestParameters'
      - $ref: '#/components/schemas/CallEngineRequestParameters'
      - $ref: '#/components/schemas/CreateAccountRequestParameters'
      - $ref: '#/components/schemas/CreateAssetRequestParameters'
      - $ref: '#/components/schemas/CreateDomainRequestParameters'
      - $ref: '#/components/schemas/CreateRoleRequestParameters'
      - $ref: '#/components/schemas/DetachRoleRequestParameters'
      - $ref: '#/components/schemas/GrantPermissionRequestParameters'
      - $ref: '#/components/schemas/RemovePeerRequestParameters'
      - $ref: '#/components/schemas/RemoveSignatoryRequestParameters'
      - $ref: '#/components/schemas/RevokePermissionRequestParameters'
      - $ref: '#/components/schemas/SetAccountDetailRequestParameters'
      - $ref: '#/components/schemas/SetAccountQuorumRequestParameters'
      - $ref: '#/components/schemas/SubtractAssetQuantityRequestParameters'
      - $ref: '#/components/schemas/TransferAssetRequestParameters'
      - $ref: '#/components/schemas/CompareAndSetAccountDetailRequestParameters'
      - $ref: '#/components/schemas/GetAccountRequestParameters'
      - $ref: '#/components/schemas/GetBlockRequestParameters'
      - $ref: '#/components/schemas/GetSignatoriesRequestParameters'
      - $ref: '#/components/schemas/GetTransactionsRequestParameters'
      - $ref: '#/components/schemas/GetPendingTransactionsRequestParameters'
      - $ref: '#/components/schemas/GetAccountTransactionsRequestParameters'
      - $ref: '#/components/schemas/GetAccountAssetTransactionsRequestParameters'
      - $ref: '#/components/schemas/GetAccountAssetsRequestParameters'
      - $ref: '#/components/schemas/GetAccountDetailRequestParameters'
      - $ref: '#/components/schemas/GetAssetInfoRequestParameters'
      - $ref: '#/components/schemas/GetRolePermissionsRequestParameters'
      - $ref: '#/components/schemas/GetEngineReceiptsRequestParameters'
    RunTransactionRequestV1Body:
      oneOf:
      - $ref: '#/components/schemas/RunTransactionRequestV1'
      - $ref: '#/components/schemas/RunTransactionSignedRequestV1'
    RunTransactionRequestV1:
      additionalProperties: false
      properties:
        commandName:
          nullable: false
          type: string
        baseConfig:
          $ref: '#/components/schemas/IrohaBaseConfig'
        params:
          $ref: '#/components/schemas/RunTransactionRequestV1Params'
      required:
      - baseConfig
      - commandName
      - params
      type: object
    AddAssetQuantityRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Add Asset Quantity.
      properties:
        assetId:
          type: string
        amount:
          type: number
      required:
      - amount
      - assetId
      type: object
    AddPeerRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Add Peer.
      properties:
        address:
          type: string
        peerKey:
          type: string
        tlsCertificate:
          type: string
        syncingPeer:
          type: boolean
      required:
      - address
      - peerKey
      type: object
    AddSignatoryRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Add Signatory.
      properties:
        accountId:
          type: string
        publicKey:
          type: string
      required:
      - accountId
      - publicKey
      type: object
    AppendRoleRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Append Role.
      properties:
        accountId:
          type: string
        roleName:
          type: string
      required:
      - accountId
      - roleName
      type: object
    CallEngineRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Call Engine.
      properties:
        caller:
          type: string
        callee:
          type: string
        input:
          type: string
      required:
      - callee
      - caller
      - input
      type: object
    CreateAccountRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Create Account.
      properties:
        accountName:
          type: string
        domainId:
          type: string
        publicKey:
          type: string
      required:
      - accountName
      - domainId
      - publicKey
      type: object
    CreateAssetRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Create Asset.
      properties:
        assetName:
          type: string
        domainId:
          type: string
        precision:
          type: integer
      required:
      - assetName
      - domainId
      - precision
      type: object
    CreateDomainRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Create Domain.
      properties:
        domainId:
          type: string
        defaultRole:
          type: string
      required:
      - defaultRole
      - domainId
      type: object
    CreateRoleRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Create Role.
      properties:
        roleName:
          type: string
        permissionsList:
          items:
            type: number
          type: array
      required:
      - permissionsList
      - roleName
      type: object
    DetachRoleRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Detach Role.
      properties:
        accountId:
          type: string
        roleName:
          type: string
      required:
      - accountId
      - roleName
      type: object
    GrantPermissionRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Grant Permission.
      properties:
        accountId:
          type: string
        permission:
          type: string
      required:
      - accountId
      - permission
      type: object
    RemovePeerRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Remove Peer.
      properties:
        publicKey:
          type: string
      required:
      - publicKey
      type: object
    RemoveSignatoryRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Remove Signatory.
      properties:
        accountId:
          type: string
        publicKey:
          type: string
      required:
      - accountId
      - publicKey
      type: object
    RevokePermissionRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Revoke Permission.
      properties:
        accountId:
          type: string
        permission:
          type: number
      required:
      - accountId
      - permission
      type: object
    SetAccountDetailRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Set Account Detail.
      properties:
        accountId:
          type: string
        key:
          type: string
        value:
          type: string
      required:
      - accountId
      - key
      - value
      type: object
    SetAccountQuorumRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Set Account Quorum.
      properties:
        accountId:
          type: string
        quorum:
          type: integer
      required:
      - accountId
      - quorum
      type: object
    SubtractAssetQuantityRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Subtract Asset Quantity.
      properties:
        assetId:
          type: string
        amount:
          type: number
      required:
      - amount
      - assetId
      type: object
    TransferAssetRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Transfer Asset.
      properties:
        srcAccountId:
          type: string
        destAccountId:
          type: string
        assetId:
          type: string
        description:
          type: string
        amount:
          type: number
      required:
      - amount
      - assetId
      - description
      - destAccountId
      - srcAccountId
      type: object
    CompareAndSetAccountDetailRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Compare And Set Account Detail.
      properties:
        accountId:
          type: string
        key:
          type: string
        value:
          type: string
        oldValue:
          type: string
        check_empty:
          type: boolean
      required:
      - accountId
      - check_empty
      - key
      - value
      type: object
    GetAccountRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Account.
      properties:
        accountId:
          type: string
      required:
      - accountId
      type: object
    GetBlockRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Block.
      properties:
        height:
          type: integer
      required:
      - height
      type: object
    GetSignatoriesRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Signatories.
      properties:
        accountId:
          type: string
      required:
      - accountId
      type: object
    GetTransactionsRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Transactions.
      properties:
        txHashesList:
          items:
            type: string
          type: array
      required:
      - txHashesList
      type: object
    GetPendingTransactionsRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Pending Transactions.
      properties:
        pageSize:
          type: integer
        firstTxHash:
          type: string
        firstTxTime:
          type: object
        lastTxTime:
          type: object
      required:
      - pageSize
      type: object
    GetAccountTransactionsRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Account Transactions.
      properties:
        accountId:
          type: string
        pageSize:
          type: integer
        firstTxHash:
          type: string
        firstTxTime:
          type: object
        lastTxTime:
          type: object
        firstTxHeight:
          type: integer
        lastTxHeight:
          type: integer
      required:
      - accountId
      - firstTxHash
      - pageSize
      type: object
    GetAccountAssetTransactionsRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Account Asset Transactions.
      properties:
        accountId:
          type: string
        assetId:
          type: string
        pageSize:
          type: integer
        firstTxHash:
          type: string
      required:
      - accountId
      - assetId
      - firstTxHash
      - pageSize
      type: object
    GetAccountAssetsRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Account Assets.
      properties:
        accountId:
          type: string
        pageSize:
          type: number
        firstAssetId:
          type: string
      required:
      - accountId
      - pageSize
      type: object
    GetAccountDetailRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Account Detail.
      properties:
        accountId:
          type: string
        key:
          type: string
        writer:
          type: string
        pageSize:
          type: integer
        paginationKey:
          type: string
        paginationWriter:
          type: string
      required:
      - pageSize
      - paginationKey
      - paginationWriter
      type: object
    GetAssetInfoRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Asset Info.
      properties:
        assetId:
          type: string
      required:
      - assetId
      type: object
    GetRolePermissionsRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Role Permissions.
      properties:
        roleId:
          type: string
      required:
      - roleId
      type: object
    GetEngineReceiptsRequestParameters:
      description: The list of arguments to pass in to the transaction request to
        Get Engine Receipts.
      properties:
        txHash:
          type: string
      required:
      - txHash
      type: object
    RunTransactionSignedRequestV1:
      properties:
        signedTransaction:
          description: Signed transaction binary data received from generate-transaction
            endpoint.
          type: string
        baseConfig:
          $ref: '#/components/schemas/IrohaBaseConfig'
      required:
      - signedTransaction
      type: object
    GenerateTransactionRequestV1:
      additionalProperties: false
      example:
        creatorAccountId: creatorAccountId
        commandName: ""
        commandParams: "{}"
        quorum: 0.8008281904610115
      properties:
        commandName:
          description: Iroha command name.
          nullable: false
          type: IrohaCommand
        commandParams:
          description: Parameters for iroha command specified in commandName
          type: object
        creatorAccountId:
          description: Sender account id
          nullable: false
          type: string
        quorum:
          default: 1
          description: Requested transaction quorum
          nullable: false
          type: number
      required:
      - commandName
      - commandParams
      - creatorAccountId
      type: object
    IrohaBaseConfig:
      additionalProperties: true
      properties:
        irohaHost:
          nullable: false
          type: string
        irohaPort:
          nullable: false
          type: number
        creatorAccountId:
          nullable: false
          type: string
        privKey:
          default: []
          items: {}
          nullable: false
          type: array
        quorum:
          nullable: false
          type: number
        timeoutLimit:
          nullable: false
          type: number
        tls:
          description: Can only be set to false for an insecure grpc connection.
          nullable: false
          type: boolean
        monitorMode:
          description: Flag used for monitoring. It changes default beahviour of transaction
            wrapper so it return error to caller instead of throwing RuntimeError
            straight away.
          nullable: true
          type: boolean
      type: object
    RunTransactionResponse:
      example:
        transactionReceipt: ""
      properties:
        transactionReceipt: {}
      required:
      - transactionReceipt
      type: object
    PrometheusExporterMetricsResponse:
      nullable: false
      type: string
    ErrorExceptionJsonResponseV1:
      properties:
        message:
          nullable: false
          type: string
        name:
          nullable: false
          type: string
        error:
          nullable: false
          type: string
        stack:
          nullable: false
          type: string
        cause:
          nullable: false
          type: string
      required:
      - message
      type: object
    ErrorExceptionResponseV1:
      properties:
        message:
          nullable: false
          type: string
        error:
          nullable: false
          type: string
      required:
      - error
      - message
      type: object
    WatchBlocksV1:
      enum:
      - org.hyperledger.cactus.api.async.iroha.WatchBlocksV1.Subscribe
      - org.hyperledger.cactus.api.async.iroha.WatchBlocksV1.Next
      - org.hyperledger.cactus.api.async.iroha.WatchBlocksV1.Unsubscribe
      - org.hyperledger.cactus.api.async.iroha.WatchBlocksV1.Error
      - org.hyperledger.cactus.api.async.iroha.WatchBlocksV1.Complete
      type: string
      x-enum-varnames:
      - Subscribe
      - Next
      - Unsubscribe
      - Error
      - Complete
      - SendAsyncRequest
      - SendSyncRequest
    IrohaSocketIOTransactV1:
      enum:
      - org.hyperledger.cactus.api.async.iroha.IrohaSocketIOTransactV1.SendAsyncRequest
      - org.hyperledger.cactus.api.async.iroha.IrohaSocketIOTransactV1.SendSyncRequest
      type: string
      x-enum-varnames:
      - SendAsyncRequest
      - SendSyncRequest
    IrohaBlockResponse:
      properties:
        payload:
          $ref: '#/components/schemas/IrohaBlockResponse_payload'
        signaturesList:
          items: {}
          type: array
      required:
      - payload
      - signaturesList
      type: object
    IrohaBlockProgress:
      properties:
        transactionReceipt:
          $ref: '#/components/schemas/IrohaBlockResponse'
      required:
      - transactionReceipt
      type: object
    IrohaBlockResponse_payload:
      properties:
        transactionsList:
          items: {}
          type: array
        txNumber:
          type: number
        height:
          type: number
        prevBlockHash:
          type: string
        createdTime:
          type: number
        rejectedTransactionsHashesList:
          items: {}
          type: array
      required:
      - createdTime
      - height
      - prevBlockHash
      - rejectedTransactionsHashesList
      - transactionsList
      - txNumber
      type: object

