/*
 * Hyperledger Cactus Plugin - Connector Iroha
 * Can perform basic tasks on a Iroha ledger
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AddAssetQuantityRequestParameters;
import org.openapitools.client.model.AddPeerRequestParameters;
import org.openapitools.client.model.AddSignatoryRequestParameters;
import org.openapitools.client.model.AppendRoleRequestParameters;
import org.openapitools.client.model.CallEngineRequestParameters;
import org.openapitools.client.model.CompareAndSetAccountDetailRequestParameters;
import org.openapitools.client.model.CreateAccountRequestParameters;
import org.openapitools.client.model.CreateAssetRequestParameters;
import org.openapitools.client.model.CreateDomainRequestParameters;
import org.openapitools.client.model.CreateRoleRequestParameters;
import org.openapitools.client.model.DetachRoleRequestParameters;
import org.openapitools.client.model.GetAccountAssetTransactionsRequestParameters;
import org.openapitools.client.model.GetAccountAssetsRequestParameters;
import org.openapitools.client.model.GetAccountDetailRequestParameters;
import org.openapitools.client.model.GetAccountRequestParameters;
import org.openapitools.client.model.GetAccountTransactionsRequestParameters;
import org.openapitools.client.model.GetAssetInfoRequestParameters;
import org.openapitools.client.model.GetBlockRequestParameters;
import org.openapitools.client.model.GetEngineReceiptsRequestParameters;
import org.openapitools.client.model.GetPendingTransactionsRequestParameters;
import org.openapitools.client.model.GetRolePermissionsRequestParameters;
import org.openapitools.client.model.GetSignatoriesRequestParameters;
import org.openapitools.client.model.GetTransactionsRequestParameters;
import org.openapitools.client.model.GrantPermissionRequestParameters;
import org.openapitools.client.model.RemovePeerRequestParameters;
import org.openapitools.client.model.RemoveSignatoryRequestParameters;
import org.openapitools.client.model.RevokePermissionRequestParameters;
import org.openapitools.client.model.SetAccountDetailRequestParameters;
import org.openapitools.client.model.SetAccountQuorumRequestParameters;
import org.openapitools.client.model.SubtractAssetQuantityRequestParameters;
import org.openapitools.client.model.TransferAssetRequestParameters;

import javax.ws.rs.core.GenericType;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.JsonPrimitive;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonSerializationContext;
import com.google.gson.JsonSerializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;

import org.openapitools.client.JSON;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RunTransactionRequestV1Params extends AbstractOpenApiSchema {
    private static final Logger log = Logger.getLogger(RunTransactionRequestV1Params.class.getName());

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!RunTransactionRequestV1Params.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'RunTransactionRequestV1Params' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<AddAssetQuantityRequestParameters> adapterAddAssetQuantityRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(AddAssetQuantityRequestParameters.class));
            final TypeAdapter<AddPeerRequestParameters> adapterAddPeerRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(AddPeerRequestParameters.class));
            final TypeAdapter<AddSignatoryRequestParameters> adapterAddSignatoryRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(AddSignatoryRequestParameters.class));
            final TypeAdapter<AppendRoleRequestParameters> adapterAppendRoleRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(AppendRoleRequestParameters.class));
            final TypeAdapter<CallEngineRequestParameters> adapterCallEngineRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(CallEngineRequestParameters.class));
            final TypeAdapter<CompareAndSetAccountDetailRequestParameters> adapterCompareAndSetAccountDetailRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(CompareAndSetAccountDetailRequestParameters.class));
            final TypeAdapter<CreateAccountRequestParameters> adapterCreateAccountRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(CreateAccountRequestParameters.class));
            final TypeAdapter<CreateAssetRequestParameters> adapterCreateAssetRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(CreateAssetRequestParameters.class));
            final TypeAdapter<CreateDomainRequestParameters> adapterCreateDomainRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(CreateDomainRequestParameters.class));
            final TypeAdapter<CreateRoleRequestParameters> adapterCreateRoleRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(CreateRoleRequestParameters.class));
            final TypeAdapter<DetachRoleRequestParameters> adapterDetachRoleRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(DetachRoleRequestParameters.class));
            final TypeAdapter<GetAccountAssetTransactionsRequestParameters> adapterGetAccountAssetTransactionsRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetAccountAssetTransactionsRequestParameters.class));
            final TypeAdapter<GetAccountAssetsRequestParameters> adapterGetAccountAssetsRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetAccountAssetsRequestParameters.class));
            final TypeAdapter<GetAccountDetailRequestParameters> adapterGetAccountDetailRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetAccountDetailRequestParameters.class));
            final TypeAdapter<GetAccountRequestParameters> adapterGetAccountRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetAccountRequestParameters.class));
            final TypeAdapter<GetAccountTransactionsRequestParameters> adapterGetAccountTransactionsRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetAccountTransactionsRequestParameters.class));
            final TypeAdapter<GetAssetInfoRequestParameters> adapterGetAssetInfoRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetAssetInfoRequestParameters.class));
            final TypeAdapter<GetBlockRequestParameters> adapterGetBlockRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetBlockRequestParameters.class));
            final TypeAdapter<GetEngineReceiptsRequestParameters> adapterGetEngineReceiptsRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetEngineReceiptsRequestParameters.class));
            final TypeAdapter<GetPendingTransactionsRequestParameters> adapterGetPendingTransactionsRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetPendingTransactionsRequestParameters.class));
            final TypeAdapter<GetRolePermissionsRequestParameters> adapterGetRolePermissionsRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetRolePermissionsRequestParameters.class));
            final TypeAdapter<GetSignatoriesRequestParameters> adapterGetSignatoriesRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetSignatoriesRequestParameters.class));
            final TypeAdapter<GetTransactionsRequestParameters> adapterGetTransactionsRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GetTransactionsRequestParameters.class));
            final TypeAdapter<GrantPermissionRequestParameters> adapterGrantPermissionRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(GrantPermissionRequestParameters.class));
            final TypeAdapter<List&lt;Object&gt;> adapterList&lt;Object&gt; = gson.getDelegateAdapter(this, TypeToken.get(List&lt;Object&gt;.class));
            final TypeAdapter<RemovePeerRequestParameters> adapterRemovePeerRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(RemovePeerRequestParameters.class));
            final TypeAdapter<RemoveSignatoryRequestParameters> adapterRemoveSignatoryRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(RemoveSignatoryRequestParameters.class));
            final TypeAdapter<RevokePermissionRequestParameters> adapterRevokePermissionRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(RevokePermissionRequestParameters.class));
            final TypeAdapter<SetAccountDetailRequestParameters> adapterSetAccountDetailRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(SetAccountDetailRequestParameters.class));
            final TypeAdapter<SetAccountQuorumRequestParameters> adapterSetAccountQuorumRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(SetAccountQuorumRequestParameters.class));
            final TypeAdapter<SubtractAssetQuantityRequestParameters> adapterSubtractAssetQuantityRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(SubtractAssetQuantityRequestParameters.class));
            final TypeAdapter<TransferAssetRequestParameters> adapterTransferAssetRequestParameters = gson.getDelegateAdapter(this, TypeToken.get(TransferAssetRequestParameters.class));

            return (TypeAdapter<T>) new TypeAdapter<RunTransactionRequestV1Params>() {
                @Override
                public void write(JsonWriter out, RunTransactionRequestV1Params value) throws IOException {
                    if (value == null || value.getActualInstance() == null) {
                        elementAdapter.write(out, null);
                        return;
                    }

                    // check if the actual instance is of the type `AddAssetQuantityRequestParameters`
                    if (value.getActualInstance() instanceof AddAssetQuantityRequestParameters) {
                        JsonObject obj = adapterAddAssetQuantityRequestParameters.toJsonTree((AddAssetQuantityRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `AddPeerRequestParameters`
                    if (value.getActualInstance() instanceof AddPeerRequestParameters) {
                        JsonObject obj = adapterAddPeerRequestParameters.toJsonTree((AddPeerRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `AddSignatoryRequestParameters`
                    if (value.getActualInstance() instanceof AddSignatoryRequestParameters) {
                        JsonObject obj = adapterAddSignatoryRequestParameters.toJsonTree((AddSignatoryRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `AppendRoleRequestParameters`
                    if (value.getActualInstance() instanceof AppendRoleRequestParameters) {
                        JsonObject obj = adapterAppendRoleRequestParameters.toJsonTree((AppendRoleRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `CallEngineRequestParameters`
                    if (value.getActualInstance() instanceof CallEngineRequestParameters) {
                        JsonObject obj = adapterCallEngineRequestParameters.toJsonTree((CallEngineRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `CompareAndSetAccountDetailRequestParameters`
                    if (value.getActualInstance() instanceof CompareAndSetAccountDetailRequestParameters) {
                        JsonObject obj = adapterCompareAndSetAccountDetailRequestParameters.toJsonTree((CompareAndSetAccountDetailRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `CreateAccountRequestParameters`
                    if (value.getActualInstance() instanceof CreateAccountRequestParameters) {
                        JsonObject obj = adapterCreateAccountRequestParameters.toJsonTree((CreateAccountRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `CreateAssetRequestParameters`
                    if (value.getActualInstance() instanceof CreateAssetRequestParameters) {
                        JsonObject obj = adapterCreateAssetRequestParameters.toJsonTree((CreateAssetRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `CreateDomainRequestParameters`
                    if (value.getActualInstance() instanceof CreateDomainRequestParameters) {
                        JsonObject obj = adapterCreateDomainRequestParameters.toJsonTree((CreateDomainRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `CreateRoleRequestParameters`
                    if (value.getActualInstance() instanceof CreateRoleRequestParameters) {
                        JsonObject obj = adapterCreateRoleRequestParameters.toJsonTree((CreateRoleRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `DetachRoleRequestParameters`
                    if (value.getActualInstance() instanceof DetachRoleRequestParameters) {
                        JsonObject obj = adapterDetachRoleRequestParameters.toJsonTree((DetachRoleRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetAccountAssetTransactionsRequestParameters`
                    if (value.getActualInstance() instanceof GetAccountAssetTransactionsRequestParameters) {
                        JsonObject obj = adapterGetAccountAssetTransactionsRequestParameters.toJsonTree((GetAccountAssetTransactionsRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetAccountAssetsRequestParameters`
                    if (value.getActualInstance() instanceof GetAccountAssetsRequestParameters) {
                        JsonObject obj = adapterGetAccountAssetsRequestParameters.toJsonTree((GetAccountAssetsRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetAccountDetailRequestParameters`
                    if (value.getActualInstance() instanceof GetAccountDetailRequestParameters) {
                        JsonObject obj = adapterGetAccountDetailRequestParameters.toJsonTree((GetAccountDetailRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetAccountRequestParameters`
                    if (value.getActualInstance() instanceof GetAccountRequestParameters) {
                        JsonObject obj = adapterGetAccountRequestParameters.toJsonTree((GetAccountRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetAccountTransactionsRequestParameters`
                    if (value.getActualInstance() instanceof GetAccountTransactionsRequestParameters) {
                        JsonObject obj = adapterGetAccountTransactionsRequestParameters.toJsonTree((GetAccountTransactionsRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetAssetInfoRequestParameters`
                    if (value.getActualInstance() instanceof GetAssetInfoRequestParameters) {
                        JsonObject obj = adapterGetAssetInfoRequestParameters.toJsonTree((GetAssetInfoRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetBlockRequestParameters`
                    if (value.getActualInstance() instanceof GetBlockRequestParameters) {
                        JsonObject obj = adapterGetBlockRequestParameters.toJsonTree((GetBlockRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetEngineReceiptsRequestParameters`
                    if (value.getActualInstance() instanceof GetEngineReceiptsRequestParameters) {
                        JsonObject obj = adapterGetEngineReceiptsRequestParameters.toJsonTree((GetEngineReceiptsRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetPendingTransactionsRequestParameters`
                    if (value.getActualInstance() instanceof GetPendingTransactionsRequestParameters) {
                        JsonObject obj = adapterGetPendingTransactionsRequestParameters.toJsonTree((GetPendingTransactionsRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetRolePermissionsRequestParameters`
                    if (value.getActualInstance() instanceof GetRolePermissionsRequestParameters) {
                        JsonObject obj = adapterGetRolePermissionsRequestParameters.toJsonTree((GetRolePermissionsRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetSignatoriesRequestParameters`
                    if (value.getActualInstance() instanceof GetSignatoriesRequestParameters) {
                        JsonObject obj = adapterGetSignatoriesRequestParameters.toJsonTree((GetSignatoriesRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GetTransactionsRequestParameters`
                    if (value.getActualInstance() instanceof GetTransactionsRequestParameters) {
                        JsonObject obj = adapterGetTransactionsRequestParameters.toJsonTree((GetTransactionsRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `GrantPermissionRequestParameters`
                    if (value.getActualInstance() instanceof GrantPermissionRequestParameters) {
                        JsonObject obj = adapterGrantPermissionRequestParameters.toJsonTree((GrantPermissionRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `List&lt;Object&gt;`
                    if (value.getActualInstance() instanceof List&lt;Object&gt;) {
                        JsonObject obj = adapterList&lt;Object&gt;.toJsonTree((List&lt;Object&gt;)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `RemovePeerRequestParameters`
                    if (value.getActualInstance() instanceof RemovePeerRequestParameters) {
                        JsonObject obj = adapterRemovePeerRequestParameters.toJsonTree((RemovePeerRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `RemoveSignatoryRequestParameters`
                    if (value.getActualInstance() instanceof RemoveSignatoryRequestParameters) {
                        JsonObject obj = adapterRemoveSignatoryRequestParameters.toJsonTree((RemoveSignatoryRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `RevokePermissionRequestParameters`
                    if (value.getActualInstance() instanceof RevokePermissionRequestParameters) {
                        JsonObject obj = adapterRevokePermissionRequestParameters.toJsonTree((RevokePermissionRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `SetAccountDetailRequestParameters`
                    if (value.getActualInstance() instanceof SetAccountDetailRequestParameters) {
                        JsonObject obj = adapterSetAccountDetailRequestParameters.toJsonTree((SetAccountDetailRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `SetAccountQuorumRequestParameters`
                    if (value.getActualInstance() instanceof SetAccountQuorumRequestParameters) {
                        JsonObject obj = adapterSetAccountQuorumRequestParameters.toJsonTree((SetAccountQuorumRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `SubtractAssetQuantityRequestParameters`
                    if (value.getActualInstance() instanceof SubtractAssetQuantityRequestParameters) {
                        JsonObject obj = adapterSubtractAssetQuantityRequestParameters.toJsonTree((SubtractAssetQuantityRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    // check if the actual instance is of the type `TransferAssetRequestParameters`
                    if (value.getActualInstance() instanceof TransferAssetRequestParameters) {
                        JsonObject obj = adapterTransferAssetRequestParameters.toJsonTree((TransferAssetRequestParameters)value.getActualInstance()).getAsJsonObject();
                        elementAdapter.write(out, obj);
                        return;
                    }

                    throw new IOException("Failed to serialize as the type doesn't match oneOf schemas: AddAssetQuantityRequestParameters, AddPeerRequestParameters, AddSignatoryRequestParameters, AppendRoleRequestParameters, CallEngineRequestParameters, CompareAndSetAccountDetailRequestParameters, CreateAccountRequestParameters, CreateAssetRequestParameters, CreateDomainRequestParameters, CreateRoleRequestParameters, DetachRoleRequestParameters, GetAccountAssetTransactionsRequestParameters, GetAccountAssetsRequestParameters, GetAccountDetailRequestParameters, GetAccountRequestParameters, GetAccountTransactionsRequestParameters, GetAssetInfoRequestParameters, GetBlockRequestParameters, GetEngineReceiptsRequestParameters, GetPendingTransactionsRequestParameters, GetRolePermissionsRequestParameters, GetSignatoriesRequestParameters, GetTransactionsRequestParameters, GrantPermissionRequestParameters, List<Object>, RemovePeerRequestParameters, RemoveSignatoryRequestParameters, RevokePermissionRequestParameters, SetAccountDetailRequestParameters, SetAccountQuorumRequestParameters, SubtractAssetQuantityRequestParameters, TransferAssetRequestParameters");
                }

                @Override
                public RunTransactionRequestV1Params read(JsonReader in) throws IOException {
                    Object deserialized = null;
                    JsonObject jsonObject = elementAdapter.read(in).getAsJsonObject();

                    int match = 0;
                    ArrayList<String> errorMessages = new ArrayList<>();
                    TypeAdapter actualAdapter = elementAdapter;

                    // deserialize AddAssetQuantityRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        AddAssetQuantityRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterAddAssetQuantityRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'AddAssetQuantityRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for AddAssetQuantityRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'AddAssetQuantityRequestParameters'", e);
                    }

                    // deserialize AddPeerRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        AddPeerRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterAddPeerRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'AddPeerRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for AddPeerRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'AddPeerRequestParameters'", e);
                    }

                    // deserialize AddSignatoryRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        AddSignatoryRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterAddSignatoryRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'AddSignatoryRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for AddSignatoryRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'AddSignatoryRequestParameters'", e);
                    }

                    // deserialize AppendRoleRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        AppendRoleRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterAppendRoleRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'AppendRoleRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for AppendRoleRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'AppendRoleRequestParameters'", e);
                    }

                    // deserialize CallEngineRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        CallEngineRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterCallEngineRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'CallEngineRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for CallEngineRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'CallEngineRequestParameters'", e);
                    }

                    // deserialize CompareAndSetAccountDetailRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        CompareAndSetAccountDetailRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterCompareAndSetAccountDetailRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'CompareAndSetAccountDetailRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for CompareAndSetAccountDetailRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'CompareAndSetAccountDetailRequestParameters'", e);
                    }

                    // deserialize CreateAccountRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        CreateAccountRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterCreateAccountRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'CreateAccountRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for CreateAccountRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'CreateAccountRequestParameters'", e);
                    }

                    // deserialize CreateAssetRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        CreateAssetRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterCreateAssetRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'CreateAssetRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for CreateAssetRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'CreateAssetRequestParameters'", e);
                    }

                    // deserialize CreateDomainRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        CreateDomainRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterCreateDomainRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'CreateDomainRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for CreateDomainRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'CreateDomainRequestParameters'", e);
                    }

                    // deserialize CreateRoleRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        CreateRoleRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterCreateRoleRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'CreateRoleRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for CreateRoleRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'CreateRoleRequestParameters'", e);
                    }

                    // deserialize DetachRoleRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        DetachRoleRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterDetachRoleRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'DetachRoleRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for DetachRoleRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'DetachRoleRequestParameters'", e);
                    }

                    // deserialize GetAccountAssetTransactionsRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetAccountAssetTransactionsRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetAccountAssetTransactionsRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetAccountAssetTransactionsRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetAccountAssetTransactionsRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetAccountAssetTransactionsRequestParameters'", e);
                    }

                    // deserialize GetAccountAssetsRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetAccountAssetsRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetAccountAssetsRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetAccountAssetsRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetAccountAssetsRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetAccountAssetsRequestParameters'", e);
                    }

                    // deserialize GetAccountDetailRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetAccountDetailRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetAccountDetailRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetAccountDetailRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetAccountDetailRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetAccountDetailRequestParameters'", e);
                    }

                    // deserialize GetAccountRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetAccountRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetAccountRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetAccountRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetAccountRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetAccountRequestParameters'", e);
                    }

                    // deserialize GetAccountTransactionsRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetAccountTransactionsRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetAccountTransactionsRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetAccountTransactionsRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetAccountTransactionsRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetAccountTransactionsRequestParameters'", e);
                    }

                    // deserialize GetAssetInfoRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetAssetInfoRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetAssetInfoRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetAssetInfoRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetAssetInfoRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetAssetInfoRequestParameters'", e);
                    }

                    // deserialize GetBlockRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetBlockRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetBlockRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetBlockRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetBlockRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetBlockRequestParameters'", e);
                    }

                    // deserialize GetEngineReceiptsRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetEngineReceiptsRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetEngineReceiptsRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetEngineReceiptsRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetEngineReceiptsRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetEngineReceiptsRequestParameters'", e);
                    }

                    // deserialize GetPendingTransactionsRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetPendingTransactionsRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetPendingTransactionsRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetPendingTransactionsRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetPendingTransactionsRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetPendingTransactionsRequestParameters'", e);
                    }

                    // deserialize GetRolePermissionsRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetRolePermissionsRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetRolePermissionsRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetRolePermissionsRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetRolePermissionsRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetRolePermissionsRequestParameters'", e);
                    }

                    // deserialize GetSignatoriesRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetSignatoriesRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetSignatoriesRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetSignatoriesRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetSignatoriesRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetSignatoriesRequestParameters'", e);
                    }

                    // deserialize GetTransactionsRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GetTransactionsRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGetTransactionsRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GetTransactionsRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GetTransactionsRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GetTransactionsRequestParameters'", e);
                    }

                    // deserialize GrantPermissionRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        GrantPermissionRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterGrantPermissionRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'GrantPermissionRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for GrantPermissionRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'GrantPermissionRequestParameters'", e);
                    }

                    // deserialize List<Object>
                    try {
                        // validate the JSON object to see if any exception is thrown
                        List&lt;Object&gt;.validateJsonObject(jsonObject);
                        actualAdapter = adapterList&lt;Object&gt;;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'List<Object>'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for List<Object> failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'List<Object>'", e);
                    }

                    // deserialize RemovePeerRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        RemovePeerRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterRemovePeerRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'RemovePeerRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for RemovePeerRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'RemovePeerRequestParameters'", e);
                    }

                    // deserialize RemoveSignatoryRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        RemoveSignatoryRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterRemoveSignatoryRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'RemoveSignatoryRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for RemoveSignatoryRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'RemoveSignatoryRequestParameters'", e);
                    }

                    // deserialize RevokePermissionRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        RevokePermissionRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterRevokePermissionRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'RevokePermissionRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for RevokePermissionRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'RevokePermissionRequestParameters'", e);
                    }

                    // deserialize SetAccountDetailRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        SetAccountDetailRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterSetAccountDetailRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'SetAccountDetailRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for SetAccountDetailRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'SetAccountDetailRequestParameters'", e);
                    }

                    // deserialize SetAccountQuorumRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        SetAccountQuorumRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterSetAccountQuorumRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'SetAccountQuorumRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for SetAccountQuorumRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'SetAccountQuorumRequestParameters'", e);
                    }

                    // deserialize SubtractAssetQuantityRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        SubtractAssetQuantityRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterSubtractAssetQuantityRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'SubtractAssetQuantityRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for SubtractAssetQuantityRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'SubtractAssetQuantityRequestParameters'", e);
                    }

                    // deserialize TransferAssetRequestParameters
                    try {
                        // validate the JSON object to see if any exception is thrown
                        TransferAssetRequestParameters.validateJsonObject(jsonObject);
                        actualAdapter = adapterTransferAssetRequestParameters;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'TransferAssetRequestParameters'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for TransferAssetRequestParameters failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'TransferAssetRequestParameters'", e);
                    }

                    if (match == 1) {
                        RunTransactionRequestV1Params ret = new RunTransactionRequestV1Params();
                        ret.setActualInstance(actualAdapter.fromJsonTree(jsonObject));
                        return ret;
                    }

                    throw new IOException(String.format("Failed deserialization for RunTransactionRequestV1Params: %d classes match result, expected 1. Detailed failure message for oneOf schemas: %s. JSON: %s", match, errorMessages, jsonObject.toString()));
                }
            }.nullSafe();
        }
    }

    // store a list of schema names defined in oneOf
    public static final Map<String, GenericType> schemas = new HashMap<String, GenericType>();

    public RunTransactionRequestV1Params() {
        super("oneOf", Boolean.FALSE);
    }

    public RunTransactionRequestV1Params(AddAssetQuantityRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(AddPeerRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(AddSignatoryRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(AppendRoleRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(CallEngineRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(CompareAndSetAccountDetailRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(CreateAccountRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(CreateAssetRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(CreateDomainRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(CreateRoleRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(DetachRoleRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetAccountAssetTransactionsRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetAccountAssetsRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetAccountDetailRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetAccountRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetAccountTransactionsRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetAssetInfoRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetBlockRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetEngineReceiptsRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetPendingTransactionsRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetRolePermissionsRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetSignatoriesRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GetTransactionsRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(GrantPermissionRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(List<Object> o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(RemovePeerRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(RemoveSignatoryRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(RevokePermissionRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(SetAccountDetailRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(SetAccountQuorumRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(SubtractAssetQuantityRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    public RunTransactionRequestV1Params(TransferAssetRequestParameters o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    static {
        schemas.put("AddAssetQuantityRequestParameters", new GenericType<AddAssetQuantityRequestParameters>() {
        });
        schemas.put("AddPeerRequestParameters", new GenericType<AddPeerRequestParameters>() {
        });
        schemas.put("AddSignatoryRequestParameters", new GenericType<AddSignatoryRequestParameters>() {
        });
        schemas.put("AppendRoleRequestParameters", new GenericType<AppendRoleRequestParameters>() {
        });
        schemas.put("CallEngineRequestParameters", new GenericType<CallEngineRequestParameters>() {
        });
        schemas.put("CompareAndSetAccountDetailRequestParameters", new GenericType<CompareAndSetAccountDetailRequestParameters>() {
        });
        schemas.put("CreateAccountRequestParameters", new GenericType<CreateAccountRequestParameters>() {
        });
        schemas.put("CreateAssetRequestParameters", new GenericType<CreateAssetRequestParameters>() {
        });
        schemas.put("CreateDomainRequestParameters", new GenericType<CreateDomainRequestParameters>() {
        });
        schemas.put("CreateRoleRequestParameters", new GenericType<CreateRoleRequestParameters>() {
        });
        schemas.put("DetachRoleRequestParameters", new GenericType<DetachRoleRequestParameters>() {
        });
        schemas.put("GetAccountAssetTransactionsRequestParameters", new GenericType<GetAccountAssetTransactionsRequestParameters>() {
        });
        schemas.put("GetAccountAssetsRequestParameters", new GenericType<GetAccountAssetsRequestParameters>() {
        });
        schemas.put("GetAccountDetailRequestParameters", new GenericType<GetAccountDetailRequestParameters>() {
        });
        schemas.put("GetAccountRequestParameters", new GenericType<GetAccountRequestParameters>() {
        });
        schemas.put("GetAccountTransactionsRequestParameters", new GenericType<GetAccountTransactionsRequestParameters>() {
        });
        schemas.put("GetAssetInfoRequestParameters", new GenericType<GetAssetInfoRequestParameters>() {
        });
        schemas.put("GetBlockRequestParameters", new GenericType<GetBlockRequestParameters>() {
        });
        schemas.put("GetEngineReceiptsRequestParameters", new GenericType<GetEngineReceiptsRequestParameters>() {
        });
        schemas.put("GetPendingTransactionsRequestParameters", new GenericType<GetPendingTransactionsRequestParameters>() {
        });
        schemas.put("GetRolePermissionsRequestParameters", new GenericType<GetRolePermissionsRequestParameters>() {
        });
        schemas.put("GetSignatoriesRequestParameters", new GenericType<GetSignatoriesRequestParameters>() {
        });
        schemas.put("GetTransactionsRequestParameters", new GenericType<GetTransactionsRequestParameters>() {
        });
        schemas.put("GrantPermissionRequestParameters", new GenericType<GrantPermissionRequestParameters>() {
        });
        schemas.put("List<Object>", new GenericType<List<Object>>() {
        });
        schemas.put("RemovePeerRequestParameters", new GenericType<RemovePeerRequestParameters>() {
        });
        schemas.put("RemoveSignatoryRequestParameters", new GenericType<RemoveSignatoryRequestParameters>() {
        });
        schemas.put("RevokePermissionRequestParameters", new GenericType<RevokePermissionRequestParameters>() {
        });
        schemas.put("SetAccountDetailRequestParameters", new GenericType<SetAccountDetailRequestParameters>() {
        });
        schemas.put("SetAccountQuorumRequestParameters", new GenericType<SetAccountQuorumRequestParameters>() {
        });
        schemas.put("SubtractAssetQuantityRequestParameters", new GenericType<SubtractAssetQuantityRequestParameters>() {
        });
        schemas.put("TransferAssetRequestParameters", new GenericType<TransferAssetRequestParameters>() {
        });
    }

    @Override
    public Map<String, GenericType> getSchemas() {
        return RunTransactionRequestV1Params.schemas;
    }

    /**
     * Set the instance that matches the oneOf child schema, check
     * the instance parameter is valid against the oneOf child schemas:
     * AddAssetQuantityRequestParameters, AddPeerRequestParameters, AddSignatoryRequestParameters, AppendRoleRequestParameters, CallEngineRequestParameters, CompareAndSetAccountDetailRequestParameters, CreateAccountRequestParameters, CreateAssetRequestParameters, CreateDomainRequestParameters, CreateRoleRequestParameters, DetachRoleRequestParameters, GetAccountAssetTransactionsRequestParameters, GetAccountAssetsRequestParameters, GetAccountDetailRequestParameters, GetAccountRequestParameters, GetAccountTransactionsRequestParameters, GetAssetInfoRequestParameters, GetBlockRequestParameters, GetEngineReceiptsRequestParameters, GetPendingTransactionsRequestParameters, GetRolePermissionsRequestParameters, GetSignatoriesRequestParameters, GetTransactionsRequestParameters, GrantPermissionRequestParameters, List<Object>, RemovePeerRequestParameters, RemoveSignatoryRequestParameters, RevokePermissionRequestParameters, SetAccountDetailRequestParameters, SetAccountQuorumRequestParameters, SubtractAssetQuantityRequestParameters, TransferAssetRequestParameters
     *
     * It could be an instance of the 'oneOf' schemas.
     * The oneOf child schemas may themselves be a composed schema (allOf, anyOf, oneOf).
     */
    @Override
    public void setActualInstance(Object instance) {
        if (instance instanceof AddAssetQuantityRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof AddPeerRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof AddSignatoryRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof AppendRoleRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof CallEngineRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof CompareAndSetAccountDetailRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof CreateAccountRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof CreateAssetRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof CreateDomainRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof CreateRoleRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof DetachRoleRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetAccountAssetTransactionsRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetAccountAssetsRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetAccountDetailRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetAccountRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetAccountTransactionsRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetAssetInfoRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetBlockRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetEngineReceiptsRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetPendingTransactionsRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetRolePermissionsRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetSignatoriesRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GetTransactionsRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof GrantPermissionRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof List<Object>) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof RemovePeerRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof RemoveSignatoryRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof RevokePermissionRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof SetAccountDetailRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof SetAccountQuorumRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof SubtractAssetQuantityRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof TransferAssetRequestParameters) {
            super.setActualInstance(instance);
            return;
        }

        throw new RuntimeException("Invalid instance type. Must be AddAssetQuantityRequestParameters, AddPeerRequestParameters, AddSignatoryRequestParameters, AppendRoleRequestParameters, CallEngineRequestParameters, CompareAndSetAccountDetailRequestParameters, CreateAccountRequestParameters, CreateAssetRequestParameters, CreateDomainRequestParameters, CreateRoleRequestParameters, DetachRoleRequestParameters, GetAccountAssetTransactionsRequestParameters, GetAccountAssetsRequestParameters, GetAccountDetailRequestParameters, GetAccountRequestParameters, GetAccountTransactionsRequestParameters, GetAssetInfoRequestParameters, GetBlockRequestParameters, GetEngineReceiptsRequestParameters, GetPendingTransactionsRequestParameters, GetRolePermissionsRequestParameters, GetSignatoriesRequestParameters, GetTransactionsRequestParameters, GrantPermissionRequestParameters, List<Object>, RemovePeerRequestParameters, RemoveSignatoryRequestParameters, RevokePermissionRequestParameters, SetAccountDetailRequestParameters, SetAccountQuorumRequestParameters, SubtractAssetQuantityRequestParameters, TransferAssetRequestParameters");
    }

    /**
     * Get the actual instance, which can be the following:
     * AddAssetQuantityRequestParameters, AddPeerRequestParameters, AddSignatoryRequestParameters, AppendRoleRequestParameters, CallEngineRequestParameters, CompareAndSetAccountDetailRequestParameters, CreateAccountRequestParameters, CreateAssetRequestParameters, CreateDomainRequestParameters, CreateRoleRequestParameters, DetachRoleRequestParameters, GetAccountAssetTransactionsRequestParameters, GetAccountAssetsRequestParameters, GetAccountDetailRequestParameters, GetAccountRequestParameters, GetAccountTransactionsRequestParameters, GetAssetInfoRequestParameters, GetBlockRequestParameters, GetEngineReceiptsRequestParameters, GetPendingTransactionsRequestParameters, GetRolePermissionsRequestParameters, GetSignatoriesRequestParameters, GetTransactionsRequestParameters, GrantPermissionRequestParameters, List<Object>, RemovePeerRequestParameters, RemoveSignatoryRequestParameters, RevokePermissionRequestParameters, SetAccountDetailRequestParameters, SetAccountQuorumRequestParameters, SubtractAssetQuantityRequestParameters, TransferAssetRequestParameters
     *
     * @return The actual instance (AddAssetQuantityRequestParameters, AddPeerRequestParameters, AddSignatoryRequestParameters, AppendRoleRequestParameters, CallEngineRequestParameters, CompareAndSetAccountDetailRequestParameters, CreateAccountRequestParameters, CreateAssetRequestParameters, CreateDomainRequestParameters, CreateRoleRequestParameters, DetachRoleRequestParameters, GetAccountAssetTransactionsRequestParameters, GetAccountAssetsRequestParameters, GetAccountDetailRequestParameters, GetAccountRequestParameters, GetAccountTransactionsRequestParameters, GetAssetInfoRequestParameters, GetBlockRequestParameters, GetEngineReceiptsRequestParameters, GetPendingTransactionsRequestParameters, GetRolePermissionsRequestParameters, GetSignatoriesRequestParameters, GetTransactionsRequestParameters, GrantPermissionRequestParameters, List<Object>, RemovePeerRequestParameters, RemoveSignatoryRequestParameters, RevokePermissionRequestParameters, SetAccountDetailRequestParameters, SetAccountQuorumRequestParameters, SubtractAssetQuantityRequestParameters, TransferAssetRequestParameters)
     */
    @Override
    public Object getActualInstance() {
        return super.getActualInstance();
    }

    /**
     * Get the actual instance of `AddAssetQuantityRequestParameters`. If the actual instance is not `AddAssetQuantityRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `AddAssetQuantityRequestParameters`
     * @throws ClassCastException if the instance is not `AddAssetQuantityRequestParameters`
     */
    public AddAssetQuantityRequestParameters getAddAssetQuantityRequestParameters() throws ClassCastException {
        return (AddAssetQuantityRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `AddPeerRequestParameters`. If the actual instance is not `AddPeerRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `AddPeerRequestParameters`
     * @throws ClassCastException if the instance is not `AddPeerRequestParameters`
     */
    public AddPeerRequestParameters getAddPeerRequestParameters() throws ClassCastException {
        return (AddPeerRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `AddSignatoryRequestParameters`. If the actual instance is not `AddSignatoryRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `AddSignatoryRequestParameters`
     * @throws ClassCastException if the instance is not `AddSignatoryRequestParameters`
     */
    public AddSignatoryRequestParameters getAddSignatoryRequestParameters() throws ClassCastException {
        return (AddSignatoryRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `AppendRoleRequestParameters`. If the actual instance is not `AppendRoleRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `AppendRoleRequestParameters`
     * @throws ClassCastException if the instance is not `AppendRoleRequestParameters`
     */
    public AppendRoleRequestParameters getAppendRoleRequestParameters() throws ClassCastException {
        return (AppendRoleRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `CallEngineRequestParameters`. If the actual instance is not `CallEngineRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `CallEngineRequestParameters`
     * @throws ClassCastException if the instance is not `CallEngineRequestParameters`
     */
    public CallEngineRequestParameters getCallEngineRequestParameters() throws ClassCastException {
        return (CallEngineRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `CompareAndSetAccountDetailRequestParameters`. If the actual instance is not `CompareAndSetAccountDetailRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `CompareAndSetAccountDetailRequestParameters`
     * @throws ClassCastException if the instance is not `CompareAndSetAccountDetailRequestParameters`
     */
    public CompareAndSetAccountDetailRequestParameters getCompareAndSetAccountDetailRequestParameters() throws ClassCastException {
        return (CompareAndSetAccountDetailRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `CreateAccountRequestParameters`. If the actual instance is not `CreateAccountRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `CreateAccountRequestParameters`
     * @throws ClassCastException if the instance is not `CreateAccountRequestParameters`
     */
    public CreateAccountRequestParameters getCreateAccountRequestParameters() throws ClassCastException {
        return (CreateAccountRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `CreateAssetRequestParameters`. If the actual instance is not `CreateAssetRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `CreateAssetRequestParameters`
     * @throws ClassCastException if the instance is not `CreateAssetRequestParameters`
     */
    public CreateAssetRequestParameters getCreateAssetRequestParameters() throws ClassCastException {
        return (CreateAssetRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `CreateDomainRequestParameters`. If the actual instance is not `CreateDomainRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `CreateDomainRequestParameters`
     * @throws ClassCastException if the instance is not `CreateDomainRequestParameters`
     */
    public CreateDomainRequestParameters getCreateDomainRequestParameters() throws ClassCastException {
        return (CreateDomainRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `CreateRoleRequestParameters`. If the actual instance is not `CreateRoleRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `CreateRoleRequestParameters`
     * @throws ClassCastException if the instance is not `CreateRoleRequestParameters`
     */
    public CreateRoleRequestParameters getCreateRoleRequestParameters() throws ClassCastException {
        return (CreateRoleRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `DetachRoleRequestParameters`. If the actual instance is not `DetachRoleRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `DetachRoleRequestParameters`
     * @throws ClassCastException if the instance is not `DetachRoleRequestParameters`
     */
    public DetachRoleRequestParameters getDetachRoleRequestParameters() throws ClassCastException {
        return (DetachRoleRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetAccountAssetTransactionsRequestParameters`. If the actual instance is not `GetAccountAssetTransactionsRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetAccountAssetTransactionsRequestParameters`
     * @throws ClassCastException if the instance is not `GetAccountAssetTransactionsRequestParameters`
     */
    public GetAccountAssetTransactionsRequestParameters getGetAccountAssetTransactionsRequestParameters() throws ClassCastException {
        return (GetAccountAssetTransactionsRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetAccountAssetsRequestParameters`. If the actual instance is not `GetAccountAssetsRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetAccountAssetsRequestParameters`
     * @throws ClassCastException if the instance is not `GetAccountAssetsRequestParameters`
     */
    public GetAccountAssetsRequestParameters getGetAccountAssetsRequestParameters() throws ClassCastException {
        return (GetAccountAssetsRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetAccountDetailRequestParameters`. If the actual instance is not `GetAccountDetailRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetAccountDetailRequestParameters`
     * @throws ClassCastException if the instance is not `GetAccountDetailRequestParameters`
     */
    public GetAccountDetailRequestParameters getGetAccountDetailRequestParameters() throws ClassCastException {
        return (GetAccountDetailRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetAccountRequestParameters`. If the actual instance is not `GetAccountRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetAccountRequestParameters`
     * @throws ClassCastException if the instance is not `GetAccountRequestParameters`
     */
    public GetAccountRequestParameters getGetAccountRequestParameters() throws ClassCastException {
        return (GetAccountRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetAccountTransactionsRequestParameters`. If the actual instance is not `GetAccountTransactionsRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetAccountTransactionsRequestParameters`
     * @throws ClassCastException if the instance is not `GetAccountTransactionsRequestParameters`
     */
    public GetAccountTransactionsRequestParameters getGetAccountTransactionsRequestParameters() throws ClassCastException {
        return (GetAccountTransactionsRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetAssetInfoRequestParameters`. If the actual instance is not `GetAssetInfoRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetAssetInfoRequestParameters`
     * @throws ClassCastException if the instance is not `GetAssetInfoRequestParameters`
     */
    public GetAssetInfoRequestParameters getGetAssetInfoRequestParameters() throws ClassCastException {
        return (GetAssetInfoRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetBlockRequestParameters`. If the actual instance is not `GetBlockRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetBlockRequestParameters`
     * @throws ClassCastException if the instance is not `GetBlockRequestParameters`
     */
    public GetBlockRequestParameters getGetBlockRequestParameters() throws ClassCastException {
        return (GetBlockRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetEngineReceiptsRequestParameters`. If the actual instance is not `GetEngineReceiptsRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetEngineReceiptsRequestParameters`
     * @throws ClassCastException if the instance is not `GetEngineReceiptsRequestParameters`
     */
    public GetEngineReceiptsRequestParameters getGetEngineReceiptsRequestParameters() throws ClassCastException {
        return (GetEngineReceiptsRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetPendingTransactionsRequestParameters`. If the actual instance is not `GetPendingTransactionsRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetPendingTransactionsRequestParameters`
     * @throws ClassCastException if the instance is not `GetPendingTransactionsRequestParameters`
     */
    public GetPendingTransactionsRequestParameters getGetPendingTransactionsRequestParameters() throws ClassCastException {
        return (GetPendingTransactionsRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetRolePermissionsRequestParameters`. If the actual instance is not `GetRolePermissionsRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetRolePermissionsRequestParameters`
     * @throws ClassCastException if the instance is not `GetRolePermissionsRequestParameters`
     */
    public GetRolePermissionsRequestParameters getGetRolePermissionsRequestParameters() throws ClassCastException {
        return (GetRolePermissionsRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetSignatoriesRequestParameters`. If the actual instance is not `GetSignatoriesRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetSignatoriesRequestParameters`
     * @throws ClassCastException if the instance is not `GetSignatoriesRequestParameters`
     */
    public GetSignatoriesRequestParameters getGetSignatoriesRequestParameters() throws ClassCastException {
        return (GetSignatoriesRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GetTransactionsRequestParameters`. If the actual instance is not `GetTransactionsRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GetTransactionsRequestParameters`
     * @throws ClassCastException if the instance is not `GetTransactionsRequestParameters`
     */
    public GetTransactionsRequestParameters getGetTransactionsRequestParameters() throws ClassCastException {
        return (GetTransactionsRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `GrantPermissionRequestParameters`. If the actual instance is not `GrantPermissionRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `GrantPermissionRequestParameters`
     * @throws ClassCastException if the instance is not `GrantPermissionRequestParameters`
     */
    public GrantPermissionRequestParameters getGrantPermissionRequestParameters() throws ClassCastException {
        return (GrantPermissionRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `List<Object>`. If the actual instance is not `List<Object>`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `List<Object>`
     * @throws ClassCastException if the instance is not `List<Object>`
     */
    public List<Object> getList<Object>() throws ClassCastException {
        return (List<Object>)super.getActualInstance();
    }

    /**
     * Get the actual instance of `RemovePeerRequestParameters`. If the actual instance is not `RemovePeerRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `RemovePeerRequestParameters`
     * @throws ClassCastException if the instance is not `RemovePeerRequestParameters`
     */
    public RemovePeerRequestParameters getRemovePeerRequestParameters() throws ClassCastException {
        return (RemovePeerRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `RemoveSignatoryRequestParameters`. If the actual instance is not `RemoveSignatoryRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `RemoveSignatoryRequestParameters`
     * @throws ClassCastException if the instance is not `RemoveSignatoryRequestParameters`
     */
    public RemoveSignatoryRequestParameters getRemoveSignatoryRequestParameters() throws ClassCastException {
        return (RemoveSignatoryRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `RevokePermissionRequestParameters`. If the actual instance is not `RevokePermissionRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `RevokePermissionRequestParameters`
     * @throws ClassCastException if the instance is not `RevokePermissionRequestParameters`
     */
    public RevokePermissionRequestParameters getRevokePermissionRequestParameters() throws ClassCastException {
        return (RevokePermissionRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `SetAccountDetailRequestParameters`. If the actual instance is not `SetAccountDetailRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `SetAccountDetailRequestParameters`
     * @throws ClassCastException if the instance is not `SetAccountDetailRequestParameters`
     */
    public SetAccountDetailRequestParameters getSetAccountDetailRequestParameters() throws ClassCastException {
        return (SetAccountDetailRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `SetAccountQuorumRequestParameters`. If the actual instance is not `SetAccountQuorumRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `SetAccountQuorumRequestParameters`
     * @throws ClassCastException if the instance is not `SetAccountQuorumRequestParameters`
     */
    public SetAccountQuorumRequestParameters getSetAccountQuorumRequestParameters() throws ClassCastException {
        return (SetAccountQuorumRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `SubtractAssetQuantityRequestParameters`. If the actual instance is not `SubtractAssetQuantityRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `SubtractAssetQuantityRequestParameters`
     * @throws ClassCastException if the instance is not `SubtractAssetQuantityRequestParameters`
     */
    public SubtractAssetQuantityRequestParameters getSubtractAssetQuantityRequestParameters() throws ClassCastException {
        return (SubtractAssetQuantityRequestParameters)super.getActualInstance();
    }

    /**
     * Get the actual instance of `TransferAssetRequestParameters`. If the actual instance is not `TransferAssetRequestParameters`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `TransferAssetRequestParameters`
     * @throws ClassCastException if the instance is not `TransferAssetRequestParameters`
     */
    public TransferAssetRequestParameters getTransferAssetRequestParameters() throws ClassCastException {
        return (TransferAssetRequestParameters)super.getActualInstance();
    }


 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RunTransactionRequestV1Params
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
    // validate oneOf schemas one by one
    int validCount = 0;
    ArrayList<String> errorMessages = new ArrayList<>();
    // validate the json string with AddAssetQuantityRequestParameters
    try {
      AddAssetQuantityRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for AddAssetQuantityRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with AddPeerRequestParameters
    try {
      AddPeerRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for AddPeerRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with AddSignatoryRequestParameters
    try {
      AddSignatoryRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for AddSignatoryRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with AppendRoleRequestParameters
    try {
      AppendRoleRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for AppendRoleRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with CallEngineRequestParameters
    try {
      CallEngineRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for CallEngineRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with CompareAndSetAccountDetailRequestParameters
    try {
      CompareAndSetAccountDetailRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for CompareAndSetAccountDetailRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with CreateAccountRequestParameters
    try {
      CreateAccountRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for CreateAccountRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with CreateAssetRequestParameters
    try {
      CreateAssetRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for CreateAssetRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with CreateDomainRequestParameters
    try {
      CreateDomainRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for CreateDomainRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with CreateRoleRequestParameters
    try {
      CreateRoleRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for CreateRoleRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with DetachRoleRequestParameters
    try {
      DetachRoleRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for DetachRoleRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetAccountAssetTransactionsRequestParameters
    try {
      GetAccountAssetTransactionsRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetAccountAssetTransactionsRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetAccountAssetsRequestParameters
    try {
      GetAccountAssetsRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetAccountAssetsRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetAccountDetailRequestParameters
    try {
      GetAccountDetailRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetAccountDetailRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetAccountRequestParameters
    try {
      GetAccountRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetAccountRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetAccountTransactionsRequestParameters
    try {
      GetAccountTransactionsRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetAccountTransactionsRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetAssetInfoRequestParameters
    try {
      GetAssetInfoRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetAssetInfoRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetBlockRequestParameters
    try {
      GetBlockRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetBlockRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetEngineReceiptsRequestParameters
    try {
      GetEngineReceiptsRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetEngineReceiptsRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetPendingTransactionsRequestParameters
    try {
      GetPendingTransactionsRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetPendingTransactionsRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetRolePermissionsRequestParameters
    try {
      GetRolePermissionsRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetRolePermissionsRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetSignatoriesRequestParameters
    try {
      GetSignatoriesRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetSignatoriesRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GetTransactionsRequestParameters
    try {
      GetTransactionsRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GetTransactionsRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with GrantPermissionRequestParameters
    try {
      GrantPermissionRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for GrantPermissionRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with List<Object>
    try {
      List<Object>.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for List<Object> failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with RemovePeerRequestParameters
    try {
      RemovePeerRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for RemovePeerRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with RemoveSignatoryRequestParameters
    try {
      RemoveSignatoryRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for RemoveSignatoryRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with RevokePermissionRequestParameters
    try {
      RevokePermissionRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for RevokePermissionRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with SetAccountDetailRequestParameters
    try {
      SetAccountDetailRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for SetAccountDetailRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with SetAccountQuorumRequestParameters
    try {
      SetAccountQuorumRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for SetAccountQuorumRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with SubtractAssetQuantityRequestParameters
    try {
      SubtractAssetQuantityRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for SubtractAssetQuantityRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    // validate the json string with TransferAssetRequestParameters
    try {
      TransferAssetRequestParameters.validateJsonObject(jsonObj);
      validCount++;
    } catch (Exception e) {
      errorMessages.add(String.format("Deserialization for TransferAssetRequestParameters failed with `%s`.", e.getMessage()));
      // continue to the next one
    }
    if (validCount != 1) {
      throw new IOException(String.format("The JSON string is invalid for RunTransactionRequestV1Params with oneOf schemas: AddAssetQuantityRequestParameters, AddPeerRequestParameters, AddSignatoryRequestParameters, AppendRoleRequestParameters, CallEngineRequestParameters, CompareAndSetAccountDetailRequestParameters, CreateAccountRequestParameters, CreateAssetRequestParameters, CreateDomainRequestParameters, CreateRoleRequestParameters, DetachRoleRequestParameters, GetAccountAssetTransactionsRequestParameters, GetAccountAssetsRequestParameters, GetAccountDetailRequestParameters, GetAccountRequestParameters, GetAccountTransactionsRequestParameters, GetAssetInfoRequestParameters, GetBlockRequestParameters, GetEngineReceiptsRequestParameters, GetPendingTransactionsRequestParameters, GetRolePermissionsRequestParameters, GetSignatoriesRequestParameters, GetTransactionsRequestParameters, GrantPermissionRequestParameters, List<Object>, RemovePeerRequestParameters, RemoveSignatoryRequestParameters, RevokePermissionRequestParameters, SetAccountDetailRequestParameters, SetAccountQuorumRequestParameters, SubtractAssetQuantityRequestParameters, TransferAssetRequestParameters. %d class(es) match the result, expected 1. Detailed failure message for oneOf schemas: %s. JSON: %s", validCount, errorMessages, jsonObj.toString()));
    }
  }

 /**
  * Create an instance of RunTransactionRequestV1Params given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RunTransactionRequestV1Params
  * @throws IOException if the JSON string is invalid with respect to RunTransactionRequestV1Params
  */
  public static RunTransactionRequestV1Params fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RunTransactionRequestV1Params.class);
  }

 /**
  * Convert an instance of RunTransactionRequestV1Params to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

