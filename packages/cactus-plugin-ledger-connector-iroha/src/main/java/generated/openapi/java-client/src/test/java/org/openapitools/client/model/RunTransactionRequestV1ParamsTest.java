/*
 * Hyperledger Cactus Plugin - Connector Iroha
 * Can perform basic tasks on a Iroha ledger
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AddAssetQuantityRequestParameters;
import org.openapitools.client.model.AddPeerRequestParameters;
import org.openapitools.client.model.AddSignatoryRequestParameters;
import org.openapitools.client.model.AppendRoleRequestParameters;
import org.openapitools.client.model.CallEngineRequestParameters;
import org.openapitools.client.model.CompareAndSetAccountDetailRequestParameters;
import org.openapitools.client.model.CreateAccountRequestParameters;
import org.openapitools.client.model.CreateAssetRequestParameters;
import org.openapitools.client.model.CreateDomainRequestParameters;
import org.openapitools.client.model.CreateRoleRequestParameters;
import org.openapitools.client.model.DetachRoleRequestParameters;
import org.openapitools.client.model.GetAccountAssetTransactionsRequestParameters;
import org.openapitools.client.model.GetAccountAssetsRequestParameters;
import org.openapitools.client.model.GetAccountDetailRequestParameters;
import org.openapitools.client.model.GetAccountRequestParameters;
import org.openapitools.client.model.GetAccountTransactionsRequestParameters;
import org.openapitools.client.model.GetAssetInfoRequestParameters;
import org.openapitools.client.model.GetBlockRequestParameters;
import org.openapitools.client.model.GetEngineReceiptsRequestParameters;
import org.openapitools.client.model.GetPendingTransactionsRequestParameters;
import org.openapitools.client.model.GetRolePermissionsRequestParameters;
import org.openapitools.client.model.GetSignatoriesRequestParameters;
import org.openapitools.client.model.GetTransactionsRequestParameters;
import org.openapitools.client.model.GrantPermissionRequestParameters;
import org.openapitools.client.model.RemovePeerRequestParameters;
import org.openapitools.client.model.RemoveSignatoryRequestParameters;
import org.openapitools.client.model.RevokePermissionRequestParameters;
import org.openapitools.client.model.SetAccountDetailRequestParameters;
import org.openapitools.client.model.SetAccountQuorumRequestParameters;
import org.openapitools.client.model.SubtractAssetQuantityRequestParameters;
import org.openapitools.client.model.TransferAssetRequestParameters;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for RunTransactionRequestV1Params
 */
public class RunTransactionRequestV1ParamsTest {
    private final RunTransactionRequestV1Params model = new RunTransactionRequestV1Params();

    /**
     * Model tests for RunTransactionRequestV1Params
     */
    @Test
    public void testRunTransactionRequestV1Params() {
        // TODO: test RunTransactionRequestV1Params
    }

    /**
     * Test the property 'assetId'
     */
    @Test
    public void assetIdTest() {
        // TODO: test assetId
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'peerKey'
     */
    @Test
    public void peerKeyTest() {
        // TODO: test peerKey
    }

    /**
     * Test the property 'tlsCertificate'
     */
    @Test
    public void tlsCertificateTest() {
        // TODO: test tlsCertificate
    }

    /**
     * Test the property 'syncingPeer'
     */
    @Test
    public void syncingPeerTest() {
        // TODO: test syncingPeer
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'publicKey'
     */
    @Test
    public void publicKeyTest() {
        // TODO: test publicKey
    }

    /**
     * Test the property 'roleName'
     */
    @Test
    public void roleNameTest() {
        // TODO: test roleName
    }

    /**
     * Test the property 'caller'
     */
    @Test
    public void callerTest() {
        // TODO: test caller
    }

    /**
     * Test the property 'callee'
     */
    @Test
    public void calleeTest() {
        // TODO: test callee
    }

    /**
     * Test the property 'input'
     */
    @Test
    public void inputTest() {
        // TODO: test input
    }

    /**
     * Test the property 'accountName'
     */
    @Test
    public void accountNameTest() {
        // TODO: test accountName
    }

    /**
     * Test the property 'domainId'
     */
    @Test
    public void domainIdTest() {
        // TODO: test domainId
    }

    /**
     * Test the property 'assetName'
     */
    @Test
    public void assetNameTest() {
        // TODO: test assetName
    }

    /**
     * Test the property 'precision'
     */
    @Test
    public void precisionTest() {
        // TODO: test precision
    }

    /**
     * Test the property 'defaultRole'
     */
    @Test
    public void defaultRoleTest() {
        // TODO: test defaultRole
    }

    /**
     * Test the property 'permissionsList'
     */
    @Test
    public void permissionsListTest() {
        // TODO: test permissionsList
    }

    /**
     * Test the property 'permission'
     */
    @Test
    public void permissionTest() {
        // TODO: test permission
    }

    /**
     * Test the property 'key'
     */
    @Test
    public void keyTest() {
        // TODO: test key
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'quorum'
     */
    @Test
    public void quorumTest() {
        // TODO: test quorum
    }

    /**
     * Test the property 'srcAccountId'
     */
    @Test
    public void srcAccountIdTest() {
        // TODO: test srcAccountId
    }

    /**
     * Test the property 'destAccountId'
     */
    @Test
    public void destAccountIdTest() {
        // TODO: test destAccountId
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'oldValue'
     */
    @Test
    public void oldValueTest() {
        // TODO: test oldValue
    }

    /**
     * Test the property 'checkEmpty'
     */
    @Test
    public void checkEmptyTest() {
        // TODO: test checkEmpty
    }

    /**
     * Test the property 'height'
     */
    @Test
    public void heightTest() {
        // TODO: test height
    }

    /**
     * Test the property 'txHashesList'
     */
    @Test
    public void txHashesListTest() {
        // TODO: test txHashesList
    }

    /**
     * Test the property 'pageSize'
     */
    @Test
    public void pageSizeTest() {
        // TODO: test pageSize
    }

    /**
     * Test the property 'firstTxHash'
     */
    @Test
    public void firstTxHashTest() {
        // TODO: test firstTxHash
    }

    /**
     * Test the property 'firstTxTime'
     */
    @Test
    public void firstTxTimeTest() {
        // TODO: test firstTxTime
    }

    /**
     * Test the property 'lastTxTime'
     */
    @Test
    public void lastTxTimeTest() {
        // TODO: test lastTxTime
    }

    /**
     * Test the property 'firstTxHeight'
     */
    @Test
    public void firstTxHeightTest() {
        // TODO: test firstTxHeight
    }

    /**
     * Test the property 'lastTxHeight'
     */
    @Test
    public void lastTxHeightTest() {
        // TODO: test lastTxHeight
    }

    /**
     * Test the property 'firstAssetId'
     */
    @Test
    public void firstAssetIdTest() {
        // TODO: test firstAssetId
    }

    /**
     * Test the property 'writer'
     */
    @Test
    public void writerTest() {
        // TODO: test writer
    }

    /**
     * Test the property 'paginationKey'
     */
    @Test
    public void paginationKeyTest() {
        // TODO: test paginationKey
    }

    /**
     * Test the property 'paginationWriter'
     */
    @Test
    public void paginationWriterTest() {
        // TODO: test paginationWriter
    }

    /**
     * Test the property 'roleId'
     */
    @Test
    public void roleIdTest() {
        // TODO: test roleId
    }

    /**
     * Test the property 'txHash'
     */
    @Test
    public void txHashTest() {
        // TODO: test txHash
    }

}
