/*
 * Hyperledger Cactus Plugin - Connector Iroha
 * Can perform basic tasks on a Iroha ledger
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets IrohaQuery
 */
@JsonAdapter(IrohaQuery.Adapter.class)
public enum IrohaQuery {
  
  /**
   * To get the state of an account
   */
  GetAccount("getAccount"),
  
  /**
   * To get details of the account.
   */
  GetAccountDetail("getAccountDetail"),
  
  /**
   * To get information on the given asset (as for now - its precision).
   */
  GetAssetInfo("getAssetInfo"),
  
  /**
   * To get the state of all assets in an account (a balance).
   */
  GetAccountAssets("getAccountAssets"),
  
  /**
   * To retrieve information about transactions, based on their hashes.
   */
  GetTransactions("getTransactions"),
  
  /**
   * To retrieve a list of pending (not fully signed) multisignature transactions or batches of transactions issued by account of query creator.
   */
  GetPendingTransactions("getPendingTransactions"),
  
  /**
   * To retrieve a list of transactions per account.
   */
  GetAccountTransactions("getAccountTransactions"),
  
  /**
   * To retrieve all transactions associated with given account and asset.
   */
  GetAccountAssetTransactions("getAccountAssetTransactions"),
  
  /**
   * To get existing roles in the system.
   */
  GetRoles("getRoles"),
  
  /**
   * To get signatories, which act as an identity of the account.
   */
  GetSignatories("getSignatories"),
  
  /**
   * To get available permissions per role in the system.
   */
  GetRolePermissions("getRolePermissions"),
  
  /**
   * To get a specific block, using its height as an identifier.
   */
  GetBlock("getBlock"),
  
  /**
   * To retrieve a receipt of a CallEngine command. Allows to access the event log created during computations inside the EVM.
   */
  GetEngineReceipts("getEngineReceipts"),
  
  /**
   * To get new blocks as soon as they are committed, a user can invoke FetchCommits RPC call to Iroha network.
   */
  FetchCommits("fetchCommits"),
  
  /**
   * A query that returns a list of peers in Iroha network.
   */
  GetPeers("getPeers");

  private String value;

  IrohaQuery(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static IrohaQuery fromValue(String value) {
    for (IrohaQuery b : IrohaQuery.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<IrohaQuery> {
    @Override
    public void write(final JsonWriter jsonWriter, final IrohaQuery enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public IrohaQuery read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return IrohaQuery.fromValue(value);
    }
  }
}

