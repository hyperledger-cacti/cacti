/*
Hyperledger Cactus Plugin - Connector Iroha

Can perform basic tasks on a Iroha ledger

API version: v2.0.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-iroha

import (
	"encoding/json"
)

// checks if the CreateRoleRequestParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRoleRequestParameters{}

// CreateRoleRequestParameters The list of arguments to pass in to the transaction request to Create Role.
type CreateRoleRequestParameters struct {
	RoleName string `json:"roleName"`
	PermissionsList []float32 `json:"permissionsList"`
}

// NewCreateRoleRequestParameters instantiates a new CreateRoleRequestParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRoleRequestParameters(roleName string, permissionsList []float32) *CreateRoleRequestParameters {
	this := CreateRoleRequestParameters{}
	this.RoleName = roleName
	this.PermissionsList = permissionsList
	return &this
}

// NewCreateRoleRequestParametersWithDefaults instantiates a new CreateRoleRequestParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRoleRequestParametersWithDefaults() *CreateRoleRequestParameters {
	this := CreateRoleRequestParameters{}
	return &this
}

// GetRoleName returns the RoleName field value
func (o *CreateRoleRequestParameters) GetRoleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value
// and a boolean to check if the value has been set.
func (o *CreateRoleRequestParameters) GetRoleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleName, true
}

// SetRoleName sets field value
func (o *CreateRoleRequestParameters) SetRoleName(v string) {
	o.RoleName = v
}

// GetPermissionsList returns the PermissionsList field value
func (o *CreateRoleRequestParameters) GetPermissionsList() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.PermissionsList
}

// GetPermissionsListOk returns a tuple with the PermissionsList field value
// and a boolean to check if the value has been set.
func (o *CreateRoleRequestParameters) GetPermissionsListOk() ([]float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PermissionsList, true
}

// SetPermissionsList sets field value
func (o *CreateRoleRequestParameters) SetPermissionsList(v []float32) {
	o.PermissionsList = v
}

func (o CreateRoleRequestParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRoleRequestParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["roleName"] = o.RoleName
	toSerialize["permissionsList"] = o.PermissionsList
	return toSerialize, nil
}

type NullableCreateRoleRequestParameters struct {
	value *CreateRoleRequestParameters
	isSet bool
}

func (v NullableCreateRoleRequestParameters) Get() *CreateRoleRequestParameters {
	return v.value
}

func (v *NullableCreateRoleRequestParameters) Set(val *CreateRoleRequestParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRoleRequestParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRoleRequestParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRoleRequestParameters(val *CreateRoleRequestParameters) *NullableCreateRoleRequestParameters {
	return &NullableCreateRoleRequestParameters{value: val, isSet: true}
}

func (v NullableCreateRoleRequestParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRoleRequestParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


