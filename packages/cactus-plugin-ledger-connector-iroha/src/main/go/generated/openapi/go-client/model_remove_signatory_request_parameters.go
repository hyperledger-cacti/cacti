/*
Hyperledger Cactus Plugin - Connector Iroha

Can perform basic tasks on a Iroha ledger

API version: v2.0.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-iroha

import (
	"encoding/json"
)

// checks if the RemoveSignatoryRequestParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveSignatoryRequestParameters{}

// RemoveSignatoryRequestParameters The list of arguments to pass in to the transaction request to Remove Signatory.
type RemoveSignatoryRequestParameters struct {
	AccountId string `json:"accountId"`
	PublicKey string `json:"publicKey"`
}

// NewRemoveSignatoryRequestParameters instantiates a new RemoveSignatoryRequestParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveSignatoryRequestParameters(accountId string, publicKey string) *RemoveSignatoryRequestParameters {
	this := RemoveSignatoryRequestParameters{}
	this.AccountId = accountId
	this.PublicKey = publicKey
	return &this
}

// NewRemoveSignatoryRequestParametersWithDefaults instantiates a new RemoveSignatoryRequestParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveSignatoryRequestParametersWithDefaults() *RemoveSignatoryRequestParameters {
	this := RemoveSignatoryRequestParameters{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *RemoveSignatoryRequestParameters) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *RemoveSignatoryRequestParameters) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *RemoveSignatoryRequestParameters) SetAccountId(v string) {
	o.AccountId = v
}

// GetPublicKey returns the PublicKey field value
func (o *RemoveSignatoryRequestParameters) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *RemoveSignatoryRequestParameters) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *RemoveSignatoryRequestParameters) SetPublicKey(v string) {
	o.PublicKey = v
}

func (o RemoveSignatoryRequestParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoveSignatoryRequestParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountId"] = o.AccountId
	toSerialize["publicKey"] = o.PublicKey
	return toSerialize, nil
}

type NullableRemoveSignatoryRequestParameters struct {
	value *RemoveSignatoryRequestParameters
	isSet bool
}

func (v NullableRemoveSignatoryRequestParameters) Get() *RemoveSignatoryRequestParameters {
	return v.value
}

func (v *NullableRemoveSignatoryRequestParameters) Set(val *RemoveSignatoryRequestParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveSignatoryRequestParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveSignatoryRequestParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveSignatoryRequestParameters(val *RemoveSignatoryRequestParameters) *NullableRemoveSignatoryRequestParameters {
	return &NullableRemoveSignatoryRequestParameters{value: val, isSet: true}
}

func (v NullableRemoveSignatoryRequestParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveSignatoryRequestParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


