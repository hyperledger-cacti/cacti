/*
Hyperledger Cactus Plugin - Connector Iroha

Can perform basic tasks on a Iroha ledger

API version: v2.0.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-iroha

import (
	"encoding/json"
)

// checks if the CreateAssetRequestParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetRequestParameters{}

// CreateAssetRequestParameters The list of arguments to pass in to the transaction request to Create Asset.
type CreateAssetRequestParameters struct {
	AssetName string `json:"assetName"`
	DomainId string `json:"domainId"`
	Precision int32 `json:"precision"`
}

// NewCreateAssetRequestParameters instantiates a new CreateAssetRequestParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetRequestParameters(assetName string, domainId string, precision int32) *CreateAssetRequestParameters {
	this := CreateAssetRequestParameters{}
	this.AssetName = assetName
	this.DomainId = domainId
	this.Precision = precision
	return &this
}

// NewCreateAssetRequestParametersWithDefaults instantiates a new CreateAssetRequestParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetRequestParametersWithDefaults() *CreateAssetRequestParameters {
	this := CreateAssetRequestParameters{}
	return &this
}

// GetAssetName returns the AssetName field value
func (o *CreateAssetRequestParameters) GetAssetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetName
}

// GetAssetNameOk returns a tuple with the AssetName field value
// and a boolean to check if the value has been set.
func (o *CreateAssetRequestParameters) GetAssetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetName, true
}

// SetAssetName sets field value
func (o *CreateAssetRequestParameters) SetAssetName(v string) {
	o.AssetName = v
}

// GetDomainId returns the DomainId field value
func (o *CreateAssetRequestParameters) GetDomainId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainId
}

// GetDomainIdOk returns a tuple with the DomainId field value
// and a boolean to check if the value has been set.
func (o *CreateAssetRequestParameters) GetDomainIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainId, true
}

// SetDomainId sets field value
func (o *CreateAssetRequestParameters) SetDomainId(v string) {
	o.DomainId = v
}

// GetPrecision returns the Precision field value
func (o *CreateAssetRequestParameters) GetPrecision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Precision
}

// GetPrecisionOk returns a tuple with the Precision field value
// and a boolean to check if the value has been set.
func (o *CreateAssetRequestParameters) GetPrecisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Precision, true
}

// SetPrecision sets field value
func (o *CreateAssetRequestParameters) SetPrecision(v int32) {
	o.Precision = v
}

func (o CreateAssetRequestParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetRequestParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["assetName"] = o.AssetName
	toSerialize["domainId"] = o.DomainId
	toSerialize["precision"] = o.Precision
	return toSerialize, nil
}

type NullableCreateAssetRequestParameters struct {
	value *CreateAssetRequestParameters
	isSet bool
}

func (v NullableCreateAssetRequestParameters) Get() *CreateAssetRequestParameters {
	return v.value
}

func (v *NullableCreateAssetRequestParameters) Set(val *CreateAssetRequestParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetRequestParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetRequestParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetRequestParameters(val *CreateAssetRequestParameters) *NullableCreateAssetRequestParameters {
	return &NullableCreateAssetRequestParameters{value: val, isSet: true}
}

func (v NullableCreateAssetRequestParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetRequestParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


