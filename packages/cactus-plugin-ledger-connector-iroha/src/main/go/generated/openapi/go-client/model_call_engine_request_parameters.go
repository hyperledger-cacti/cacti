/*
Hyperledger Cactus Plugin - Connector Iroha

Can perform basic tasks on a Iroha ledger

API version: v2.0.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-iroha

import (
	"encoding/json"
)

// checks if the CallEngineRequestParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallEngineRequestParameters{}

// CallEngineRequestParameters The list of arguments to pass in to the transaction request to Call Engine.
type CallEngineRequestParameters struct {
	Caller string `json:"caller"`
	Callee string `json:"callee"`
	Input string `json:"input"`
}

// NewCallEngineRequestParameters instantiates a new CallEngineRequestParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallEngineRequestParameters(caller string, callee string, input string) *CallEngineRequestParameters {
	this := CallEngineRequestParameters{}
	this.Caller = caller
	this.Callee = callee
	this.Input = input
	return &this
}

// NewCallEngineRequestParametersWithDefaults instantiates a new CallEngineRequestParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallEngineRequestParametersWithDefaults() *CallEngineRequestParameters {
	this := CallEngineRequestParameters{}
	return &this
}

// GetCaller returns the Caller field value
func (o *CallEngineRequestParameters) GetCaller() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Caller
}

// GetCallerOk returns a tuple with the Caller field value
// and a boolean to check if the value has been set.
func (o *CallEngineRequestParameters) GetCallerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Caller, true
}

// SetCaller sets field value
func (o *CallEngineRequestParameters) SetCaller(v string) {
	o.Caller = v
}

// GetCallee returns the Callee field value
func (o *CallEngineRequestParameters) GetCallee() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Callee
}

// GetCalleeOk returns a tuple with the Callee field value
// and a boolean to check if the value has been set.
func (o *CallEngineRequestParameters) GetCalleeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Callee, true
}

// SetCallee sets field value
func (o *CallEngineRequestParameters) SetCallee(v string) {
	o.Callee = v
}

// GetInput returns the Input field value
func (o *CallEngineRequestParameters) GetInput() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Input
}

// GetInputOk returns a tuple with the Input field value
// and a boolean to check if the value has been set.
func (o *CallEngineRequestParameters) GetInputOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Input, true
}

// SetInput sets field value
func (o *CallEngineRequestParameters) SetInput(v string) {
	o.Input = v
}

func (o CallEngineRequestParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallEngineRequestParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["caller"] = o.Caller
	toSerialize["callee"] = o.Callee
	toSerialize["input"] = o.Input
	return toSerialize, nil
}

type NullableCallEngineRequestParameters struct {
	value *CallEngineRequestParameters
	isSet bool
}

func (v NullableCallEngineRequestParameters) Get() *CallEngineRequestParameters {
	return v.value
}

func (v *NullableCallEngineRequestParameters) Set(val *CallEngineRequestParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCallEngineRequestParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCallEngineRequestParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallEngineRequestParameters(val *CallEngineRequestParameters) *NullableCallEngineRequestParameters {
	return &NullableCallEngineRequestParameters{value: val, isSet: true}
}

func (v NullableCallEngineRequestParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallEngineRequestParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


