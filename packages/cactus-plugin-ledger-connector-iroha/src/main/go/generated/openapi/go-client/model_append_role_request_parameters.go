/*
Hyperledger Cactus Plugin - Connector Iroha

Can perform basic tasks on a Iroha ledger

API version: v2.0.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-iroha

import (
	"encoding/json"
)

// checks if the AppendRoleRequestParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppendRoleRequestParameters{}

// AppendRoleRequestParameters The list of arguments to pass in to the transaction request to Append Role.
type AppendRoleRequestParameters struct {
	AccountId string `json:"accountId"`
	RoleName string `json:"roleName"`
}

// NewAppendRoleRequestParameters instantiates a new AppendRoleRequestParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppendRoleRequestParameters(accountId string, roleName string) *AppendRoleRequestParameters {
	this := AppendRoleRequestParameters{}
	this.AccountId = accountId
	this.RoleName = roleName
	return &this
}

// NewAppendRoleRequestParametersWithDefaults instantiates a new AppendRoleRequestParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppendRoleRequestParametersWithDefaults() *AppendRoleRequestParameters {
	this := AppendRoleRequestParameters{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *AppendRoleRequestParameters) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *AppendRoleRequestParameters) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *AppendRoleRequestParameters) SetAccountId(v string) {
	o.AccountId = v
}

// GetRoleName returns the RoleName field value
func (o *AppendRoleRequestParameters) GetRoleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value
// and a boolean to check if the value has been set.
func (o *AppendRoleRequestParameters) GetRoleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleName, true
}

// SetRoleName sets field value
func (o *AppendRoleRequestParameters) SetRoleName(v string) {
	o.RoleName = v
}

func (o AppendRoleRequestParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppendRoleRequestParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountId"] = o.AccountId
	toSerialize["roleName"] = o.RoleName
	return toSerialize, nil
}

type NullableAppendRoleRequestParameters struct {
	value *AppendRoleRequestParameters
	isSet bool
}

func (v NullableAppendRoleRequestParameters) Get() *AppendRoleRequestParameters {
	return v.value
}

func (v *NullableAppendRoleRequestParameters) Set(val *AppendRoleRequestParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableAppendRoleRequestParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableAppendRoleRequestParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppendRoleRequestParameters(val *AppendRoleRequestParameters) *NullableAppendRoleRequestParameters {
	return &NullableAppendRoleRequestParameters{value: val, isSet: true}
}

func (v NullableAppendRoleRequestParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppendRoleRequestParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


