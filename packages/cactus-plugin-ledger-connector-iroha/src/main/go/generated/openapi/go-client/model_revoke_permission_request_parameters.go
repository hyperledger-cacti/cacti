/*
Hyperledger Cactus Plugin - Connector Iroha

Can perform basic tasks on a Iroha ledger

API version: v2.0.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-iroha

import (
	"encoding/json"
)

// checks if the RevokePermissionRequestParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevokePermissionRequestParameters{}

// RevokePermissionRequestParameters The list of arguments to pass in to the transaction request to Revoke Permission.
type RevokePermissionRequestParameters struct {
	AccountId string `json:"accountId"`
	Permission float32 `json:"permission"`
}

// NewRevokePermissionRequestParameters instantiates a new RevokePermissionRequestParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevokePermissionRequestParameters(accountId string, permission float32) *RevokePermissionRequestParameters {
	this := RevokePermissionRequestParameters{}
	this.AccountId = accountId
	this.Permission = permission
	return &this
}

// NewRevokePermissionRequestParametersWithDefaults instantiates a new RevokePermissionRequestParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevokePermissionRequestParametersWithDefaults() *RevokePermissionRequestParameters {
	this := RevokePermissionRequestParameters{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *RevokePermissionRequestParameters) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *RevokePermissionRequestParameters) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *RevokePermissionRequestParameters) SetAccountId(v string) {
	o.AccountId = v
}

// GetPermission returns the Permission field value
func (o *RevokePermissionRequestParameters) GetPermission() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
func (o *RevokePermissionRequestParameters) GetPermissionOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permission, true
}

// SetPermission sets field value
func (o *RevokePermissionRequestParameters) SetPermission(v float32) {
	o.Permission = v
}

func (o RevokePermissionRequestParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevokePermissionRequestParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountId"] = o.AccountId
	toSerialize["permission"] = o.Permission
	return toSerialize, nil
}

type NullableRevokePermissionRequestParameters struct {
	value *RevokePermissionRequestParameters
	isSet bool
}

func (v NullableRevokePermissionRequestParameters) Get() *RevokePermissionRequestParameters {
	return v.value
}

func (v *NullableRevokePermissionRequestParameters) Set(val *RevokePermissionRequestParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableRevokePermissionRequestParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableRevokePermissionRequestParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevokePermissionRequestParameters(val *RevokePermissionRequestParameters) *NullableRevokePermissionRequestParameters {
	return &NullableRevokePermissionRequestParameters{value: val, isSet: true}
}

func (v NullableRevokePermissionRequestParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevokePermissionRequestParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


