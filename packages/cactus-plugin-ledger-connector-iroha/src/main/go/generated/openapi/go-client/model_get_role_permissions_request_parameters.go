/*
Hyperledger Cactus Plugin - Connector Iroha

Can perform basic tasks on a Iroha ledger

API version: v2.0.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-iroha

import (
	"encoding/json"
)

// checks if the GetRolePermissionsRequestParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRolePermissionsRequestParameters{}

// GetRolePermissionsRequestParameters The list of arguments to pass in to the transaction request to Get Role Permissions.
type GetRolePermissionsRequestParameters struct {
	RoleId string `json:"roleId"`
}

// NewGetRolePermissionsRequestParameters instantiates a new GetRolePermissionsRequestParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRolePermissionsRequestParameters(roleId string) *GetRolePermissionsRequestParameters {
	this := GetRolePermissionsRequestParameters{}
	this.RoleId = roleId
	return &this
}

// NewGetRolePermissionsRequestParametersWithDefaults instantiates a new GetRolePermissionsRequestParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRolePermissionsRequestParametersWithDefaults() *GetRolePermissionsRequestParameters {
	this := GetRolePermissionsRequestParameters{}
	return &this
}

// GetRoleId returns the RoleId field value
func (o *GetRolePermissionsRequestParameters) GetRoleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value
// and a boolean to check if the value has been set.
func (o *GetRolePermissionsRequestParameters) GetRoleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleId, true
}

// SetRoleId sets field value
func (o *GetRolePermissionsRequestParameters) SetRoleId(v string) {
	o.RoleId = v
}

func (o GetRolePermissionsRequestParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRolePermissionsRequestParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["roleId"] = o.RoleId
	return toSerialize, nil
}

type NullableGetRolePermissionsRequestParameters struct {
	value *GetRolePermissionsRequestParameters
	isSet bool
}

func (v NullableGetRolePermissionsRequestParameters) Get() *GetRolePermissionsRequestParameters {
	return v.value
}

func (v *NullableGetRolePermissionsRequestParameters) Set(val *GetRolePermissionsRequestParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRolePermissionsRequestParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRolePermissionsRequestParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRolePermissionsRequestParameters(val *GetRolePermissionsRequestParameters) *NullableGetRolePermissionsRequestParameters {
	return &NullableGetRolePermissionsRequestParameters{value: val, isSet: true}
}

func (v NullableGetRolePermissionsRequestParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRolePermissionsRequestParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


