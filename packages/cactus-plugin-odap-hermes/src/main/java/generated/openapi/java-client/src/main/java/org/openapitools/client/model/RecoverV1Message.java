/*
 * Hyperledger Cactus Plugin - Odap Hermes
 * Implementation for Odap and Hermes
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RecoverV1Message
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RecoverV1Message {
  public static final String SERIALIZED_NAME_SESSION_I_D = "sessionID";
  @SerializedName(SERIALIZED_NAME_SESSION_I_D)
  private String sessionID;

  public static final String SERIALIZED_NAME_ODAP_PHASE = "odapPhase";
  @SerializedName(SERIALIZED_NAME_ODAP_PHASE)
  private String odapPhase;

  public static final String SERIALIZED_NAME_SEQUENCE_NUMBER = "sequenceNumber";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_NUMBER)
  private BigDecimal sequenceNumber;

  public static final String SERIALIZED_NAME_LAST_LOG_ENTRY_TIMESTAMP = "lastLogEntryTimestamp";
  @SerializedName(SERIALIZED_NAME_LAST_LOG_ENTRY_TIMESTAMP)
  private String lastLogEntryTimestamp;

  public static final String SERIALIZED_NAME_IS_BACKUP = "isBackup";
  @SerializedName(SERIALIZED_NAME_IS_BACKUP)
  private Boolean isBackup;

  public static final String SERIALIZED_NAME_NEW_BASE_PATH = "newBasePath";
  @SerializedName(SERIALIZED_NAME_NEW_BASE_PATH)
  private String newBasePath;

  public static final String SERIALIZED_NAME_NEW_GATEWAY_PUB_KEY = "newGatewayPubKey";
  @SerializedName(SERIALIZED_NAME_NEW_GATEWAY_PUB_KEY)
  private String newGatewayPubKey;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  private String signature;

  public RecoverV1Message() {
  }

  public RecoverV1Message sessionID(String sessionID) {
    
    this.sessionID = sessionID;
    return this;
  }

   /**
   * Get sessionID
   * @return sessionID
  **/
  @javax.annotation.Nonnull
  public String getSessionID() {
    return sessionID;
  }


  public void setSessionID(String sessionID) {
    this.sessionID = sessionID;
  }


  public RecoverV1Message odapPhase(String odapPhase) {
    
    this.odapPhase = odapPhase;
    return this;
  }

   /**
   * Get odapPhase
   * @return odapPhase
  **/
  @javax.annotation.Nonnull
  public String getOdapPhase() {
    return odapPhase;
  }


  public void setOdapPhase(String odapPhase) {
    this.odapPhase = odapPhase;
  }


  public RecoverV1Message sequenceNumber(BigDecimal sequenceNumber) {
    
    this.sequenceNumber = sequenceNumber;
    return this;
  }

   /**
   * Get sequenceNumber
   * @return sequenceNumber
  **/
  @javax.annotation.Nonnull
  public BigDecimal getSequenceNumber() {
    return sequenceNumber;
  }


  public void setSequenceNumber(BigDecimal sequenceNumber) {
    this.sequenceNumber = sequenceNumber;
  }


  public RecoverV1Message lastLogEntryTimestamp(String lastLogEntryTimestamp) {
    
    this.lastLogEntryTimestamp = lastLogEntryTimestamp;
    return this;
  }

   /**
   * Get lastLogEntryTimestamp
   * @return lastLogEntryTimestamp
  **/
  @javax.annotation.Nonnull
  public String getLastLogEntryTimestamp() {
    return lastLogEntryTimestamp;
  }


  public void setLastLogEntryTimestamp(String lastLogEntryTimestamp) {
    this.lastLogEntryTimestamp = lastLogEntryTimestamp;
  }


  public RecoverV1Message isBackup(Boolean isBackup) {
    
    this.isBackup = isBackup;
    return this;
  }

   /**
   * Get isBackup
   * @return isBackup
  **/
  @javax.annotation.Nonnull
  public Boolean getIsBackup() {
    return isBackup;
  }


  public void setIsBackup(Boolean isBackup) {
    this.isBackup = isBackup;
  }


  public RecoverV1Message newBasePath(String newBasePath) {
    
    this.newBasePath = newBasePath;
    return this;
  }

   /**
   * Get newBasePath
   * @return newBasePath
  **/
  @javax.annotation.Nonnull
  public String getNewBasePath() {
    return newBasePath;
  }


  public void setNewBasePath(String newBasePath) {
    this.newBasePath = newBasePath;
  }


  public RecoverV1Message newGatewayPubKey(String newGatewayPubKey) {
    
    this.newGatewayPubKey = newGatewayPubKey;
    return this;
  }

   /**
   * Get newGatewayPubKey
   * @return newGatewayPubKey
  **/
  @javax.annotation.Nullable
  public String getNewGatewayPubKey() {
    return newGatewayPubKey;
  }


  public void setNewGatewayPubKey(String newGatewayPubKey) {
    this.newGatewayPubKey = newGatewayPubKey;
  }


  public RecoverV1Message signature(String signature) {
    
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @javax.annotation.Nonnull
  public String getSignature() {
    return signature;
  }


  public void setSignature(String signature) {
    this.signature = signature;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecoverV1Message recoverV1Message = (RecoverV1Message) o;
    return Objects.equals(this.sessionID, recoverV1Message.sessionID) &&
        Objects.equals(this.odapPhase, recoverV1Message.odapPhase) &&
        Objects.equals(this.sequenceNumber, recoverV1Message.sequenceNumber) &&
        Objects.equals(this.lastLogEntryTimestamp, recoverV1Message.lastLogEntryTimestamp) &&
        Objects.equals(this.isBackup, recoverV1Message.isBackup) &&
        Objects.equals(this.newBasePath, recoverV1Message.newBasePath) &&
        Objects.equals(this.newGatewayPubKey, recoverV1Message.newGatewayPubKey) &&
        Objects.equals(this.signature, recoverV1Message.signature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessionID, odapPhase, sequenceNumber, lastLogEntryTimestamp, isBackup, newBasePath, newGatewayPubKey, signature);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecoverV1Message {\n");
    sb.append("    sessionID: ").append(toIndentedString(sessionID)).append("\n");
    sb.append("    odapPhase: ").append(toIndentedString(odapPhase)).append("\n");
    sb.append("    sequenceNumber: ").append(toIndentedString(sequenceNumber)).append("\n");
    sb.append("    lastLogEntryTimestamp: ").append(toIndentedString(lastLogEntryTimestamp)).append("\n");
    sb.append("    isBackup: ").append(toIndentedString(isBackup)).append("\n");
    sb.append("    newBasePath: ").append(toIndentedString(newBasePath)).append("\n");
    sb.append("    newGatewayPubKey: ").append(toIndentedString(newGatewayPubKey)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("sessionID");
    openapiFields.add("odapPhase");
    openapiFields.add("sequenceNumber");
    openapiFields.add("lastLogEntryTimestamp");
    openapiFields.add("isBackup");
    openapiFields.add("newBasePath");
    openapiFields.add("newGatewayPubKey");
    openapiFields.add("signature");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("sessionID");
    openapiRequiredFields.add("odapPhase");
    openapiRequiredFields.add("sequenceNumber");
    openapiRequiredFields.add("lastLogEntryTimestamp");
    openapiRequiredFields.add("isBackup");
    openapiRequiredFields.add("newBasePath");
    openapiRequiredFields.add("signature");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RecoverV1Message
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RecoverV1Message.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RecoverV1Message is not found in the empty JSON string", RecoverV1Message.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!RecoverV1Message.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RecoverV1Message` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RecoverV1Message.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("sessionID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sessionID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sessionID").toString()));
      }
      if (!jsonObj.get("odapPhase").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `odapPhase` to be a primitive type in the JSON string but got `%s`", jsonObj.get("odapPhase").toString()));
      }
      if (!jsonObj.get("lastLogEntryTimestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastLogEntryTimestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastLogEntryTimestamp").toString()));
      }
      if (!jsonObj.get("newBasePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newBasePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newBasePath").toString()));
      }
      if ((jsonObj.get("newGatewayPubKey") != null && !jsonObj.get("newGatewayPubKey").isJsonNull()) && !jsonObj.get("newGatewayPubKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newGatewayPubKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newGatewayPubKey").toString()));
      }
      if (!jsonObj.get("signature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signature").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RecoverV1Message.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RecoverV1Message' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RecoverV1Message> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RecoverV1Message.class));

       return (TypeAdapter<T>) new TypeAdapter<RecoverV1Message>() {
           @Override
           public void write(JsonWriter out, RecoverV1Message value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RecoverV1Message read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RecoverV1Message given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RecoverV1Message
  * @throws IOException if the JSON string is invalid with respect to RecoverV1Message
  */
  public static RecoverV1Message fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RecoverV1Message.class);
  }

 /**
  * Convert an instance of RecoverV1Message to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

