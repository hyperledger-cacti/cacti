/*
 * Hyperledger Cactus Plugin - Odap Hermes
 * Implementation for Odap and Hermes
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AssetProfile;
import org.openapitools.client.model.PayloadProfile;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for SessionData
 */
public class SessionDataTest {
    private final SessionData model = new SessionData();

    /**
     * Model tests for SessionData
     */
    @Test
    public void testSessionData() {
        // TODO: test SessionData
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'step'
     */
    @Test
    public void stepTest() {
        // TODO: test step
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'lastSequenceNumber'
     */
    @Test
    public void lastSequenceNumberTest() {
        // TODO: test lastSequenceNumber
    }

    /**
     * Test the property 'loggingProfile'
     */
    @Test
    public void loggingProfileTest() {
        // TODO: test loggingProfile
    }

    /**
     * Test the property 'accessControlProfile'
     */
    @Test
    public void accessControlProfileTest() {
        // TODO: test accessControlProfile
    }

    /**
     * Test the property 'applicationProfile'
     */
    @Test
    public void applicationProfileTest() {
        // TODO: test applicationProfile
    }

    /**
     * Test the property 'payloadProfile'
     */
    @Test
    public void payloadProfileTest() {
        // TODO: test payloadProfile
    }

    /**
     * Test the property 'assetProfile'
     */
    @Test
    public void assetProfileTest() {
        // TODO: test assetProfile
    }

    /**
     * Test the property 'allowedSourceBackupGateways'
     */
    @Test
    public void allowedSourceBackupGatewaysTest() {
        // TODO: test allowedSourceBackupGateways
    }

    /**
     * Test the property 'allowedRecipientBackupGateways'
     */
    @Test
    public void allowedRecipientBackupGatewaysTest() {
        // TODO: test allowedRecipientBackupGateways
    }

    /**
     * Test the property 'sourceBasePath'
     */
    @Test
    public void sourceBasePathTest() {
        // TODO: test sourceBasePath
    }

    /**
     * Test the property 'recipientBasePath'
     */
    @Test
    public void recipientBasePathTest() {
        // TODO: test recipientBasePath
    }

    /**
     * Test the property 'originatorPubkey'
     */
    @Test
    public void originatorPubkeyTest() {
        // TODO: test originatorPubkey
    }

    /**
     * Test the property 'beneficiaryPubkey'
     */
    @Test
    public void beneficiaryPubkeyTest() {
        // TODO: test beneficiaryPubkey
    }

    /**
     * Test the property 'sourceGatewayPubkey'
     */
    @Test
    public void sourceGatewayPubkeyTest() {
        // TODO: test sourceGatewayPubkey
    }

    /**
     * Test the property 'sourceGatewayDltSystem'
     */
    @Test
    public void sourceGatewayDltSystemTest() {
        // TODO: test sourceGatewayDltSystem
    }

    /**
     * Test the property 'recipientGatewayPubkey'
     */
    @Test
    public void recipientGatewayPubkeyTest() {
        // TODO: test recipientGatewayPubkey
    }

    /**
     * Test the property 'recipientGatewayDltSystem'
     */
    @Test
    public void recipientGatewayDltSystemTest() {
        // TODO: test recipientGatewayDltSystem
    }

    /**
     * Test the property 'initializationRequestMessageHash'
     */
    @Test
    public void initializationRequestMessageHashTest() {
        // TODO: test initializationRequestMessageHash
    }

    /**
     * Test the property 'initializationResponseMessageHash'
     */
    @Test
    public void initializationResponseMessageHashTest() {
        // TODO: test initializationResponseMessageHash
    }

    /**
     * Test the property 'initializationRequestMessageRcvTimeStamp'
     */
    @Test
    public void initializationRequestMessageRcvTimeStampTest() {
        // TODO: test initializationRequestMessageRcvTimeStamp
    }

    /**
     * Test the property 'initializationRequestMessageProcessedTimeStamp'
     */
    @Test
    public void initializationRequestMessageProcessedTimeStampTest() {
        // TODO: test initializationRequestMessageProcessedTimeStamp
    }

    /**
     * Test the property 'clientSignatureInitializationRequestMessage'
     */
    @Test
    public void clientSignatureInitializationRequestMessageTest() {
        // TODO: test clientSignatureInitializationRequestMessage
    }

    /**
     * Test the property 'serverSignatureInitializationResponseMessage'
     */
    @Test
    public void serverSignatureInitializationResponseMessageTest() {
        // TODO: test serverSignatureInitializationResponseMessage
    }

    /**
     * Test the property 'transferCommenceMessageRequestHash'
     */
    @Test
    public void transferCommenceMessageRequestHashTest() {
        // TODO: test transferCommenceMessageRequestHash
    }

    /**
     * Test the property 'transferCommenceMessageResponseHash'
     */
    @Test
    public void transferCommenceMessageResponseHashTest() {
        // TODO: test transferCommenceMessageResponseHash
    }

    /**
     * Test the property 'clientSignatureTransferCommenceRequestMessage'
     */
    @Test
    public void clientSignatureTransferCommenceRequestMessageTest() {
        // TODO: test clientSignatureTransferCommenceRequestMessage
    }

    /**
     * Test the property 'serverSignatureTransferCommenceResponseMessage'
     */
    @Test
    public void serverSignatureTransferCommenceResponseMessageTest() {
        // TODO: test serverSignatureTransferCommenceResponseMessage
    }

    /**
     * Test the property 'lockEvidenceRequestMessageHash'
     */
    @Test
    public void lockEvidenceRequestMessageHashTest() {
        // TODO: test lockEvidenceRequestMessageHash
    }

    /**
     * Test the property 'lockEvidenceResponseMessageHash'
     */
    @Test
    public void lockEvidenceResponseMessageHashTest() {
        // TODO: test lockEvidenceResponseMessageHash
    }

    /**
     * Test the property 'clientSignatureLockEvidenceRequestMessage'
     */
    @Test
    public void clientSignatureLockEvidenceRequestMessageTest() {
        // TODO: test clientSignatureLockEvidenceRequestMessage
    }

    /**
     * Test the property 'serverSignatureLockEvidenceResponseMessage'
     */
    @Test
    public void serverSignatureLockEvidenceResponseMessageTest() {
        // TODO: test serverSignatureLockEvidenceResponseMessage
    }

    /**
     * Test the property 'lockEvidenceClaim'
     */
    @Test
    public void lockEvidenceClaimTest() {
        // TODO: test lockEvidenceClaim
    }

    /**
     * Test the property 'commitPrepareRequestMessageHash'
     */
    @Test
    public void commitPrepareRequestMessageHashTest() {
        // TODO: test commitPrepareRequestMessageHash
    }

    /**
     * Test the property 'commitPrepareResponseMessageHash'
     */
    @Test
    public void commitPrepareResponseMessageHashTest() {
        // TODO: test commitPrepareResponseMessageHash
    }

    /**
     * Test the property 'clientSignatureCommitPreparationRequestMessage'
     */
    @Test
    public void clientSignatureCommitPreparationRequestMessageTest() {
        // TODO: test clientSignatureCommitPreparationRequestMessage
    }

    /**
     * Test the property 'serverSignatureCommitPreparationResponseMessage'
     */
    @Test
    public void serverSignatureCommitPreparationResponseMessageTest() {
        // TODO: test serverSignatureCommitPreparationResponseMessage
    }

    /**
     * Test the property 'commitFinalRequestMessageHash'
     */
    @Test
    public void commitFinalRequestMessageHashTest() {
        // TODO: test commitFinalRequestMessageHash
    }

    /**
     * Test the property 'commitFinalResponseMessageHash'
     */
    @Test
    public void commitFinalResponseMessageHashTest() {
        // TODO: test commitFinalResponseMessageHash
    }

    /**
     * Test the property 'commitFinalClaim'
     */
    @Test
    public void commitFinalClaimTest() {
        // TODO: test commitFinalClaim
    }

    /**
     * Test the property 'commitFinalClaimFormat'
     */
    @Test
    public void commitFinalClaimFormatTest() {
        // TODO: test commitFinalClaimFormat
    }

    /**
     * Test the property 'commitAcknowledgementClaim'
     */
    @Test
    public void commitAcknowledgementClaimTest() {
        // TODO: test commitAcknowledgementClaim
    }

    /**
     * Test the property 'commitAcknowledgementClaimFormat'
     */
    @Test
    public void commitAcknowledgementClaimFormatTest() {
        // TODO: test commitAcknowledgementClaimFormat
    }

    /**
     * Test the property 'clientSignatureCommitFinalRequestMessage'
     */
    @Test
    public void clientSignatureCommitFinalRequestMessageTest() {
        // TODO: test clientSignatureCommitFinalRequestMessage
    }

    /**
     * Test the property 'serverSignatureCommitFinalResponseMessage'
     */
    @Test
    public void serverSignatureCommitFinalResponseMessageTest() {
        // TODO: test serverSignatureCommitFinalResponseMessage
    }

    /**
     * Test the property 'transferCompleteMessageHash'
     */
    @Test
    public void transferCompleteMessageHashTest() {
        // TODO: test transferCompleteMessageHash
    }

    /**
     * Test the property 'clientSignatureTransferCompleteMessage'
     */
    @Test
    public void clientSignatureTransferCompleteMessageTest() {
        // TODO: test clientSignatureTransferCompleteMessage
    }

    /**
     * Test the property 'maxRetries'
     */
    @Test
    public void maxRetriesTest() {
        // TODO: test maxRetries
    }

    /**
     * Test the property 'recipientLedgerAssetID'
     */
    @Test
    public void recipientLedgerAssetIDTest() {
        // TODO: test recipientLedgerAssetID
    }

    /**
     * Test the property 'sourceLedgerAssetID'
     */
    @Test
    public void sourceLedgerAssetIDTest() {
        // TODO: test sourceLedgerAssetID
    }

    /**
     * Test the property 'maxTimeout'
     */
    @Test
    public void maxTimeoutTest() {
        // TODO: test maxTimeout
    }

    /**
     * Test the property 'lastLogEntryTimestamp'
     */
    @Test
    public void lastLogEntryTimestampTest() {
        // TODO: test lastLogEntryTimestamp
    }

    /**
     * Test the property 'unlockAssetClaim'
     */
    @Test
    public void unlockAssetClaimTest() {
        // TODO: test unlockAssetClaim
    }

    /**
     * Test the property 'recreateAssetClaim'
     */
    @Test
    public void recreateAssetClaimTest() {
        // TODO: test recreateAssetClaim
    }

    /**
     * Test the property 'deleteAssetClaim'
     */
    @Test
    public void deleteAssetClaimTest() {
        // TODO: test deleteAssetClaim
    }

    /**
     * Test the property 'lastMessageReceivedTimestamp'
     */
    @Test
    public void lastMessageReceivedTimestampTest() {
        // TODO: test lastMessageReceivedTimestamp
    }

    /**
     * Test the property 'rollback'
     */
    @Test
    public void rollbackTest() {
        // TODO: test rollback
    }

    /**
     * Test the property 'rollbackMessageHash'
     */
    @Test
    public void rollbackMessageHashTest() {
        // TODO: test rollbackMessageHash
    }

    /**
     * Test the property 'rollbackProofs'
     */
    @Test
    public void rollbackProofsTest() {
        // TODO: test rollbackProofs
    }

    /**
     * Test the property 'rollbackActionsPerformed'
     */
    @Test
    public void rollbackActionsPerformedTest() {
        // TODO: test rollbackActionsPerformed
    }

}
