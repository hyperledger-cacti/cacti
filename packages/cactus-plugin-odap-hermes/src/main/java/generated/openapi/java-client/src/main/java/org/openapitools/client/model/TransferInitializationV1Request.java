/*
 * Hyperledger Cactus Plugin - Odap Hermes
 * Implementation for Odap and Hermes
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CredentialProfile;
import org.openapitools.client.model.History;
import org.openapitools.client.model.PayloadProfile;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TransferInitializationV1Request
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TransferInitializationV1Request {
  public static final String SERIALIZED_NAME_MESSAGE_TYPE = "messageType";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TYPE)
  private String messageType;

  public static final String SERIALIZED_NAME_SESSION_I_D = "sessionID";
  @SerializedName(SERIALIZED_NAME_SESSION_I_D)
  private String sessionID;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_DEVELOPER_U_R_N = "developerURN";
  @SerializedName(SERIALIZED_NAME_DEVELOPER_U_R_N)
  private String developerURN;

  public static final String SERIALIZED_NAME_CREDENTIAL_PROFILE = "credentialProfile";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL_PROFILE)
  private CredentialProfile credentialProfile;

  public static final String SERIALIZED_NAME_PAYLOAD_PROFILE = "payloadProfile";
  @SerializedName(SERIALIZED_NAME_PAYLOAD_PROFILE)
  private PayloadProfile payloadProfile;

  public static final String SERIALIZED_NAME_APPLICATION_PROFILE = "applicationProfile";
  @SerializedName(SERIALIZED_NAME_APPLICATION_PROFILE)
  private String applicationProfile;

  public static final String SERIALIZED_NAME_LOGGING_PROFILE = "loggingProfile";
  @SerializedName(SERIALIZED_NAME_LOGGING_PROFILE)
  private String loggingProfile;

  public static final String SERIALIZED_NAME_ACCESS_CONTROL_PROFILE = "accessControlProfile";
  @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL_PROFILE)
  private String accessControlProfile;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  private String signature;

  public static final String SERIALIZED_NAME_SOURCE_GATEWAY_PUBKEY = "sourceGatewayPubkey";
  @SerializedName(SERIALIZED_NAME_SOURCE_GATEWAY_PUBKEY)
  private String sourceGatewayPubkey;

  public static final String SERIALIZED_NAME_SOURCE_GATEWAY_DLT_SYSTEM = "sourceGatewayDltSystem";
  @SerializedName(SERIALIZED_NAME_SOURCE_GATEWAY_DLT_SYSTEM)
  private String sourceGatewayDltSystem;

  public static final String SERIALIZED_NAME_RECIPIENT_GATEWAY_PUBKEY = "recipientGatewayPubkey";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_GATEWAY_PUBKEY)
  private String recipientGatewayPubkey;

  public static final String SERIALIZED_NAME_RECIPIENT_GATEWAY_DLT_SYSTEM = "recipientGatewayDltSystem";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_GATEWAY_DLT_SYSTEM)
  private String recipientGatewayDltSystem;

  /**
   * Gets or Sets escrowType
   */
  @JsonAdapter(EscrowTypeEnum.Adapter.class)
  public enum EscrowTypeEnum {
    FAUCET("FAUCET"),
    
    TIMELOCK("TIMELOCK"),
    
    HASHLOCK("HASHLOCK"),
    
    HASHTIMELOCK("HASHTIMELOCK"),
    
    MULTICLAIMPC("MULTICLAIMPC"),
    
    DESTROY("DESTROY"),
    
    BURN("BURN");

    private String value;

    EscrowTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EscrowTypeEnum fromValue(String value) {
      for (EscrowTypeEnum b : EscrowTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EscrowTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EscrowTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EscrowTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EscrowTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ESCROW_TYPE = "escrowType";
  @SerializedName(SERIALIZED_NAME_ESCROW_TYPE)
  private EscrowTypeEnum escrowType;

  public static final String SERIALIZED_NAME_EXPIRY_TIME = "expiryTime";
  @SerializedName(SERIALIZED_NAME_EXPIRY_TIME)
  private String expiryTime;

  public static final String SERIALIZED_NAME_MULTIPLE_CLAIMS_ALLOWED = "multipleClaimsAllowed";
  @SerializedName(SERIALIZED_NAME_MULTIPLE_CLAIMS_ALLOWED)
  private Boolean multipleClaimsAllowed;

  public static final String SERIALIZED_NAME_MULTIPLE_CANCELS_ALLOWED = "multipleCancelsAllowed";
  @SerializedName(SERIALIZED_NAME_MULTIPLE_CANCELS_ALLOWED)
  private Boolean multipleCancelsAllowed;

  public static final String SERIALIZED_NAME_PERMISSIONS = "permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private Object permissions;

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private String origin;

  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private String destination;

  public static final String SERIALIZED_NAME_SUBSEQUENT_CALLS = "subsequentCalls";
  @SerializedName(SERIALIZED_NAME_SUBSEQUENT_CALLS)
  private Object subsequentCalls;

  public static final String SERIALIZED_NAME_HISTORIES = "histories";
  @SerializedName(SERIALIZED_NAME_HISTORIES)
  private List<History> histories;

  public static final String SERIALIZED_NAME_SEQUENCE_NUMBER = "sequenceNumber";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_NUMBER)
  private Integer sequenceNumber;

  public static final String SERIALIZED_NAME_SOURCE_BASE_PATH = "sourceBasePath";
  @SerializedName(SERIALIZED_NAME_SOURCE_BASE_PATH)
  private String sourceBasePath;

  public static final String SERIALIZED_NAME_RECIPIENT_BASE_PATH = "recipientBasePath";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_BASE_PATH)
  private String recipientBasePath;

  public static final String SERIALIZED_NAME_MAX_RETRIES = "maxRetries";
  @SerializedName(SERIALIZED_NAME_MAX_RETRIES)
  private BigDecimal maxRetries;

  public static final String SERIALIZED_NAME_MAX_TIMEOUT = "maxTimeout";
  @SerializedName(SERIALIZED_NAME_MAX_TIMEOUT)
  private BigDecimal maxTimeout;

  public static final String SERIALIZED_NAME_BACKUP_GATEWAYS_ALLOWED = "backupGatewaysAllowed";
  @SerializedName(SERIALIZED_NAME_BACKUP_GATEWAYS_ALLOWED)
  private List<String> backupGatewaysAllowed = new ArrayList<>();

  public static final String SERIALIZED_NAME_RECIPIENT_LEDGER_ASSET_I_D = "recipientLedgerAssetID";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_LEDGER_ASSET_I_D)
  private String recipientLedgerAssetID;

  public static final String SERIALIZED_NAME_SOURCE_LEDGER_ASSET_I_D = "sourceLedgerAssetID";
  @SerializedName(SERIALIZED_NAME_SOURCE_LEDGER_ASSET_I_D)
  private String sourceLedgerAssetID;

  public TransferInitializationV1Request() {
  }

  public TransferInitializationV1Request messageType(String messageType) {
    
    this.messageType = messageType;
    return this;
  }

   /**
   * Get messageType
   * @return messageType
  **/
  @javax.annotation.Nonnull
  public String getMessageType() {
    return messageType;
  }


  public void setMessageType(String messageType) {
    this.messageType = messageType;
  }


  public TransferInitializationV1Request sessionID(String sessionID) {
    
    this.sessionID = sessionID;
    return this;
  }

   /**
   * Get sessionID
   * @return sessionID
  **/
  @javax.annotation.Nonnull
  public String getSessionID() {
    return sessionID;
  }


  public void setSessionID(String sessionID) {
    this.sessionID = sessionID;
  }


  public TransferInitializationV1Request version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public TransferInitializationV1Request developerURN(String developerURN) {
    
    this.developerURN = developerURN;
    return this;
  }

   /**
   * Get developerURN
   * @return developerURN
  **/
  @javax.annotation.Nullable
  public String getDeveloperURN() {
    return developerURN;
  }


  public void setDeveloperURN(String developerURN) {
    this.developerURN = developerURN;
  }


  public TransferInitializationV1Request credentialProfile(CredentialProfile credentialProfile) {
    
    this.credentialProfile = credentialProfile;
    return this;
  }

   /**
   * Get credentialProfile
   * @return credentialProfile
  **/
  @javax.annotation.Nullable
  public CredentialProfile getCredentialProfile() {
    return credentialProfile;
  }


  public void setCredentialProfile(CredentialProfile credentialProfile) {
    this.credentialProfile = credentialProfile;
  }


  public TransferInitializationV1Request payloadProfile(PayloadProfile payloadProfile) {
    
    this.payloadProfile = payloadProfile;
    return this;
  }

   /**
   * Get payloadProfile
   * @return payloadProfile
  **/
  @javax.annotation.Nonnull
  public PayloadProfile getPayloadProfile() {
    return payloadProfile;
  }


  public void setPayloadProfile(PayloadProfile payloadProfile) {
    this.payloadProfile = payloadProfile;
  }


  public TransferInitializationV1Request applicationProfile(String applicationProfile) {
    
    this.applicationProfile = applicationProfile;
    return this;
  }

   /**
   * Get applicationProfile
   * @return applicationProfile
  **/
  @javax.annotation.Nonnull
  public String getApplicationProfile() {
    return applicationProfile;
  }


  public void setApplicationProfile(String applicationProfile) {
    this.applicationProfile = applicationProfile;
  }


  public TransferInitializationV1Request loggingProfile(String loggingProfile) {
    
    this.loggingProfile = loggingProfile;
    return this;
  }

   /**
   * Get loggingProfile
   * @return loggingProfile
  **/
  @javax.annotation.Nonnull
  public String getLoggingProfile() {
    return loggingProfile;
  }


  public void setLoggingProfile(String loggingProfile) {
    this.loggingProfile = loggingProfile;
  }


  public TransferInitializationV1Request accessControlProfile(String accessControlProfile) {
    
    this.accessControlProfile = accessControlProfile;
    return this;
  }

   /**
   * Get accessControlProfile
   * @return accessControlProfile
  **/
  @javax.annotation.Nonnull
  public String getAccessControlProfile() {
    return accessControlProfile;
  }


  public void setAccessControlProfile(String accessControlProfile) {
    this.accessControlProfile = accessControlProfile;
  }


  public TransferInitializationV1Request signature(String signature) {
    
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @javax.annotation.Nonnull
  public String getSignature() {
    return signature;
  }


  public void setSignature(String signature) {
    this.signature = signature;
  }


  public TransferInitializationV1Request sourceGatewayPubkey(String sourceGatewayPubkey) {
    
    this.sourceGatewayPubkey = sourceGatewayPubkey;
    return this;
  }

   /**
   * Get sourceGatewayPubkey
   * @return sourceGatewayPubkey
  **/
  @javax.annotation.Nonnull
  public String getSourceGatewayPubkey() {
    return sourceGatewayPubkey;
  }


  public void setSourceGatewayPubkey(String sourceGatewayPubkey) {
    this.sourceGatewayPubkey = sourceGatewayPubkey;
  }


  public TransferInitializationV1Request sourceGatewayDltSystem(String sourceGatewayDltSystem) {
    
    this.sourceGatewayDltSystem = sourceGatewayDltSystem;
    return this;
  }

   /**
   * Get sourceGatewayDltSystem
   * @return sourceGatewayDltSystem
  **/
  @javax.annotation.Nonnull
  public String getSourceGatewayDltSystem() {
    return sourceGatewayDltSystem;
  }


  public void setSourceGatewayDltSystem(String sourceGatewayDltSystem) {
    this.sourceGatewayDltSystem = sourceGatewayDltSystem;
  }


  public TransferInitializationV1Request recipientGatewayPubkey(String recipientGatewayPubkey) {
    
    this.recipientGatewayPubkey = recipientGatewayPubkey;
    return this;
  }

   /**
   * Get recipientGatewayPubkey
   * @return recipientGatewayPubkey
  **/
  @javax.annotation.Nonnull
  public String getRecipientGatewayPubkey() {
    return recipientGatewayPubkey;
  }


  public void setRecipientGatewayPubkey(String recipientGatewayPubkey) {
    this.recipientGatewayPubkey = recipientGatewayPubkey;
  }


  public TransferInitializationV1Request recipientGatewayDltSystem(String recipientGatewayDltSystem) {
    
    this.recipientGatewayDltSystem = recipientGatewayDltSystem;
    return this;
  }

   /**
   * Get recipientGatewayDltSystem
   * @return recipientGatewayDltSystem
  **/
  @javax.annotation.Nonnull
  public String getRecipientGatewayDltSystem() {
    return recipientGatewayDltSystem;
  }


  public void setRecipientGatewayDltSystem(String recipientGatewayDltSystem) {
    this.recipientGatewayDltSystem = recipientGatewayDltSystem;
  }


  public TransferInitializationV1Request escrowType(EscrowTypeEnum escrowType) {
    
    this.escrowType = escrowType;
    return this;
  }

   /**
   * Get escrowType
   * @return escrowType
  **/
  @javax.annotation.Nullable
  public EscrowTypeEnum getEscrowType() {
    return escrowType;
  }


  public void setEscrowType(EscrowTypeEnum escrowType) {
    this.escrowType = escrowType;
  }


  public TransferInitializationV1Request expiryTime(String expiryTime) {
    
    this.expiryTime = expiryTime;
    return this;
  }

   /**
   * Get expiryTime
   * @return expiryTime
  **/
  @javax.annotation.Nullable
  public String getExpiryTime() {
    return expiryTime;
  }


  public void setExpiryTime(String expiryTime) {
    this.expiryTime = expiryTime;
  }


  public TransferInitializationV1Request multipleClaimsAllowed(Boolean multipleClaimsAllowed) {
    
    this.multipleClaimsAllowed = multipleClaimsAllowed;
    return this;
  }

   /**
   * Get multipleClaimsAllowed
   * @return multipleClaimsAllowed
  **/
  @javax.annotation.Nullable
  public Boolean getMultipleClaimsAllowed() {
    return multipleClaimsAllowed;
  }


  public void setMultipleClaimsAllowed(Boolean multipleClaimsAllowed) {
    this.multipleClaimsAllowed = multipleClaimsAllowed;
  }


  public TransferInitializationV1Request multipleCancelsAllowed(Boolean multipleCancelsAllowed) {
    
    this.multipleCancelsAllowed = multipleCancelsAllowed;
    return this;
  }

   /**
   * Get multipleCancelsAllowed
   * @return multipleCancelsAllowed
  **/
  @javax.annotation.Nullable
  public Boolean getMultipleCancelsAllowed() {
    return multipleCancelsAllowed;
  }


  public void setMultipleCancelsAllowed(Boolean multipleCancelsAllowed) {
    this.multipleCancelsAllowed = multipleCancelsAllowed;
  }


  public TransferInitializationV1Request permissions(Object permissions) {
    
    this.permissions = permissions;
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @javax.annotation.Nullable
  public Object getPermissions() {
    return permissions;
  }


  public void setPermissions(Object permissions) {
    this.permissions = permissions;
  }


  public TransferInitializationV1Request origin(String origin) {
    
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @javax.annotation.Nullable
  public String getOrigin() {
    return origin;
  }


  public void setOrigin(String origin) {
    this.origin = origin;
  }


  public TransferInitializationV1Request destination(String destination) {
    
    this.destination = destination;
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @javax.annotation.Nullable
  public String getDestination() {
    return destination;
  }


  public void setDestination(String destination) {
    this.destination = destination;
  }


  public TransferInitializationV1Request subsequentCalls(Object subsequentCalls) {
    
    this.subsequentCalls = subsequentCalls;
    return this;
  }

   /**
   * Get subsequentCalls
   * @return subsequentCalls
  **/
  @javax.annotation.Nullable
  public Object getSubsequentCalls() {
    return subsequentCalls;
  }


  public void setSubsequentCalls(Object subsequentCalls) {
    this.subsequentCalls = subsequentCalls;
  }


  public TransferInitializationV1Request histories(List<History> histories) {
    
    this.histories = histories;
    return this;
  }

  public TransferInitializationV1Request addHistoriesItem(History historiesItem) {
    if (this.histories == null) {
      this.histories = new ArrayList<>();
    }
    this.histories.add(historiesItem);
    return this;
  }

   /**
   * Get histories
   * @return histories
  **/
  @javax.annotation.Nullable
  public List<History> getHistories() {
    return histories;
  }


  public void setHistories(List<History> histories) {
    this.histories = histories;
  }


  public TransferInitializationV1Request sequenceNumber(Integer sequenceNumber) {
    
    this.sequenceNumber = sequenceNumber;
    return this;
  }

   /**
   * Get sequenceNumber
   * @return sequenceNumber
  **/
  @javax.annotation.Nonnull
  public Integer getSequenceNumber() {
    return sequenceNumber;
  }


  public void setSequenceNumber(Integer sequenceNumber) {
    this.sequenceNumber = sequenceNumber;
  }


  public TransferInitializationV1Request sourceBasePath(String sourceBasePath) {
    
    this.sourceBasePath = sourceBasePath;
    return this;
  }

   /**
   * Get sourceBasePath
   * @return sourceBasePath
  **/
  @javax.annotation.Nonnull
  public String getSourceBasePath() {
    return sourceBasePath;
  }


  public void setSourceBasePath(String sourceBasePath) {
    this.sourceBasePath = sourceBasePath;
  }


  public TransferInitializationV1Request recipientBasePath(String recipientBasePath) {
    
    this.recipientBasePath = recipientBasePath;
    return this;
  }

   /**
   * Get recipientBasePath
   * @return recipientBasePath
  **/
  @javax.annotation.Nonnull
  public String getRecipientBasePath() {
    return recipientBasePath;
  }


  public void setRecipientBasePath(String recipientBasePath) {
    this.recipientBasePath = recipientBasePath;
  }


  public TransferInitializationV1Request maxRetries(BigDecimal maxRetries) {
    
    this.maxRetries = maxRetries;
    return this;
  }

   /**
   * Get maxRetries
   * @return maxRetries
  **/
  @javax.annotation.Nonnull
  public BigDecimal getMaxRetries() {
    return maxRetries;
  }


  public void setMaxRetries(BigDecimal maxRetries) {
    this.maxRetries = maxRetries;
  }


  public TransferInitializationV1Request maxTimeout(BigDecimal maxTimeout) {
    
    this.maxTimeout = maxTimeout;
    return this;
  }

   /**
   * Get maxTimeout
   * @return maxTimeout
  **/
  @javax.annotation.Nonnull
  public BigDecimal getMaxTimeout() {
    return maxTimeout;
  }


  public void setMaxTimeout(BigDecimal maxTimeout) {
    this.maxTimeout = maxTimeout;
  }


  public TransferInitializationV1Request backupGatewaysAllowed(List<String> backupGatewaysAllowed) {
    
    this.backupGatewaysAllowed = backupGatewaysAllowed;
    return this;
  }

  public TransferInitializationV1Request addBackupGatewaysAllowedItem(String backupGatewaysAllowedItem) {
    if (this.backupGatewaysAllowed == null) {
      this.backupGatewaysAllowed = new ArrayList<>();
    }
    this.backupGatewaysAllowed.add(backupGatewaysAllowedItem);
    return this;
  }

   /**
   * Get backupGatewaysAllowed
   * @return backupGatewaysAllowed
  **/
  @javax.annotation.Nonnull
  public List<String> getBackupGatewaysAllowed() {
    return backupGatewaysAllowed;
  }


  public void setBackupGatewaysAllowed(List<String> backupGatewaysAllowed) {
    this.backupGatewaysAllowed = backupGatewaysAllowed;
  }


  public TransferInitializationV1Request recipientLedgerAssetID(String recipientLedgerAssetID) {
    
    this.recipientLedgerAssetID = recipientLedgerAssetID;
    return this;
  }

   /**
   * Get recipientLedgerAssetID
   * @return recipientLedgerAssetID
  **/
  @javax.annotation.Nonnull
  public String getRecipientLedgerAssetID() {
    return recipientLedgerAssetID;
  }


  public void setRecipientLedgerAssetID(String recipientLedgerAssetID) {
    this.recipientLedgerAssetID = recipientLedgerAssetID;
  }


  public TransferInitializationV1Request sourceLedgerAssetID(String sourceLedgerAssetID) {
    
    this.sourceLedgerAssetID = sourceLedgerAssetID;
    return this;
  }

   /**
   * Get sourceLedgerAssetID
   * @return sourceLedgerAssetID
  **/
  @javax.annotation.Nonnull
  public String getSourceLedgerAssetID() {
    return sourceLedgerAssetID;
  }


  public void setSourceLedgerAssetID(String sourceLedgerAssetID) {
    this.sourceLedgerAssetID = sourceLedgerAssetID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferInitializationV1Request transferInitializationV1Request = (TransferInitializationV1Request) o;
    return Objects.equals(this.messageType, transferInitializationV1Request.messageType) &&
        Objects.equals(this.sessionID, transferInitializationV1Request.sessionID) &&
        Objects.equals(this.version, transferInitializationV1Request.version) &&
        Objects.equals(this.developerURN, transferInitializationV1Request.developerURN) &&
        Objects.equals(this.credentialProfile, transferInitializationV1Request.credentialProfile) &&
        Objects.equals(this.payloadProfile, transferInitializationV1Request.payloadProfile) &&
        Objects.equals(this.applicationProfile, transferInitializationV1Request.applicationProfile) &&
        Objects.equals(this.loggingProfile, transferInitializationV1Request.loggingProfile) &&
        Objects.equals(this.accessControlProfile, transferInitializationV1Request.accessControlProfile) &&
        Objects.equals(this.signature, transferInitializationV1Request.signature) &&
        Objects.equals(this.sourceGatewayPubkey, transferInitializationV1Request.sourceGatewayPubkey) &&
        Objects.equals(this.sourceGatewayDltSystem, transferInitializationV1Request.sourceGatewayDltSystem) &&
        Objects.equals(this.recipientGatewayPubkey, transferInitializationV1Request.recipientGatewayPubkey) &&
        Objects.equals(this.recipientGatewayDltSystem, transferInitializationV1Request.recipientGatewayDltSystem) &&
        Objects.equals(this.escrowType, transferInitializationV1Request.escrowType) &&
        Objects.equals(this.expiryTime, transferInitializationV1Request.expiryTime) &&
        Objects.equals(this.multipleClaimsAllowed, transferInitializationV1Request.multipleClaimsAllowed) &&
        Objects.equals(this.multipleCancelsAllowed, transferInitializationV1Request.multipleCancelsAllowed) &&
        Objects.equals(this.permissions, transferInitializationV1Request.permissions) &&
        Objects.equals(this.origin, transferInitializationV1Request.origin) &&
        Objects.equals(this.destination, transferInitializationV1Request.destination) &&
        Objects.equals(this.subsequentCalls, transferInitializationV1Request.subsequentCalls) &&
        Objects.equals(this.histories, transferInitializationV1Request.histories) &&
        Objects.equals(this.sequenceNumber, transferInitializationV1Request.sequenceNumber) &&
        Objects.equals(this.sourceBasePath, transferInitializationV1Request.sourceBasePath) &&
        Objects.equals(this.recipientBasePath, transferInitializationV1Request.recipientBasePath) &&
        Objects.equals(this.maxRetries, transferInitializationV1Request.maxRetries) &&
        Objects.equals(this.maxTimeout, transferInitializationV1Request.maxTimeout) &&
        Objects.equals(this.backupGatewaysAllowed, transferInitializationV1Request.backupGatewaysAllowed) &&
        Objects.equals(this.recipientLedgerAssetID, transferInitializationV1Request.recipientLedgerAssetID) &&
        Objects.equals(this.sourceLedgerAssetID, transferInitializationV1Request.sourceLedgerAssetID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageType, sessionID, version, developerURN, credentialProfile, payloadProfile, applicationProfile, loggingProfile, accessControlProfile, signature, sourceGatewayPubkey, sourceGatewayDltSystem, recipientGatewayPubkey, recipientGatewayDltSystem, escrowType, expiryTime, multipleClaimsAllowed, multipleCancelsAllowed, permissions, origin, destination, subsequentCalls, histories, sequenceNumber, sourceBasePath, recipientBasePath, maxRetries, maxTimeout, backupGatewaysAllowed, recipientLedgerAssetID, sourceLedgerAssetID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferInitializationV1Request {\n");
    sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
    sb.append("    sessionID: ").append(toIndentedString(sessionID)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    developerURN: ").append(toIndentedString(developerURN)).append("\n");
    sb.append("    credentialProfile: ").append(toIndentedString(credentialProfile)).append("\n");
    sb.append("    payloadProfile: ").append(toIndentedString(payloadProfile)).append("\n");
    sb.append("    applicationProfile: ").append(toIndentedString(applicationProfile)).append("\n");
    sb.append("    loggingProfile: ").append(toIndentedString(loggingProfile)).append("\n");
    sb.append("    accessControlProfile: ").append(toIndentedString(accessControlProfile)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    sourceGatewayPubkey: ").append(toIndentedString(sourceGatewayPubkey)).append("\n");
    sb.append("    sourceGatewayDltSystem: ").append(toIndentedString(sourceGatewayDltSystem)).append("\n");
    sb.append("    recipientGatewayPubkey: ").append(toIndentedString(recipientGatewayPubkey)).append("\n");
    sb.append("    recipientGatewayDltSystem: ").append(toIndentedString(recipientGatewayDltSystem)).append("\n");
    sb.append("    escrowType: ").append(toIndentedString(escrowType)).append("\n");
    sb.append("    expiryTime: ").append(toIndentedString(expiryTime)).append("\n");
    sb.append("    multipleClaimsAllowed: ").append(toIndentedString(multipleClaimsAllowed)).append("\n");
    sb.append("    multipleCancelsAllowed: ").append(toIndentedString(multipleCancelsAllowed)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    subsequentCalls: ").append(toIndentedString(subsequentCalls)).append("\n");
    sb.append("    histories: ").append(toIndentedString(histories)).append("\n");
    sb.append("    sequenceNumber: ").append(toIndentedString(sequenceNumber)).append("\n");
    sb.append("    sourceBasePath: ").append(toIndentedString(sourceBasePath)).append("\n");
    sb.append("    recipientBasePath: ").append(toIndentedString(recipientBasePath)).append("\n");
    sb.append("    maxRetries: ").append(toIndentedString(maxRetries)).append("\n");
    sb.append("    maxTimeout: ").append(toIndentedString(maxTimeout)).append("\n");
    sb.append("    backupGatewaysAllowed: ").append(toIndentedString(backupGatewaysAllowed)).append("\n");
    sb.append("    recipientLedgerAssetID: ").append(toIndentedString(recipientLedgerAssetID)).append("\n");
    sb.append("    sourceLedgerAssetID: ").append(toIndentedString(sourceLedgerAssetID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("messageType");
    openapiFields.add("sessionID");
    openapiFields.add("version");
    openapiFields.add("developerURN");
    openapiFields.add("credentialProfile");
    openapiFields.add("payloadProfile");
    openapiFields.add("applicationProfile");
    openapiFields.add("loggingProfile");
    openapiFields.add("accessControlProfile");
    openapiFields.add("signature");
    openapiFields.add("sourceGatewayPubkey");
    openapiFields.add("sourceGatewayDltSystem");
    openapiFields.add("recipientGatewayPubkey");
    openapiFields.add("recipientGatewayDltSystem");
    openapiFields.add("escrowType");
    openapiFields.add("expiryTime");
    openapiFields.add("multipleClaimsAllowed");
    openapiFields.add("multipleCancelsAllowed");
    openapiFields.add("permissions");
    openapiFields.add("origin");
    openapiFields.add("destination");
    openapiFields.add("subsequentCalls");
    openapiFields.add("histories");
    openapiFields.add("sequenceNumber");
    openapiFields.add("sourceBasePath");
    openapiFields.add("recipientBasePath");
    openapiFields.add("maxRetries");
    openapiFields.add("maxTimeout");
    openapiFields.add("backupGatewaysAllowed");
    openapiFields.add("recipientLedgerAssetID");
    openapiFields.add("sourceLedgerAssetID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("messageType");
    openapiRequiredFields.add("sessionID");
    openapiRequiredFields.add("payloadProfile");
    openapiRequiredFields.add("applicationProfile");
    openapiRequiredFields.add("loggingProfile");
    openapiRequiredFields.add("accessControlProfile");
    openapiRequiredFields.add("signature");
    openapiRequiredFields.add("sourceGatewayPubkey");
    openapiRequiredFields.add("sourceGatewayDltSystem");
    openapiRequiredFields.add("recipientGatewayPubkey");
    openapiRequiredFields.add("recipientGatewayDltSystem");
    openapiRequiredFields.add("sequenceNumber");
    openapiRequiredFields.add("sourceBasePath");
    openapiRequiredFields.add("recipientBasePath");
    openapiRequiredFields.add("maxRetries");
    openapiRequiredFields.add("maxTimeout");
    openapiRequiredFields.add("backupGatewaysAllowed");
    openapiRequiredFields.add("recipientLedgerAssetID");
    openapiRequiredFields.add("sourceLedgerAssetID");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TransferInitializationV1Request
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TransferInitializationV1Request.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TransferInitializationV1Request is not found in the empty JSON string", TransferInitializationV1Request.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TransferInitializationV1Request.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TransferInitializationV1Request` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TransferInitializationV1Request.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("messageType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messageType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messageType").toString()));
      }
      if (!jsonObj.get("sessionID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sessionID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sessionID").toString()));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      if ((jsonObj.get("developerURN") != null && !jsonObj.get("developerURN").isJsonNull()) && !jsonObj.get("developerURN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `developerURN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("developerURN").toString()));
      }
      // validate the required field `payloadProfile`
      PayloadProfile.validateJsonObject(jsonObj.getAsJsonObject("payloadProfile"));
      if (!jsonObj.get("applicationProfile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationProfile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationProfile").toString()));
      }
      if (!jsonObj.get("loggingProfile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loggingProfile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loggingProfile").toString()));
      }
      if (!jsonObj.get("accessControlProfile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessControlProfile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessControlProfile").toString()));
      }
      if (!jsonObj.get("signature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signature").toString()));
      }
      if (!jsonObj.get("sourceGatewayPubkey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceGatewayPubkey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceGatewayPubkey").toString()));
      }
      if (!jsonObj.get("sourceGatewayDltSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceGatewayDltSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceGatewayDltSystem").toString()));
      }
      if (!jsonObj.get("recipientGatewayPubkey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipientGatewayPubkey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipientGatewayPubkey").toString()));
      }
      if (!jsonObj.get("recipientGatewayDltSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipientGatewayDltSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipientGatewayDltSystem").toString()));
      }
      if ((jsonObj.get("escrowType") != null && !jsonObj.get("escrowType").isJsonNull()) && !jsonObj.get("escrowType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `escrowType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("escrowType").toString()));
      }
      if ((jsonObj.get("expiryTime") != null && !jsonObj.get("expiryTime").isJsonNull()) && !jsonObj.get("expiryTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiryTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiryTime").toString()));
      }
      if ((jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull()) && !jsonObj.get("origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin").toString()));
      }
      if ((jsonObj.get("destination") != null && !jsonObj.get("destination").isJsonNull()) && !jsonObj.get("destination").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination").toString()));
      }
      if (jsonObj.get("histories") != null && !jsonObj.get("histories").isJsonNull()) {
        JsonArray jsonArrayhistories = jsonObj.getAsJsonArray("histories");
        if (jsonArrayhistories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("histories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `histories` to be an array in the JSON string but got `%s`", jsonObj.get("histories").toString()));
          }

          // validate the optional field `histories` (array)
          for (int i = 0; i < jsonArrayhistories.size(); i++) {
            History.validateJsonObject(jsonArrayhistories.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("sourceBasePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceBasePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceBasePath").toString()));
      }
      if (!jsonObj.get("recipientBasePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipientBasePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipientBasePath").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("backupGatewaysAllowed") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("backupGatewaysAllowed").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `backupGatewaysAllowed` to be an array in the JSON string but got `%s`", jsonObj.get("backupGatewaysAllowed").toString()));
      }
      if (!jsonObj.get("recipientLedgerAssetID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipientLedgerAssetID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipientLedgerAssetID").toString()));
      }
      if (!jsonObj.get("sourceLedgerAssetID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceLedgerAssetID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceLedgerAssetID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TransferInitializationV1Request.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TransferInitializationV1Request' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TransferInitializationV1Request> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TransferInitializationV1Request.class));

       return (TypeAdapter<T>) new TypeAdapter<TransferInitializationV1Request>() {
           @Override
           public void write(JsonWriter out, TransferInitializationV1Request value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TransferInitializationV1Request read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TransferInitializationV1Request given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TransferInitializationV1Request
  * @throws IOException if the JSON string is invalid with respect to TransferInitializationV1Request
  */
  public static TransferInitializationV1Request fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TransferInitializationV1Request.class);
  }

 /**
  * Convert an instance of TransferInitializationV1Request to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

