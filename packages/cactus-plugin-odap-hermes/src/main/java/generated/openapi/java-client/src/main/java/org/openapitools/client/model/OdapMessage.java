/*
 * Hyperledger Cactus Plugin - Odap Hermes
 * Implementation for Odap and Hermes
 *
 * The version of the OpenAPI document: v2.0.0-alpha.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.OdapMessageActionResponse;
import org.openapitools.client.model.PayloadProfile;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OdapMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class OdapMessage {
  public static final String SERIALIZED_NAME_SEQUENCE_NUMBER = "SequenceNumber";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_NUMBER)
  private BigDecimal sequenceNumber;

  /**
   * Gets or Sets phase
   */
  @JsonAdapter(PhaseEnum.Adapter.class)
  public enum PhaseEnum {
    TRANSFERINITIALIZATION("TransferInitialization"),
    
    LOCKEVIDENCEVERIFICATION("LockEvidenceVerification"),
    
    COMMITMENTESTABLISHMENT("CommitmentEstablishment");

    private String value;

    PhaseEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PhaseEnum fromValue(String value) {
      for (PhaseEnum b : PhaseEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PhaseEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PhaseEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PhaseEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PhaseEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PHASE = "Phase";
  @SerializedName(SERIALIZED_NAME_PHASE)
  private PhaseEnum phase;

  public static final String SERIALIZED_NAME_RESOURCE_U_R_L = "ResourceURL";
  @SerializedName(SERIALIZED_NAME_RESOURCE_U_R_L)
  private String resourceURL;

  public static final String SERIALIZED_NAME_DEVELOPER_U_R_N = "DeveloperURN";
  @SerializedName(SERIALIZED_NAME_DEVELOPER_U_R_N)
  private String developerURN;

  public static final String SERIALIZED_NAME_ACTION_RESPONSE = "ActionResponse";
  @SerializedName(SERIALIZED_NAME_ACTION_RESPONSE)
  private OdapMessageActionResponse actionResponse;

  /**
   * Gets or Sets credentialProfile
   */
  @JsonAdapter(CredentialProfileEnum.Adapter.class)
  public enum CredentialProfileEnum {
    SAML("SAML"),
    
    OAUTH("OAuth"),
    
    X509("X509");

    private String value;

    CredentialProfileEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CredentialProfileEnum fromValue(String value) {
      for (CredentialProfileEnum b : CredentialProfileEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CredentialProfileEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CredentialProfileEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CredentialProfileEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CredentialProfileEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CREDENTIAL_PROFILE = "CredentialProfile";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL_PROFILE)
  private CredentialProfileEnum credentialProfile;

  public static final String SERIALIZED_NAME_CREDENTIAL_BLOCK = "CredentialBlock";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL_BLOCK)
  private List<Object> credentialBlock;

  public static final String SERIALIZED_NAME_CREDENTIALS_PROFILE = "CredentialsProfile";
  @SerializedName(SERIALIZED_NAME_CREDENTIALS_PROFILE)
  private PayloadProfile credentialsProfile;

  public static final String SERIALIZED_NAME_APPLICATION_PROFILE = "ApplicationProfile";
  @SerializedName(SERIALIZED_NAME_APPLICATION_PROFILE)
  private Object applicationProfile;

  public static final String SERIALIZED_NAME_PAYLOAD = "Payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private Object payload;

  public static final String SERIALIZED_NAME_PAYLOAD_HASH = "PayloadHash";
  @SerializedName(SERIALIZED_NAME_PAYLOAD_HASH)
  private String payloadHash;

  public static final String SERIALIZED_NAME_MESSAGE_SIGNATURE = "MessageSignature";
  @SerializedName(SERIALIZED_NAME_MESSAGE_SIGNATURE)
  private String messageSignature;

  public OdapMessage() {
  }

  public OdapMessage sequenceNumber(BigDecimal sequenceNumber) {
    
    this.sequenceNumber = sequenceNumber;
    return this;
  }

   /**
   * Get sequenceNumber
   * @return sequenceNumber
  **/
  @javax.annotation.Nullable
  public BigDecimal getSequenceNumber() {
    return sequenceNumber;
  }


  public void setSequenceNumber(BigDecimal sequenceNumber) {
    this.sequenceNumber = sequenceNumber;
  }


  public OdapMessage phase(PhaseEnum phase) {
    
    this.phase = phase;
    return this;
  }

   /**
   * Get phase
   * @return phase
  **/
  @javax.annotation.Nullable
  public PhaseEnum getPhase() {
    return phase;
  }


  public void setPhase(PhaseEnum phase) {
    this.phase = phase;
  }


  public OdapMessage resourceURL(String resourceURL) {
    
    this.resourceURL = resourceURL;
    return this;
  }

   /**
   * Get resourceURL
   * @return resourceURL
  **/
  @javax.annotation.Nullable
  public String getResourceURL() {
    return resourceURL;
  }


  public void setResourceURL(String resourceURL) {
    this.resourceURL = resourceURL;
  }


  public OdapMessage developerURN(String developerURN) {
    
    this.developerURN = developerURN;
    return this;
  }

   /**
   * Get developerURN
   * @return developerURN
  **/
  @javax.annotation.Nullable
  public String getDeveloperURN() {
    return developerURN;
  }


  public void setDeveloperURN(String developerURN) {
    this.developerURN = developerURN;
  }


  public OdapMessage actionResponse(OdapMessageActionResponse actionResponse) {
    
    this.actionResponse = actionResponse;
    return this;
  }

   /**
   * Get actionResponse
   * @return actionResponse
  **/
  @javax.annotation.Nullable
  public OdapMessageActionResponse getActionResponse() {
    return actionResponse;
  }


  public void setActionResponse(OdapMessageActionResponse actionResponse) {
    this.actionResponse = actionResponse;
  }


  public OdapMessage credentialProfile(CredentialProfileEnum credentialProfile) {
    
    this.credentialProfile = credentialProfile;
    return this;
  }

   /**
   * Get credentialProfile
   * @return credentialProfile
  **/
  @javax.annotation.Nullable
  public CredentialProfileEnum getCredentialProfile() {
    return credentialProfile;
  }


  public void setCredentialProfile(CredentialProfileEnum credentialProfile) {
    this.credentialProfile = credentialProfile;
  }


  public OdapMessage credentialBlock(List<Object> credentialBlock) {
    
    this.credentialBlock = credentialBlock;
    return this;
  }

  public OdapMessage addCredentialBlockItem(Object credentialBlockItem) {
    if (this.credentialBlock == null) {
      this.credentialBlock = new ArrayList<>();
    }
    this.credentialBlock.add(credentialBlockItem);
    return this;
  }

   /**
   * Get credentialBlock
   * @return credentialBlock
  **/
  @javax.annotation.Nullable
  public List<Object> getCredentialBlock() {
    return credentialBlock;
  }


  public void setCredentialBlock(List<Object> credentialBlock) {
    this.credentialBlock = credentialBlock;
  }


  public OdapMessage credentialsProfile(PayloadProfile credentialsProfile) {
    
    this.credentialsProfile = credentialsProfile;
    return this;
  }

   /**
   * Get credentialsProfile
   * @return credentialsProfile
  **/
  @javax.annotation.Nullable
  public PayloadProfile getCredentialsProfile() {
    return credentialsProfile;
  }


  public void setCredentialsProfile(PayloadProfile credentialsProfile) {
    this.credentialsProfile = credentialsProfile;
  }


  public OdapMessage applicationProfile(Object applicationProfile) {
    
    this.applicationProfile = applicationProfile;
    return this;
  }

   /**
   * Get applicationProfile
   * @return applicationProfile
  **/
  @javax.annotation.Nullable
  public Object getApplicationProfile() {
    return applicationProfile;
  }


  public void setApplicationProfile(Object applicationProfile) {
    this.applicationProfile = applicationProfile;
  }


  public OdapMessage payload(Object payload) {
    
    this.payload = payload;
    return this;
  }

   /**
   * Get payload
   * @return payload
  **/
  @javax.annotation.Nullable
  public Object getPayload() {
    return payload;
  }


  public void setPayload(Object payload) {
    this.payload = payload;
  }


  public OdapMessage payloadHash(String payloadHash) {
    
    this.payloadHash = payloadHash;
    return this;
  }

   /**
   * Get payloadHash
   * @return payloadHash
  **/
  @javax.annotation.Nullable
  public String getPayloadHash() {
    return payloadHash;
  }


  public void setPayloadHash(String payloadHash) {
    this.payloadHash = payloadHash;
  }


  public OdapMessage messageSignature(String messageSignature) {
    
    this.messageSignature = messageSignature;
    return this;
  }

   /**
   * Get messageSignature
   * @return messageSignature
  **/
  @javax.annotation.Nullable
  public String getMessageSignature() {
    return messageSignature;
  }


  public void setMessageSignature(String messageSignature) {
    this.messageSignature = messageSignature;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OdapMessage odapMessage = (OdapMessage) o;
    return Objects.equals(this.sequenceNumber, odapMessage.sequenceNumber) &&
        Objects.equals(this.phase, odapMessage.phase) &&
        Objects.equals(this.resourceURL, odapMessage.resourceURL) &&
        Objects.equals(this.developerURN, odapMessage.developerURN) &&
        Objects.equals(this.actionResponse, odapMessage.actionResponse) &&
        Objects.equals(this.credentialProfile, odapMessage.credentialProfile) &&
        Objects.equals(this.credentialBlock, odapMessage.credentialBlock) &&
        Objects.equals(this.credentialsProfile, odapMessage.credentialsProfile) &&
        Objects.equals(this.applicationProfile, odapMessage.applicationProfile) &&
        Objects.equals(this.payload, odapMessage.payload) &&
        Objects.equals(this.payloadHash, odapMessage.payloadHash) &&
        Objects.equals(this.messageSignature, odapMessage.messageSignature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sequenceNumber, phase, resourceURL, developerURN, actionResponse, credentialProfile, credentialBlock, credentialsProfile, applicationProfile, payload, payloadHash, messageSignature);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OdapMessage {\n");
    sb.append("    sequenceNumber: ").append(toIndentedString(sequenceNumber)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    resourceURL: ").append(toIndentedString(resourceURL)).append("\n");
    sb.append("    developerURN: ").append(toIndentedString(developerURN)).append("\n");
    sb.append("    actionResponse: ").append(toIndentedString(actionResponse)).append("\n");
    sb.append("    credentialProfile: ").append(toIndentedString(credentialProfile)).append("\n");
    sb.append("    credentialBlock: ").append(toIndentedString(credentialBlock)).append("\n");
    sb.append("    credentialsProfile: ").append(toIndentedString(credentialsProfile)).append("\n");
    sb.append("    applicationProfile: ").append(toIndentedString(applicationProfile)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    payloadHash: ").append(toIndentedString(payloadHash)).append("\n");
    sb.append("    messageSignature: ").append(toIndentedString(messageSignature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SequenceNumber");
    openapiFields.add("Phase");
    openapiFields.add("ResourceURL");
    openapiFields.add("DeveloperURN");
    openapiFields.add("ActionResponse");
    openapiFields.add("CredentialProfile");
    openapiFields.add("CredentialBlock");
    openapiFields.add("CredentialsProfile");
    openapiFields.add("ApplicationProfile");
    openapiFields.add("Payload");
    openapiFields.add("PayloadHash");
    openapiFields.add("MessageSignature");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OdapMessage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OdapMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OdapMessage is not found in the empty JSON string", OdapMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OdapMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OdapMessage` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("Phase") != null && !jsonObj.get("Phase").isJsonNull()) && !jsonObj.get("Phase").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Phase` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Phase").toString()));
      }
      if ((jsonObj.get("ResourceURL") != null && !jsonObj.get("ResourceURL").isJsonNull()) && !jsonObj.get("ResourceURL").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ResourceURL` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ResourceURL").toString()));
      }
      if ((jsonObj.get("DeveloperURN") != null && !jsonObj.get("DeveloperURN").isJsonNull()) && !jsonObj.get("DeveloperURN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DeveloperURN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DeveloperURN").toString()));
      }
      // validate the optional field `ActionResponse`
      if (jsonObj.get("ActionResponse") != null && !jsonObj.get("ActionResponse").isJsonNull()) {
        OdapMessageActionResponse.validateJsonObject(jsonObj.getAsJsonObject("ActionResponse"));
      }
      if ((jsonObj.get("CredentialProfile") != null && !jsonObj.get("CredentialProfile").isJsonNull()) && !jsonObj.get("CredentialProfile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CredentialProfile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CredentialProfile").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("CredentialBlock") != null && !jsonObj.get("CredentialBlock").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `CredentialBlock` to be an array in the JSON string but got `%s`", jsonObj.get("CredentialBlock").toString()));
      }
      // validate the optional field `CredentialsProfile`
      if (jsonObj.get("CredentialsProfile") != null && !jsonObj.get("CredentialsProfile").isJsonNull()) {
        PayloadProfile.validateJsonObject(jsonObj.getAsJsonObject("CredentialsProfile"));
      }
      if ((jsonObj.get("PayloadHash") != null && !jsonObj.get("PayloadHash").isJsonNull()) && !jsonObj.get("PayloadHash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PayloadHash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PayloadHash").toString()));
      }
      if ((jsonObj.get("MessageSignature") != null && !jsonObj.get("MessageSignature").isJsonNull()) && !jsonObj.get("MessageSignature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MessageSignature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MessageSignature").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OdapMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OdapMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OdapMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OdapMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<OdapMessage>() {
           @Override
           public void write(JsonWriter out, OdapMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OdapMessage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OdapMessage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OdapMessage
  * @throws IOException if the JSON string is invalid with respect to OdapMessage
  */
  public static OdapMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OdapMessage.class);
  }

 /**
  * Convert an instance of OdapMessage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

