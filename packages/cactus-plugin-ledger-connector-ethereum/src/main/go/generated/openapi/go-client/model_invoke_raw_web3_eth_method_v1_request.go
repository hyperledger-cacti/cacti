/*
Hyperledger Cacti Plugin - Connector Ethereum

Can perform basic tasks on a Ethereum ledger

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-ethereum

import (
	"encoding/json"
)

// checks if the InvokeRawWeb3EthMethodV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvokeRawWeb3EthMethodV1Request{}

// InvokeRawWeb3EthMethodV1Request struct for InvokeRawWeb3EthMethodV1Request
type InvokeRawWeb3EthMethodV1Request struct {
	// The name of the web3.eth method to invoke
	MethodName string `json:"methodName"`
	// The list of arguments to pass to web3.eth method specified in methodName
	Params []interface{} `json:"params,omitempty"`
}

// NewInvokeRawWeb3EthMethodV1Request instantiates a new InvokeRawWeb3EthMethodV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvokeRawWeb3EthMethodV1Request(methodName string) *InvokeRawWeb3EthMethodV1Request {
	this := InvokeRawWeb3EthMethodV1Request{}
	this.MethodName = methodName
	return &this
}

// NewInvokeRawWeb3EthMethodV1RequestWithDefaults instantiates a new InvokeRawWeb3EthMethodV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvokeRawWeb3EthMethodV1RequestWithDefaults() *InvokeRawWeb3EthMethodV1Request {
	this := InvokeRawWeb3EthMethodV1Request{}
	return &this
}

// GetMethodName returns the MethodName field value
func (o *InvokeRawWeb3EthMethodV1Request) GetMethodName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MethodName
}

// GetMethodNameOk returns a tuple with the MethodName field value
// and a boolean to check if the value has been set.
func (o *InvokeRawWeb3EthMethodV1Request) GetMethodNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MethodName, true
}

// SetMethodName sets field value
func (o *InvokeRawWeb3EthMethodV1Request) SetMethodName(v string) {
	o.MethodName = v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *InvokeRawWeb3EthMethodV1Request) GetParams() []interface{} {
	if o == nil || IsNil(o.Params) {
		var ret []interface{}
		return ret
	}
	return o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvokeRawWeb3EthMethodV1Request) GetParamsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Params) {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *InvokeRawWeb3EthMethodV1Request) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given []interface{} and assigns it to the Params field.
func (o *InvokeRawWeb3EthMethodV1Request) SetParams(v []interface{}) {
	o.Params = v
}

func (o InvokeRawWeb3EthMethodV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvokeRawWeb3EthMethodV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["methodName"] = o.MethodName
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	return toSerialize, nil
}

type NullableInvokeRawWeb3EthMethodV1Request struct {
	value *InvokeRawWeb3EthMethodV1Request
	isSet bool
}

func (v NullableInvokeRawWeb3EthMethodV1Request) Get() *InvokeRawWeb3EthMethodV1Request {
	return v.value
}

func (v *NullableInvokeRawWeb3EthMethodV1Request) Set(val *InvokeRawWeb3EthMethodV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableInvokeRawWeb3EthMethodV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableInvokeRawWeb3EthMethodV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvokeRawWeb3EthMethodV1Request(val *InvokeRawWeb3EthMethodV1Request) *NullableInvokeRawWeb3EthMethodV1Request {
	return &NullableInvokeRawWeb3EthMethodV1Request{value: val, isSet: true}
}

func (v NullableInvokeRawWeb3EthMethodV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvokeRawWeb3EthMethodV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


