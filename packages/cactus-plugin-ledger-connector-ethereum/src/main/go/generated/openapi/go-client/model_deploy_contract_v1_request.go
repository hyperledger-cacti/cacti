/*
Hyperledger Cacti Plugin - Connector Ethereum

Can perform basic tasks on a Ethereum ledger

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-ledger-connector-ethereum

import (
	"encoding/json"
)

// checks if the DeployContractV1Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployContractV1Request{}

// DeployContractV1Request struct for DeployContractV1Request
type DeployContractV1Request struct {
	Web3SigningCredential Web3SigningCredential `json:"web3SigningCredential"`
	Contract DeployContractV1RequestContract `json:"contract"`
	// The list of arguments to pass in to the constructor of the contract being deployed.
	ConstructorArgs []interface{} `json:"constructorArgs,omitempty"`
	GasConfig *GasTransactionConfig `json:"gasConfig,omitempty"`
	// Ether balance to send on deployment.
	Value *string `json:"value,omitempty"`
}

// NewDeployContractV1Request instantiates a new DeployContractV1Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployContractV1Request(web3SigningCredential Web3SigningCredential, contract DeployContractV1RequestContract) *DeployContractV1Request {
	this := DeployContractV1Request{}
	this.Web3SigningCredential = web3SigningCredential
	this.Contract = contract
	return &this
}

// NewDeployContractV1RequestWithDefaults instantiates a new DeployContractV1Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployContractV1RequestWithDefaults() *DeployContractV1Request {
	this := DeployContractV1Request{}
	return &this
}

// GetWeb3SigningCredential returns the Web3SigningCredential field value
func (o *DeployContractV1Request) GetWeb3SigningCredential() Web3SigningCredential {
	if o == nil {
		var ret Web3SigningCredential
		return ret
	}

	return o.Web3SigningCredential
}

// GetWeb3SigningCredentialOk returns a tuple with the Web3SigningCredential field value
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetWeb3SigningCredentialOk() (*Web3SigningCredential, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Web3SigningCredential, true
}

// SetWeb3SigningCredential sets field value
func (o *DeployContractV1Request) SetWeb3SigningCredential(v Web3SigningCredential) {
	o.Web3SigningCredential = v
}

// GetContract returns the Contract field value
func (o *DeployContractV1Request) GetContract() DeployContractV1RequestContract {
	if o == nil {
		var ret DeployContractV1RequestContract
		return ret
	}

	return o.Contract
}

// GetContractOk returns a tuple with the Contract field value
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetContractOk() (*DeployContractV1RequestContract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contract, true
}

// SetContract sets field value
func (o *DeployContractV1Request) SetContract(v DeployContractV1RequestContract) {
	o.Contract = v
}

// GetConstructorArgs returns the ConstructorArgs field value if set, zero value otherwise.
func (o *DeployContractV1Request) GetConstructorArgs() []interface{} {
	if o == nil || IsNil(o.ConstructorArgs) {
		var ret []interface{}
		return ret
	}
	return o.ConstructorArgs
}

// GetConstructorArgsOk returns a tuple with the ConstructorArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetConstructorArgsOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.ConstructorArgs) {
		return nil, false
	}
	return o.ConstructorArgs, true
}

// HasConstructorArgs returns a boolean if a field has been set.
func (o *DeployContractV1Request) HasConstructorArgs() bool {
	if o != nil && !IsNil(o.ConstructorArgs) {
		return true
	}

	return false
}

// SetConstructorArgs gets a reference to the given []interface{} and assigns it to the ConstructorArgs field.
func (o *DeployContractV1Request) SetConstructorArgs(v []interface{}) {
	o.ConstructorArgs = v
}

// GetGasConfig returns the GasConfig field value if set, zero value otherwise.
func (o *DeployContractV1Request) GetGasConfig() GasTransactionConfig {
	if o == nil || IsNil(o.GasConfig) {
		var ret GasTransactionConfig
		return ret
	}
	return *o.GasConfig
}

// GetGasConfigOk returns a tuple with the GasConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetGasConfigOk() (*GasTransactionConfig, bool) {
	if o == nil || IsNil(o.GasConfig) {
		return nil, false
	}
	return o.GasConfig, true
}

// HasGasConfig returns a boolean if a field has been set.
func (o *DeployContractV1Request) HasGasConfig() bool {
	if o != nil && !IsNil(o.GasConfig) {
		return true
	}

	return false
}

// SetGasConfig gets a reference to the given GasTransactionConfig and assigns it to the GasConfig field.
func (o *DeployContractV1Request) SetGasConfig(v GasTransactionConfig) {
	o.GasConfig = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DeployContractV1Request) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployContractV1Request) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DeployContractV1Request) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *DeployContractV1Request) SetValue(v string) {
	o.Value = &v
}

func (o DeployContractV1Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployContractV1Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["web3SigningCredential"] = o.Web3SigningCredential
	toSerialize["contract"] = o.Contract
	if !IsNil(o.ConstructorArgs) {
		toSerialize["constructorArgs"] = o.ConstructorArgs
	}
	if !IsNil(o.GasConfig) {
		toSerialize["gasConfig"] = o.GasConfig
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableDeployContractV1Request struct {
	value *DeployContractV1Request
	isSet bool
}

func (v NullableDeployContractV1Request) Get() *DeployContractV1Request {
	return v.value
}

func (v *NullableDeployContractV1Request) Set(val *DeployContractV1Request) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployContractV1Request) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployContractV1Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployContractV1Request(val *DeployContractV1Request) *NullableDeployContractV1Request {
	return &NullableDeployContractV1Request{value: val, isSet: true}
}

func (v NullableDeployContractV1Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployContractV1Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


