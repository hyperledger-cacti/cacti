/*
Hyperledger Core API

Contains/describes the core API types for Cactus. Does not describe actual endpoints on its own as this is left to the implementing plugins who can import and re-use commonly needed type definitions from this specification. One example of said commonly used type definitions would be the types related to consortium management, cactus nodes, ledgers, etc..

API version: 2.0.0-rc.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-core-api

import (
	"encoding/json"
)

// checks if the CactusNodeAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CactusNodeAllOf{}

// CactusNodeAllOf struct for CactusNodeAllOf
type CactusNodeAllOf struct {
	Id string `json:"id"`
	ConsortiumId string `json:"consortiumId"`
	MemberId string `json:"memberId"`
	// Stores an array of Ledger entity IDs that are reachable (routable) via this Cactus Node. This information is used by the client side SDK API client to figure out at runtime where to send API requests that are specific to a certain ledger such as requests to execute transactions.
	LedgerIds []string `json:"ledgerIds"`
	PluginInstanceIds []string `json:"pluginInstanceIds"`
}

// NewCactusNodeAllOf instantiates a new CactusNodeAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCactusNodeAllOf(id string, consortiumId string, memberId string, ledgerIds []string, pluginInstanceIds []string) *CactusNodeAllOf {
	this := CactusNodeAllOf{}
	this.Id = id
	this.ConsortiumId = consortiumId
	this.MemberId = memberId
	this.LedgerIds = ledgerIds
	this.PluginInstanceIds = pluginInstanceIds
	return &this
}

// NewCactusNodeAllOfWithDefaults instantiates a new CactusNodeAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCactusNodeAllOfWithDefaults() *CactusNodeAllOf {
	this := CactusNodeAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *CactusNodeAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CactusNodeAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CactusNodeAllOf) SetId(v string) {
	o.Id = v
}

// GetConsortiumId returns the ConsortiumId field value
func (o *CactusNodeAllOf) GetConsortiumId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConsortiumId
}

// GetConsortiumIdOk returns a tuple with the ConsortiumId field value
// and a boolean to check if the value has been set.
func (o *CactusNodeAllOf) GetConsortiumIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConsortiumId, true
}

// SetConsortiumId sets field value
func (o *CactusNodeAllOf) SetConsortiumId(v string) {
	o.ConsortiumId = v
}

// GetMemberId returns the MemberId field value
func (o *CactusNodeAllOf) GetMemberId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MemberId
}

// GetMemberIdOk returns a tuple with the MemberId field value
// and a boolean to check if the value has been set.
func (o *CactusNodeAllOf) GetMemberIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberId, true
}

// SetMemberId sets field value
func (o *CactusNodeAllOf) SetMemberId(v string) {
	o.MemberId = v
}

// GetLedgerIds returns the LedgerIds field value
func (o *CactusNodeAllOf) GetLedgerIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.LedgerIds
}

// GetLedgerIdsOk returns a tuple with the LedgerIds field value
// and a boolean to check if the value has been set.
func (o *CactusNodeAllOf) GetLedgerIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LedgerIds, true
}

// SetLedgerIds sets field value
func (o *CactusNodeAllOf) SetLedgerIds(v []string) {
	o.LedgerIds = v
}

// GetPluginInstanceIds returns the PluginInstanceIds field value
func (o *CactusNodeAllOf) GetPluginInstanceIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PluginInstanceIds
}

// GetPluginInstanceIdsOk returns a tuple with the PluginInstanceIds field value
// and a boolean to check if the value has been set.
func (o *CactusNodeAllOf) GetPluginInstanceIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PluginInstanceIds, true
}

// SetPluginInstanceIds sets field value
func (o *CactusNodeAllOf) SetPluginInstanceIds(v []string) {
	o.PluginInstanceIds = v
}

func (o CactusNodeAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CactusNodeAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["consortiumId"] = o.ConsortiumId
	toSerialize["memberId"] = o.MemberId
	toSerialize["ledgerIds"] = o.LedgerIds
	toSerialize["pluginInstanceIds"] = o.PluginInstanceIds
	return toSerialize, nil
}

type NullableCactusNodeAllOf struct {
	value *CactusNodeAllOf
	isSet bool
}

func (v NullableCactusNodeAllOf) Get() *CactusNodeAllOf {
	return v.value
}

func (v *NullableCactusNodeAllOf) Set(val *CactusNodeAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCactusNodeAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCactusNodeAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCactusNodeAllOf(val *CactusNodeAllOf) *NullableCactusNodeAllOf {
	return &NullableCactusNodeAllOf{value: val, isSet: true}
}

func (v NullableCactusNodeAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCactusNodeAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


